100:00:00,801 --> 00:00:02,528Now that we have our key collection 200:00:02,528 --> 00:00:04,528mechanic ready we need to make the300:00:04,528 --> 00:00:05,913doors in the level.400:00:06,413 --> 00:00:08,413We have two types of door in this game,500:00:08,413 --> 00:00:10,789first we have a single sliding door600:00:10,789 --> 00:00:12,789that will be for the normal rooms in the level700:00:12,789 --> 00:00:14,789and secondly we have a pair of double800:00:14,789 --> 00:00:16,789sliding doors for the list at the end.900:00:16,789 --> 00:00:18,789First we will make the single door.1000:00:20,190 --> 00:00:22,190In the Models folder, start by locating1100:00:22,190 --> 00:00:25,052the model doorGenericSlide.1200:00:25,552 --> 00:00:27,552Drag and drop this in to the scene view1300:00:28,392 --> 00:00:33,384and position it at (-6, 0, 7).1400:00:33,884 --> 00:00:35,884Then double click it's name in the hierarchy1500:00:35,884 --> 00:00:37,884to focus on it in the scene view.1600:00:39,972 --> 00:00:41,972You will notice that it is rotated incorrectly1700:00:41,972 --> 00:00:45,317so put 90 degrees in the Y axis.1800:00:45,817 --> 00:00:47,817Notice that the door is split in to parent1900:00:47,817 --> 00:00:49,817and child game objects.2000:00:51,653 --> 00:00:53,653The child object has the mesh renderer on2100:00:53,653 --> 00:00:56,375it, so here we will check Use Light Probes2200:00:56,375 --> 00:00:58,375to give the door lighting.2300:00:59,732 --> 00:01:01,732We want to add a collider to both the parent2400:01:01,732 --> 00:01:03,732and the child game objects.2500:01:03,732 --> 00:01:05,732First the parent game object,2600:01:05,732 --> 00:01:07,732which will remain stationary, needs a2700:01:07,732 --> 00:01:09,732spherical trigger collider to detect2800:01:09,732 --> 00:01:11,327when the player or an enemy is approaching2900:01:11,327 --> 00:01:12,463approaching the door.3000:01:13,328 --> 00:01:15,382Select the parent object, choose3100:01:15,382 --> 00:01:18,856Add Component - Physics - Sphere Collider.3200:01:19,545 --> 00:01:21,545Currently it is too small and not quite3300:01:21,545 --> 00:01:23,545centred, so we will adjust the collier3400:01:23,545 --> 00:01:27,410slightly. Set the Y centre value to 1,3500:01:28,338 --> 00:01:30,338and set the radius to 3.3600:01:35,249 --> 00:01:37,249Next we are going to add a box collider to3700:01:37,249 --> 00:01:39,249the child game object which contains the3800:01:39,249 --> 00:01:40,728mesh of the door itself.3900:01:41,228 --> 00:01:43,228Select the child object and go to4000:01:43,228 --> 00:01:47,037Add Component - Physics - Box Collider.4100:01:48,684 --> 00:01:50,684This box collider will fit the exact shape4200:01:50,684 --> 00:01:52,684so we do not need to make any adjustments.4300:01:53,436 --> 00:01:55,436The next thing to do is to make the animator4400:01:55,436 --> 00:01:57,972controller for the door opening and closing.4500:01:57,972 --> 00:01:59,968Highlight the Animators folder in the4600:01:59,968 --> 00:02:02,503project panel and click Create4700:02:02,503 --> 00:02:04,503and choose Animator Controller.4800:02:04,503 --> 00:02:07,458Name the animator SingleDoorAnimator.4900:02:08,349 --> 00:02:10,349We are only going to need one parameter for5000:02:10,349 --> 00:02:12,849this animator controller. We need to know5100:02:12,849 --> 00:02:14,849whether it should be open or closed.5200:02:14,849 --> 00:02:17,868As such a Boolean parameter is all we need.5300:02:18,368 --> 00:02:20,037Open the animator panel5400:02:20,490 --> 00:02:22,983and under parameters click the plus icon.5500:02:23,973 --> 00:02:25,288Choose Bool5600:02:26,229 --> 00:02:28,229and name this Open.5700:02:29,220 --> 00:02:31,220Next we can drag in the animations we want5800:02:31,220 --> 00:02:33,688to have as our states in the animator.5900:02:34,262 --> 00:02:36,262Within the SingleDoor FBX there are two6000:02:36,262 --> 00:02:38,857animations, Closed and Open.6100:02:39,858 --> 00:02:42,528Open the Models folder and reselect6200:02:42,528 --> 00:02:44,528door_genericSlide.6300:02:45,028 --> 00:02:47,028Click on the Animations tab at the top6400:02:47,028 --> 00:02:50,055and you will see closed and open animations.6500:02:50,555 --> 00:02:52,555Both of these animations are actually just6600:02:52,555 --> 00:02:54,555stationary positions that we want the doors6700:02:54,555 --> 00:02:55,999to transition between.6800:02:56,499 --> 00:02:58,499We want the default to be closed so we will6900:02:58,499 --> 00:03:01,445drag that in first. Expand the model7000:03:01,445 --> 00:03:04,941and drag in Closed as the default state.7100:03:06,865 --> 00:03:08,865And next drag in Open.7200:03:10,802 --> 00:03:12,802Now we need to be able to transition between7300:03:12,802 --> 00:03:14,802the two states. To transition from7400:03:14,802 --> 00:03:17,571closed to open we need the open parameter7500:03:17,571 --> 00:03:20,509to be true. Conversely, we need the open7600:03:20,509 --> 00:03:23,253parameter to be false to transition back.7700:03:23,253 --> 00:03:25,253So let us create these transitions using the 7800:03:25,253 --> 00:03:27,253Open parameter as the condition.7900:03:27,253 --> 00:03:30,667Right click on Closed, select Make Transition8000:03:31,406 --> 00:03:33,050and click Open.8100:03:33,906 --> 00:03:35,906Select the transition8200:03:37,843 --> 00:03:40,120and select Open, leaving the default8300:03:40,120 --> 00:03:42,120of true as the condition.8400:03:43,212 --> 00:03:46,402Then right click on Open, choose Make Transition8500:03:46,402 --> 00:03:48,402and select Closed.8600:03:48,402 --> 00:03:50,402Select the transition8700:03:50,402 --> 00:03:53,743and under conditions set Open to be false.8800:03:54,432 --> 00:03:55,651The last thing we need to do with this8900:03:55,651 --> 00:03:57,651animator controller is to stretch the9000:03:57,651 --> 00:04:00,750transitions. The longer the transitions are9100:04:00,750 --> 00:04:03,558the smoother and nicer the door motions will look.9200:04:03,869 --> 00:04:06,501Let us stretch this by 150%9300:04:06,501 --> 00:04:08,995by dragging the End handle as shown.9400:04:10,601 --> 00:04:13,008You will see the percentage is highlighted9500:04:13,008 --> 00:04:15,008next to Open.9600:04:19,062 --> 00:04:22,363Reselect the first transition and do the same.9700:04:27,980 --> 00:04:29,391When you preview you should see9800:04:29,391 --> 00:04:31,391a result like this.9900:04:33,617 --> 00:04:35,617This simply means that the animation will10000:04:35,617 --> 00:04:37,617take place over a longer period of time10100:04:37,617 --> 00:04:40,394and the transition will occur more slowly.10200:04:41,402 --> 00:04:43,402With the animator controller finished10300:04:43,402 --> 00:04:45,402we can drag this asset on to the animator10400:04:45,402 --> 00:04:47,402component of our door.10500:04:47,402 --> 00:04:50,286So reselect door_genericSlide in the hierarchy,10600:04:52,074 --> 00:04:54,826select the Animators folder in the project10700:04:54,826 --> 00:04:56,826and drag SingleDoorAnimator10800:04:56,826 --> 00:04:59,949on to the Controller variable in the animator.10900:05:01,218 --> 00:05:03,218One final thing we need to do is ensure11000:05:03,218 --> 00:05:05,218that Root Motion is not applied.11100:05:05,218 --> 00:05:07,218So uncheck the box here.11200:05:08,562 --> 00:05:11,164Since the doors have colliders that are moving11300:05:11,164 --> 00:05:13,443we need them to have rigidbodies.11400:05:13,443 --> 00:05:14,896We do not want them to be effected by11500:05:14,896 --> 00:05:17,500collisions so we will make then kinomatic.11600:05:18,000 --> 00:05:20,266Select the child object and click 11700:05:20,266 --> 00:05:23,764Add Component - Physics - Rigidbody.11800:05:24,680 --> 00:05:26,680Uncheck Use Gravity and check 11900:05:26,680 --> 00:05:28,350Is Kinomatic.12000:05:28,350 --> 00:05:30,084The doors are going to need to be able to12100:05:30,084 --> 00:05:32,084play audio clips for when they are opened12200:05:32,084 --> 00:05:34,084and closed and for when the player12300:05:34,084 --> 00:05:36,084is denied access. As such we will need12400:05:36,084 --> 00:05:38,413to add an audio source component.12500:05:39,164 --> 00:05:41,798Reselect the parent object and go to12600:05:41,798 --> 00:05:45,931Add Component - Audio - Audio Source.12700:05:46,859 --> 00:05:48,859Next we need a script to control when12800:05:48,859 --> 00:05:50,859the doors are opened and closed.12900:05:50,859 --> 00:05:52,859We will call it DoorAnimation.13000:05:52,859 --> 00:05:54,859Scroll to the bottom of the inspector13100:05:54,859 --> 00:05:58,173and click Add Component and choose New Script.13200:05:58,173 --> 00:06:00,173Let us call this DoorAnimation.13300:06:03,180 --> 00:06:05,180Launch the script for editing,13400:06:06,625 --> 00:06:07,888and prepare it.13500:06:08,388 --> 00:06:10,388An important skill in programming is13600:06:10,388 --> 00:06:12,388making sure your code is as reusable as13700:06:12,388 --> 00:06:14,388possible. To that end we are going to make13800:06:14,388 --> 00:06:16,388this script work for both the single doors13900:06:16,388 --> 00:06:18,388that we have made and the double doors14000:06:18,388 --> 00:06:20,388on the lift that require the keycard.14100:06:20,388 --> 00:06:22,021To determine the difference we are going14200:06:22,021 --> 00:06:24,021to make our first public variable a14300:06:24,021 --> 00:06:26,640Boolean that we will call requireKey.14400:06:26,640 --> 00:06:27,938We can make this true in the inspector14500:06:27,938 --> 00:06:29,938for the double doors later.14600:06:31,106 --> 00:06:33,106We also need two public variables for the14700:06:33,106 --> 00:06:35,526audio clips. One to hold the swish sound14800:06:35,526 --> 00:06:37,526of the door opening, and the other to play14900:06:37,526 --> 00:06:39,526a buzzer when the player tries to go through15000:06:39,526 --> 00:06:41,526a door that they need a key for.15100:06:42,454 --> 00:06:44,454Next we are going to need a series of references15200:06:44,454 --> 00:06:47,218we will store as private variables.15300:06:47,218 --> 00:06:49,218Firstly, since we are using the animator15400:06:49,218 --> 00:06:52,124component we will need a reference to that.15500:06:53,468 --> 00:06:55,128Since we are working with the animator15600:06:55,128 --> 00:06:57,128component we want to be able to use our15700:06:57,128 --> 00:06:59,128HashIDs script.15800:07:00,611 --> 00:07:02,611We will need to check whether the player has15900:07:02,611 --> 00:07:04,357entered the trigger zone so we will need16000:07:04,357 --> 00:07:06,357a reference to the player game object too.16100:07:07,197 --> 00:07:09,197If the door requires a key we will16200:07:09,197 --> 00:07:11,197need to know if the player has the key and16300:07:11,197 --> 00:07:12,881for that we will need a reference to the 16400:07:12,881 --> 00:07:14,881PlayerInventory script that we did in the16500:07:14,881 --> 00:07:16,881last assignment.16600:07:17,381 --> 00:07:19,381The last variable is not a reference16700:07:19,381 --> 00:07:21,533and requires a little explanation.16800:07:21,533 --> 00:07:23,533We want the enemies to be able to go through16900:07:23,533 --> 00:07:25,533the doors as well as the player.17000:07:25,533 --> 00:07:27,533This means we could potentially have multiple17100:07:27,533 --> 00:07:29,533triggering colliders at the same time.17200:07:29,533 --> 00:07:31,533As such, we need to be able to know17300:07:31,533 --> 00:07:33,533whether when a collider enters or exits17400:07:33,533 --> 00:07:35,533the trigger it should effect the state17500:07:35,533 --> 00:07:37,026that the door is in.17600:07:37,026 --> 00:07:38,647The door should be closed when there are17700:07:38,647 --> 00:07:41,253no triggering colliders in the trigger zone,17800:07:41,253 --> 00:07:43,253and it should be open if there are more than17900:07:43,253 --> 00:07:45,0250 triggering colliders.18000:07:45,025 --> 00:07:47,025So we can keep track of the number of triggering18100:07:47,025 --> 00:07:49,025colliders we are going to have using18200:07:49,025 --> 00:07:50,784an integer called Count.18300:07:51,284 --> 00:07:54,016Now we have all of our class variables setup18400:07:54,016 --> 00:07:56,016we can setup these references in the awake18500:07:56,016 --> 00:07:58,899function using FindGameObjectWithTag18600:07:58,899 --> 00:08:01,304and GetComponent as we have in the past.18700:08:17,190 --> 00:08:19,190We are mainly going to use two functions18800:08:19,190 --> 00:08:21,605in this script. OnTriggerEnter to determine18900:08:21,605 --> 00:08:23,605if the count needs to be increased and19000:08:23,605 --> 00:08:25,605OnTriggerExit to determine if the 19100:08:25,605 --> 00:08:27,605count needs to be decreased.19200:08:27,605 --> 00:08:29,605We will start with OnTriggerEnter.19300:08:31,063 --> 00:08:33,063Firstly we need to check whether the game object19400:08:33,063 --> 00:08:35,818of the triggering collider is the player.19500:08:37,629 --> 00:08:39,629If it is then we need to check if this19600:08:39,629 --> 00:08:41,629particular door requires a key.19700:08:45,582 --> 00:08:47,582If the door does require a key we need19800:08:47,582 --> 00:08:49,582to check if the player has that key.19900:08:53,434 --> 00:08:55,296If the player does have the key then the20000:08:55,296 --> 00:08:57,296door should open, so we should increment20100:08:57,296 --> 00:08:59,016the count variable.20200:08:59,016 --> 00:09:01,016If the player does not have the key20300:09:01,016 --> 00:09:03,508then we need to set the audio sources clip20400:09:03,508 --> 00:09:05,508to the access denied clip and play it.20500:09:08,931 --> 00:09:10,931Now we come back to what happens if the door20600:09:10,931 --> 00:09:12,931does not require a key. If it does not20700:09:12,931 --> 00:09:14,931then anyone can enter the door20800:09:14,931 --> 00:09:17,622and so the count should simply increase.20900:09:21,250 --> 00:09:23,250We also need to account for the enemies21000:09:23,250 --> 00:09:25,250opening the door. So if the triggering21100:09:25,250 --> 00:09:27,791game object is not the player we should check21200:09:27,791 --> 00:09:29,791if it has the enemy tag.21300:09:29,791 --> 00:09:31,791We do this using an Else If.21400:09:34,219 --> 00:09:36,219Next we are going to use a keyword that21500:09:36,219 --> 00:09:38,219we have not used before.21600:09:38,219 --> 00:09:39,613The enemies are going to have two21700:09:39,613 --> 00:09:42,707colliders on them. A large spherical collider21800:09:42,707 --> 00:09:45,278that will act as their range of hearing and sight21900:09:45,278 --> 00:09:47,278and also a capsule collider22000:09:47,278 --> 00:09:49,278so that they can bump in to other colliders22100:09:49,278 --> 00:09:50,750and interact with the world.22200:09:51,387 --> 00:09:53,387We only want the doors to open when the22300:09:53,387 --> 00:09:55,387capsule collider enters the trigger zone.22400:09:55,887 --> 00:09:57,887To make sure this is the case we need22500:09:57,887 --> 00:10:00,242a way of checking that other, I.E., the collider22600:10:00,242 --> 00:10:02,981we are checking, is a capsule collider.22700:10:03,523 --> 00:10:05,195We do this very simply with the22800:10:05,195 --> 00:10:07,195Is keyword.22900:10:08,905 --> 00:10:11,524If this condition is true then we want to23000:10:11,524 --> 00:10:13,059increment the count.23100:10:14,377 --> 00:10:16,377Now that we have finished using OnTriggerEnter23200:10:16,377 --> 00:10:18,377to increment the count we are going to23300:10:18,377 --> 00:10:20,377use OnTriggerExit similarly23400:10:20,377 --> 00:10:22,377to decrement the count.23500:10:23,923 --> 00:10:25,923Since we do not need to worry about playing23600:10:25,923 --> 00:10:27,923the access denied clip when the count is23700:10:27,923 --> 00:10:29,923decreased we can condense the23800:10:29,923 --> 00:10:31,582conditions for decrementing the count.23900:10:31,582 --> 00:10:33,582The condition is that if the colliding24000:10:34,082 --> 00:10:36,08224100:10:36,582 --> 00:10:38,582object's tag is the enemy and the24200:10:38,582 --> 00:10:40,742collider is a capsule then we can24300:10:40,742 --> 00:10:43,083decrement the count. Note here that we are 24400:10:43,083 --> 00:10:46,369using two vertical lines to represent Or.24500:10:47,678 --> 00:10:49,678Under these conditions we decrement24600:10:49,678 --> 00:10:51,678the count. We want to make sure however that24700:10:51,678 --> 00:10:54,276we do not drop the count below 0.24800:10:54,707 --> 00:10:56,996Here we could simply say if count is24900:10:56,996 --> 00:10:59,786greater than 0, decrement the count.25000:11:00,286 --> 00:11:02,286But we are going to look at a different way25100:11:02,286 --> 00:11:05,740to achieve this using the mathf.max function.25200:11:06,101 --> 00:11:08,101This function takes a series of numbers25300:11:08,101 --> 00:11:10,101and returns the highest.25400:11:10,101 --> 00:11:12,101So if we give it 025500:11:12,101 --> 00:11:14,440and the value of count-125600:11:14,815 --> 00:11:16,815then if the count is already 025700:11:16,815 --> 00:11:18,426it will return 0.25800:11:18,426 --> 00:11:21,012For example, if our count is already at 025900:11:21,012 --> 00:11:23,730-1 will be the lower of the two values26000:11:23,730 --> 00:11:25,730so count will be set to 0.26100:11:25,730 --> 00:11:28,641This effectively stops count from being set to 026200:11:28,641 --> 00:11:31,545but also subtracts 1 if it is greater than 0.26300:11:32,045 --> 00:11:34,045The final function we need to use in this26400:11:34,045 --> 00:11:36,045script is update. The first thing we need 26500:11:36,045 --> 00:11:38,834to update is the animator parameter Open.26600:11:39,334 --> 00:11:41,334This parameter is true when the count26700:11:41,334 --> 00:11:44,457is greater than 0 and false when otherwise.26800:11:44,957 --> 00:11:47,476The statement count is more than 026900:11:47,476 --> 00:11:50,779evaluates to true if the count is greater than 027000:11:50,779 --> 00:11:52,453and false otherwise.27100:11:52,453 --> 00:11:54,781So we can set the Open parameter equal27200:11:54,781 --> 00:11:56,781to the result of that statement.27300:11:57,281 --> 00:11:59,281We also need to deal with when the door swish27400:11:59,281 --> 00:12:01,003clip will be played.27500:12:01,003 --> 00:12:03,409It should be played when the door is moving,27600:12:03,409 --> 00:12:06,213I.E., when the animator is in transition27700:12:06,968 --> 00:12:09,613and when the audio is not already playing.27800:12:09,613 --> 00:12:12,928The value 0 in IsInTransition simply represents27900:12:12,928 --> 00:12:14,928the base layer of the animator.28000:12:17,872 --> 00:12:19,872Now our script is complete and we can save28100:12:19,872 --> 00:12:21,872it and return to the editor.28200:12:25,434 --> 00:12:27,434As the script is already applied28300:12:27,434 --> 00:12:29,434we simply have to apply to two audio clips28400:12:29,434 --> 00:12:31,943to the script's public variables28500:12:31,943 --> 00:12:33,943and then our single door will be ready.28600:12:34,733 --> 00:12:36,151In the script component at the bottom28700:12:36,151 --> 00:12:38,652of the inspector open the audio folder28800:12:38,652 --> 00:12:41,499in the project panel and drag and drop28900:12:41,499 --> 00:12:44,417door_accessDenied to Access Denied Clip29000:12:44,917 --> 00:12:47,648and door_open to Door Swish Clip.29100:12:49,194 --> 00:12:51,194Finally we can drag this single door29200:12:51,194 --> 00:12:53,194in to the project folder in order to save29300:12:53,194 --> 00:12:54,855it as a prefab.29400:12:55,796 --> 00:12:57,796Drag and drop door_genericSlide from the29500:12:57,796 --> 00:13:01,159hierarchy and drop it in to the prefabs folder.29600:13:02,213 --> 00:13:03,831Now we can position the rest of the29700:13:03,831 --> 00:13:05,479doors around the level.29800:13:08,776 --> 00:13:11,548Collapse the parent object of door_genericSlide29900:13:11,548 --> 00:13:13,000and then select it.30000:13:14,325 --> 00:13:16,325Go to Edit - Duplicate30100:13:16,699 --> 00:13:19,722or command-D on mac or control-D on PC30200:13:20,474 --> 00:13:22,474and then position the duplicate door30300:13:22,474 --> 00:13:26,497at (-15.9, 0, 7).30400:13:28,068 --> 00:13:30,068Duplicate once more30500:13:32,761 --> 00:13:37,763and position this door at (-7.9, 0, 37).30600:13:41,602 --> 00:13:44,310Now let us save our scene and project30700:13:45,060 --> 00:13:47,060and test out our game.30800:13:53,710 --> 00:13:55,710As you can see our player character bumps30900:13:55,710 --> 00:13:58,166in to the door. This is because we forgot31000:13:58,166 --> 00:14:00,925to check Is Trigger on the sphere collider.31100:14:03,681 --> 00:14:05,681Select any of the door_genericSlide's31200:14:05,681 --> 00:14:09,014and check Is Trigger on the sphere collider.31300:14:09,479 --> 00:14:11,479Then hit the apply button at the top of31400:14:11,479 --> 00:14:14,221the inspector. This will save the change up31500:14:14,221 --> 00:14:16,221to the prefab so that the other doors31600:14:16,221 --> 00:14:17,881will now have this change.31700:14:17,881 --> 00:14:19,881This is the beauty of using prefabs31800:14:19,881 --> 00:14:21,881for objects that you are going to duplicate.31900:14:22,532 --> 00:14:24,532If we play the game again32000:14:26,847 --> 00:14:28,847we should see that the doors now work.32100:14:40,147 --> 00:14:41,908Now our assignment is complete.32200:14:41,908 --> 00:14:43,908One final thing to do is tidy up the script32300:14:43,908 --> 00:14:45,604that we made on our object.32400:14:46,320 --> 00:14:49,380Select the Assets folder, go in to Scripts32500:14:50,334 --> 00:14:52,334and then drop the DoorAnimation script32600:14:52,334 --> 00:14:54,334in to the LevelDynamics folder32700:14:55,578 --> 00:14:57,578and we will save our scene and project32800:14:57,578 --> 00:14:59,578one more time32900:15:01,691 --> 00:15:03,122and we are done.33000:15:03,713 --> 00:15:05,713In the next assignment we will be dealing with33100:15:05,713 --> 00:15:07,128the double doors that lead to the lift33200:15:07,128 --> 00:15:08,824at the end of the level.