1
00:00:00,000 --> 00:00:01,818
プロジェクトにおける今回のチャプターでは、

2
00:00:01,818 --> 00:00:03,402
ゲームにおけるプレイヤー キャラクターの

3
00:00:03,402 --> 00:00:05,402
作成方法を見ていきます。

4
00:00:05,402 --> 00:00:07,402
プレイヤーはイースンという名前の少年であり、
5
00:00:07,402 --> 00:00:09,402
Unity 研究所の施設でのツアー中に迷子となって

6
00:00:09,402 --> 00:00:11,402
実験区画（シミュレーション ゾーン） に

7
00:00:11,402 --> 00:00:12,288
閉じ込められています。

8
00:00:13,064 --> 00:00:15,064
最初のステップはシーンにモデルを
9
00:00:15,064 --> 00:00:17,064
ドラッグすることです。

10
00:00:17,064 --> 00:00:20,654
Models フォルダにモデルはあり、 char_ethan という名前がついています。

11
00:00:20,654 --> 00:00:22,654
それでは Hierarchy ビューにこれをドラッグして下さい。

12
00:00:23,789 --> 00:00:25,789
次に シーン ビュー 上でマウスを置いたまま

13
00:00:25,789 --> 00:00:27,789
F キーを押下してモデルにフォーカスをあてます。

14
00:00:30,554 --> 00:00:32,554
次にプレイヤーの位置を原点の少し左にずらしていきます。

15
00:00:32,554 --> 00:00:34,554
このためスタート位置を

16
00:00:34,554 --> 00:00:37,706
(-2.5, 0, 0) にセットします。

17
00:00:42,115 --> 00:00:44,115
次に Player タグをつけていきます。

18
00:00:44,115 --> 00:00:46,115
インスペクタの上部にある Tag ドロップダウンメニューから

19
00:00:46,115 --> 00:00:48,115
Playerを選択します。

20
00:00:49,167 --> 00:00:51,167
プレイヤー モデルは複数のパーツにより構成されています。

21
00:00:51,167 --> 00:00:53,694
さらにスキン メッシュ レンダラも複数あります。

22
00:00:54,540 --> 00:00:57,042
char_ethan 階層を展開してそれらを探して下さい。

23
00:00:57,666 --> 00:00:59,666
確認ポイントとして

24
00:00:59,666 --> 00:01:02,895

board, body glass, harness すべてで Light Probe を使用するようにして、

25
00:01:02,895 --> 00:01:04,895
動的ライティングが反映されるようにします。

26
00:01:05,713 --> 00:01:07,060
すべて選択してハイライトして下さい。

27
00:01:08,251 --> 00:01:10,251
さらに Skin Mesh Renderer で、 Use Light Probes チェックボックスを

28
00:01:10,251 --> 00:01:12,251
オンにして下さい。

29
00:01:13,594 --> 00:01:15,594
プレイヤーにおけるもっとも重要なパーツのひとつは

30
00:01:15,594 --> 00:01:17,594
制御コントロールです。

31
00:01:17,594 --> 00:01:20,376
Input Manager をみて、どうなっている確認をしていきます。

32
00:01:20,376 --> 00:01:21,419
メニューから

33
00:01:21,419 --> 00:01:25,125
Edit - Project Settings - Input を選択します。

34
00:01:27,020 --> 00:01:29,020
AxesにおけるHorizontal および Vertical の設定は、

35
00:01:29,020 --> 00:01:30,726
ほぼ Unity プロジェクトのデフォルトどおり

36
00:01:30,726 --> 00:01:33,156
になっています。唯一違うのは、

37
00:01:33,156 --> 00:01:35,641
Snap チェックボックスがオフであることです。

38
00:01:36,084 --> 00:01:38,084
この意味は同じ Axis における反対のボタンが

39
00:01:38,084 --> 00:01:40,680
押されたとき、Axis は 0 にならない

40
00:01:40,680 --> 00:01:43,210
ということです。プレイヤーが必要なアクションを行うには

41
00:01:43,210 --> 00:01:44,833
Input がもういくつか必要です。

42
00:01:44,833 --> 00:01:47,226
初めに、ユーザが走るかわりに

43
00:01:47,226 --> 00:01:49,226
忍び足（Sneak）をする操作をする

44
00:01:49,226 --> 00:01:50,495
ボタンが必要です。

45
00:01:50,995 --> 00:01:53,148
今回は左 Shift キーを割り当てましたが、

46
00:01:53,148 --> 00:01:55,148
スクリプトのなかでは GetButton を

47
00:01:55,148 --> 00:01:57,148
GetKey の代わりに使用するため、

48
00:01:57,148 --> 00:01:58,182
スクリプトを編集することなく

49
00:01:58,182 --> 00:01:59,947
コンフィグを変更することが出来ます。

50
00:01:59,947 --> 00:02:02,461
Sneak という名前を参照すれば良いだけです。

51
00:02:02,961 --> 00:02:04,961
次にユーザが

52
00:02:04,961 --> 00:02:07,499
門番の注意を引く動作のためのボタンが必要です。

53
00:02:07,499 --> 00:02:09,499
今回はX キーを割り当てました。

54
00:02:11,573 --> 00:02:14,268
スイッチ動作については Z を割り当てました。

55
00:02:16,508 --> 00:02:18,508
次にプレイヤーにコンポーネント追加を行うことに

56
00:02:18,508 --> 00:02:21,106
します。Ethan モデルは アニメーションつきの

57
00:02:21,106 --> 00:02:23,301
コンポーネントがデフォルトでついていて、

58
00:02:23,301 --> 00:02:25,954
設定は変更する必要ありません。

59
00:02:25,954 --> 00:02:27,954
後ほど Animator Controller を追加していきます。

60
00:02:28,371 --> 00:02:30,371
プレイヤーはレベルの壁と

61
00:02:30,371 --> 00:02:32,371
衝突する必要があるため、 

62
00:02:32,371 --> 00:02:34,358
Capsule Collider をアタッチします。

63
00:02:34,358 --> 00:02:37,646
Add Component - Physics - Capsule Collider を選択します。

64
00:02:38,381 --> 00:02:42,965
Capsule Collider の Center は (0, 1, 0) にします。

65
00:02:48,534 --> 00:02:51,274
半径は 0.4 にします。

66
00:02:53,514 --> 00:02:55,514
高さは 2 にします。

67
00:02:57,934 --> 00:02:59,934
プレイヤーには 移動するコライダが必要であるため

68
00:02:59,934 --> 00:03:01,934
Rigidbody コンポーネントが必要です。

69
00:03:02,572 --> 00:03:05,831
Add Component をクリックして Physics - Rigidbody を選択して下さい。

70
00:03:06,331 --> 00:03:08,331
物理作用により曲がるのではなく、

71
00:03:08,331 --> 00:03:10,968
プレイヤー操作で曲がるようにして

72
00:03:10,968 --> 00:03:12,968
それ以外の場合にプレイヤーが曲がるようにしたくないので

73
00:03:12,968 --> 00:03:15,313
すべての軸で回転のフリーズを行います。

74
00:03:15,313 --> 00:03:17,849
Constraints の下にある

75
00:03:17,849 --> 00:03:19,321
X, Y および Z のチェックボックスをオンにします。

76
00:03:19,321 --> 00:03:20,781
またプレイヤーが衝突により

77
00:03:20,781 --> 00:03:22,781
宙に浮くことを回避するため

78
00:03:22,781 --> 00:03:25,282
垂直方向の動作も制限していきます。

79
00:03:25,282 --> 00:03:27,765
Freeze Position にある Y 軸のチェックボックスをオンにします。

80
00:03:28,293 --> 00:03:30,293
プレイヤーが走る際は足音が鳴るようにしたいため、

81
00:03:30,293 --> 00:03:32,293
Audio Source コンポーネントも

82
00:03:32,293 --> 00:03:34,293
必要であり、足音 (Footsteps) 

83
00:03:34,293 --> 00:03:35,859
のオーディオクリップをアタッチ出来ます。

84
00:03:36,442 --> 00:03:38,044
ゲーム開始時にサウンド再生はせずに

85
00:03:38,044 --> 00:03:39,549
ループ再生だけ行うようにします。

86
00:03:40,132 --> 00:03:44,044
Add Component - Audio - Audio Source を選択して

87
00:03:46,022 --> 00:03:48,921
Play On Awake はオフにして、 Loop はオンにします。

88
00:03:48,921 --> 00:03:50,921
足音は大きくしすぎると逆効果なので

89
00:03:50,921 --> 00:03:54,092
ボリュームは 0.1 まで下げます。

90
00:03:55,766 --> 00:03:57,711
最後にオーディオクリップを割り当てます。

91
00:03:57,711 --> 00:03:59,641
Audio フォルダの中から Player_footsteps を 

92
00:03:59,641 --> 00:04:03,865
Audio Clip プロパティにドラッグ＆ドロップして下さい。

93
00:04:03,865 --> 00:04:05,865
このゲームの種類ではカメラは

94
00:04:05,865 --> 00:04:08,140
プレイヤーから一定距離離れた位置におかれます。

95
00:04:08,140 --> 00:04:10,140
Unityではデフォルトで 

96
00:04:10,140 --> 00:04:12,683
Audio Listener はカメラにありますが、

97
00:04:12,683 --> 00:04:14,683
今回のゲームの場合は音が聞こえる場所は

98
00:04:14,683 --> 00:04:17,099
プレイヤーの位置とすべきであり、カメラの位置だと問題があるので、

99
00:04:17,099 --> 00:04:19,099
変更する必要があります。

100
00:04:19,599 --> 00:04:21,599
このため Audio Listenerは

101
00:04:21,599 --> 00:04:24,395
プレイヤーにアタッチしてカメラから外します。

102
00:04:24,395 --> 00:04:26,395
camera_main を選択して

103
00:04:27,088 --> 00:04:29,088
Audio Listener コンポーネントの右にある

104
00:04:29,088 --> 00:04:32,949
歯車アイコンをクリックして Remove Component を選択します。

105
00:04:34,361 --> 00:04:36,361
さらに Ethan を再度選択して、

106
00:04:36,361 --> 00:04:40,076
最下部から Add Component ボタンをクリックして、

107
00:04:40,076 --> 00:04:42,915
Audio - Audio Listener を選択します。

108
00:04:43,539 --> 00:04:45,539
これでプレイヤー キャラクター のセットアップは終了で、


109
00:04:45,539 --> 00:04:48,274
キー入力およびアニメーションを適用する準備ができました。

110
00:04:48,774 --> 00:04:50,774
次のセクションを

111
00:04:50,774 --> 00:04:52,111
早速始めれば

112
00:04:52,111 --> 00:04:53,817
Animator Controller アセットを作成していきます。

113
00:04:54,317 --> 00:04:55,488
シーンを保存して

114
00:04:56,513 --> 00:04:58,513
プロジェクトを保存します。
(翻訳:gamesonytablet)
