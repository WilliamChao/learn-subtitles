100:00:00,318 --> 00:00:02,467The next step in creating the player is200:00:02,467 --> 00:00:04,007the Player Health script.300:00:04,511 --> 00:00:06,511Select the player in the hierarchy400:00:06,511 --> 00:00:09,151and got to Add Component - New Script.500:00:09,151 --> 00:00:11,151and call it PlayerHealth.600:00:12,024 --> 00:00:14,024Double click the icon to open it for editing700:00:14,024 --> 00:00:16,024and prepare the script.800:00:17,270 --> 00:00:19,270In this class we are only going to need900:00:19,270 --> 00:00:22,194a couple of public variables. Firstly a float1000:00:22,194 --> 00:00:24,194to represent the player's health.1100:00:24,194 --> 00:00:26,194This is going to be public, not because1200:00:26,194 --> 00:00:28,194we want to be able to tweak it in the inspector1300:00:28,194 --> 00:00:30,194but because we want other scripts to be able1400:00:30,194 --> 00:00:32,194to reference it to find out if the player1500:00:32,194 --> 00:00:34,194is alive or not.1600:00:34,777 --> 00:00:36,777If the player dies we want to reset1700:00:36,777 --> 00:00:39,423the level. However, if this happens straightaway1800:00:39,423 --> 00:00:41,854then we will not see the player's dying animation1900:00:41,854 --> 00:00:43,219and this will look unprofessional. 2000:00:43,219 --> 00:00:45,219So we want to delay it slightly.2100:00:45,219 --> 00:00:47,219To do this we will store the amount of time2200:00:47,219 --> 00:00:49,219to wait in a float variable.2300:00:50,092 --> 00:00:52,092The last public variable we need2400:00:52,092 --> 00:00:54,092is an audio clip that will play when the2500:00:54,092 --> 00:00:56,755player dies. We will need a few private2600:00:56,755 --> 00:00:59,269variables in this class, each for references2700:00:59,269 --> 00:01:01,269to other components or scripts.2800:01:01,269 --> 00:01:03,269Firstly we need a reference to the animator2900:01:03,269 --> 00:01:05,269component. We also need a reference3000:01:05,269 --> 00:01:07,560to the player movement script so that if3100:01:07,560 --> 00:01:09,560the player is dead we can disable it3200:01:09,560 --> 00:01:11,560and stop the player from moving.3300:01:12,226 --> 00:01:14,226Since we are going to be using the animator3400:01:14,226 --> 00:01:16,625component to reference states we will need 3500:01:16,625 --> 00:01:18,625a reference to the Hash IDs script.3600:01:19,333 --> 00:01:21,333If the player dies we want the level to3700:01:21,333 --> 00:01:23,333fade out nicely, and as such we will3800:01:23,333 --> 00:01:26,250need a reference to the SceneFadeInOut script.3900:01:27,137 --> 00:01:29,137Also, if the player dies, we want4000:01:29,137 --> 00:01:31,605the alarms to turn off, since these are based4100:01:31,605 --> 00:01:33,605on the last sighting of the player4200:01:33,605 --> 00:01:34,603we need a reference to the 4300:01:34,603 --> 00:01:36,603LastPlayerSighting script.4400:01:37,352 --> 00:01:39,352We will need a timer to count up the time4500:01:39,352 --> 00:01:41,532before the scene resets, and after the4600:01:41,532 --> 00:01:43,143player has died.4700:01:43,643 --> 00:01:45,643Lastly we are going to use a Boolean4800:01:45,643 --> 00:01:48,489to represent whether or not the player is dead.4900:01:48,489 --> 00:01:51,081This combined with the value of the player's health5000:01:51,081 --> 00:01:53,081will be used to determine when actions5100:01:53,081 --> 00:01:55,081resulting from the player's death should5200:01:55,081 --> 00:01:58,084be performed. Now we can use the awake function5300:01:58,084 --> 00:02:00,084to allocate the references.5400:02:34,824 --> 00:02:36,824We will mainly be using 4 functions5500:02:36,824 --> 00:02:38,824in this script. Let us start off by5600:02:38,824 --> 00:02:40,824making the PlayerDying function.5700:02:41,835 --> 00:02:43,459The first thing we want to do when the player5800:02:43,459 --> 00:02:46,920is dying is to set the playerDead bool to true.5900:02:47,420 --> 00:02:49,420This Bool will be used to determine6000:02:49,420 --> 00:02:51,420whether or not the function is called.6100:02:51,420 --> 00:02:53,420By setting this Bool to true we are6200:02:53,420 --> 00:02:56,040ensuring the function will be called only once.6300:02:56,540 --> 00:02:58,540Next we want to set the Animator parameter6400:02:58,540 --> 00:03:02,644Dead to true. This will trigger the Dying animation.6500:03:04,470 --> 00:03:07,320And finally we want to play the Dying audio clip.6600:03:07,320 --> 00:03:09,781We are going to use PlayClipAtPoint for this6700:03:09,781 --> 00:03:11,781because although we want the footsteps audio6800:03:11,781 --> 00:03:13,781to stop we do not want to replace it6900:03:13,781 --> 00:03:15,781with our Dying audio clip because7000:03:15,781 --> 00:03:18,756our player's audio source is set to loop.7100:03:18,756 --> 00:03:21,852PlayClipAtPoint will play our clip just once.7200:03:22,863 --> 00:03:25,572Next we are going to make the playerDead function.7300:03:25,572 --> 00:03:27,572This will be called once the playerDying7400:03:27,572 --> 00:03:29,572function has been called and in every7500:03:29,572 --> 00:03:31,572subsequent update.7600:03:32,790 --> 00:03:34,790Firstly we want to check if we have 7700:03:34,790 --> 00:03:37,277transitioned to the Dying animation.7800:03:41,475 --> 00:03:45,114Note that the 0 here in GetCurrentAnimatorStateInfo7900:03:45,114 --> 00:03:47,114is a reference to the base layer.8000:03:47,114 --> 00:03:49,114So we are checking whether the base layer8100:03:49,114 --> 00:03:51,114is currently in the Dying state.8200:03:51,114 --> 00:03:53,114And if we have reached that state we do not8300:03:53,114 --> 00:03:55,832want the transition from Any State to happen again.8400:03:55,832 --> 00:03:57,832So we set the DeadAnimator parameter back8500:03:57,832 --> 00:03:59,832to false. This way the death animation8600:03:59,832 --> 00:04:01,832will play it just once.8700:04:03,741 --> 00:04:05,741Next we need to stop the player from moving.8800:04:06,407 --> 00:04:08,990We do this by setting the speed to 08900:04:08,990 --> 00:04:11,638and disabling the PlayerMovement script.9000:04:15,895 --> 00:04:17,895Now we need to set the last global sighting9100:04:17,895 --> 00:04:19,895of the player to the reset position9200:04:19,895 --> 00:04:22,512so that the alarms will switch off.9300:04:24,839 --> 00:04:26,490We also need to make sure that the footstep9400:04:26,490 --> 00:04:29,098sounds are no longer being made by the player.9500:04:30,744 --> 00:04:32,744Next we want to make the LevelReset9600:04:32,744 --> 00:04:35,843function for when the player has died.9700:04:38,221 --> 00:04:40,221The first thing we want to do in this function9800:04:40,221 --> 00:04:42,221is increment the timer.9900:04:42,721 --> 00:04:44,632Now we want to check if the timer has10000:04:44,632 --> 00:04:47,366exceeded the time before the level resets10100:04:47,366 --> 00:04:49,366and if it has call the End scene10200:04:49,366 --> 00:04:52,767function from the SceneFadeInOut class.10300:04:54,137 --> 00:04:56,137We can now create an update function10400:04:56,137 --> 00:04:58,137to call these three functions at the 10500:04:58,137 --> 00:05:00,913appropriate time. We are putting update10600:05:00,913 --> 00:05:02,913above PlayerDying on our script, but it10700:05:02,913 --> 00:05:04,913is not important what order the functions10800:05:04,913 --> 00:05:06,913are placed in. It is nice however10900:05:06,913 --> 00:05:09,456to have a flow to the functions in your script.11000:05:09,456 --> 00:05:13,144Awake is called first, then frame update is called,11100:05:13,144 --> 00:05:15,586then sometimes update will call playerDying11200:05:15,586 --> 00:05:18,215playerDead and or levelReset.11300:05:18,215 --> 00:05:20,215When laying out your scripts choose an order11400:05:20,215 --> 00:05:22,839for your functions that makes sense to you.11500:05:22,839 --> 00:05:25,551In our update function we first need a check11600:05:25,551 --> 00:05:27,551to see if the health variable is less than11700:05:27,551 --> 00:05:29,551or equal to 0.11800:05:30,327 --> 00:05:32,327Next we need to check whether the playerDead11900:05:32,327 --> 00:05:35,933Bool is false. Remember that if it is false12000:05:35,933 --> 00:05:38,238the player dying function can be called.12100:05:38,238 --> 00:05:40,238But it will only be called once12200:05:40,238 --> 00:05:42,795because the first instruction in playerDying12300:05:42,795 --> 00:05:44,795is to set playerDead to true.12400:05:46,621 --> 00:05:49,496If playerDying has been called and the playerDead12500:05:49,496 --> 00:05:51,496Bool is true then we should call the12600:05:51,496 --> 00:05:54,252playerDead and levelReset function.12700:05:55,723 --> 00:05:57,723Finally in our script we need a way12800:05:57,723 --> 00:05:59,723for the player to lose health.12900:05:59,723 --> 00:06:01,723This function is not going to be called from13000:06:01,723 --> 00:06:03,723this script but it will be called by the13100:06:03,723 --> 00:06:06,337enemy shooting the player. As such we need the13200:06:06,337 --> 00:06:08,337function to be public. We will call the13300:06:08,337 --> 00:06:11,091function TakeDamage and we need to parse13400:06:11,091 --> 00:06:13,919in the amount of damage the player takes.13500:06:15,303 --> 00:06:17,303All we need to do in this function is13600:06:17,303 --> 00:06:19,858decrease the health by the amount parameter.13700:06:20,551 --> 00:06:22,551That concludes the work on the script.13800:06:22,551 --> 00:06:24,551So save it and return to the editor.13900:06:27,648 --> 00:06:30,670Finally we will save our scene and project.14000:06:33,156 --> 00:06:34,822That concludes this chapter.14100:06:34,822 --> 00:06:36,822Our player is almost finished and has14200:06:36,822 --> 00:06:38,822just one very small script to go, which14300:06:38,822 --> 00:06:40,822we will add in the next chapter.14400:06:40,822 --> 00:06:42,822The next chapter will cover all of the things14500:06:42,822 --> 00:06:44,822that are required to work in the level.14600:06:44,822 --> 00:06:46,822This includes the camera, the doors, 14700:06:46,822 --> 00:06:48,822the keycard and the lift.