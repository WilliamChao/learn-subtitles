100:00:00,000 --> 00:00:01,818In this chapter of the project we will200:00:01,818 --> 00:00:03,402be going through how to make the player300:00:03,402 --> 00:00:05,402character for our game. The player is400:00:05,402 --> 00:00:07,402a kid call Ethan, who's gotten lost on a 500:00:07,402 --> 00:00:09,402tour of the Unity Labs facility600:00:09,402 --> 00:00:11,402and ended up in one of our simulation700:00:11,402 --> 00:00:12,288environments.800:00:13,064 --> 00:00:15,064The first step is to drag the model in900:00:15,064 --> 00:00:17,064to the scene. You'll find it in the 1000:00:17,064 --> 00:00:20,654Models folder and it's called char_ethan.1100:00:20,654 --> 00:00:22,654Drag this in the hierarchy now,1200:00:23,789 --> 00:00:25,789then with your mouse over the scene view1300:00:25,789 --> 00:00:27,789press F to focus on it.1400:00:30,554 --> 00:00:32,554We want the player's position to be just left1500:00:32,554 --> 00:00:34,554of the origin. So set his starting position1600:00:34,554 --> 00:00:37,706to (-2.5, 0, 0).1700:00:42,115 --> 00:00:44,115Now we need to make sure that he's tagged1800:00:44,115 --> 00:00:46,115as Player. From the Tag drop down1900:00:46,115 --> 00:00:48,115at the top of the inspector choose Player.2000:00:49,167 --> 00:00:51,167The player model has multiple parts.2100:00:51,167 --> 00:00:53,694It also has multiple skinned mesh renderers.2200:00:54,540 --> 00:00:57,042Open the char.ethan hierarchy.2300:00:57,666 --> 00:00:59,666We need to make sure that each of the2400:00:59,666 --> 00:01:02,895body, glasses and harness are using light probes2500:01:02,895 --> 00:01:04,895so that they are effected by dynamic light.2600:01:05,713 --> 00:01:07,060Highlight them all now2700:01:08,251 --> 00:01:10,251and in the skinned mesh renderer check2800:01:10,251 --> 00:01:12,251the box for Use Light Probes.2900:01:13,594 --> 00:01:15,594One of the most important parts of the player3000:01:15,594 --> 00:01:17,594are the controls. Let's take a look3100:01:17,594 --> 00:01:20,376at the input manager to find out what they are.3200:01:20,376 --> 00:01:21,419They can be found via 3300:01:21,419 --> 00:01:25,125Edit - Project Settings - Input.3400:01:27,020 --> 00:01:29,020The horizontal and vertical axes are3500:01:29,020 --> 00:01:30,726almost the same as the defaults that are3600:01:30,726 --> 00:01:33,156in each Unity project. The only change that3700:01:33,156 --> 00:01:35,641we've made is that Snap is unchecked.3800:01:36,084 --> 00:01:38,084This means that if the opposite buttons on3900:01:38,084 --> 00:01:40,680the same axis are pressed, the axis won't 4000:01:40,680 --> 00:01:43,210snap to 0. We need a few more inputs4100:01:43,210 --> 00:01:44,833for our player to perform all the necessary4200:01:44,833 --> 00:01:47,226actions. Firstly we need a button that4300:01:47,226 --> 00:01:49,226the user can hold down to sneak4400:01:49,226 --> 00:01:50,495instead of running.4500:01:50,995 --> 00:01:53,148We've used the left shift key, but since4600:01:53,148 --> 00:01:55,148in our scripts we will be using GetButton4700:01:55,148 --> 00:01:57,148instead of GetKey we can change4800:01:57,148 --> 00:01:58,182it to whatever we'd like4900:01:58,182 --> 00:01:59,947without editing the scripts.5000:01:59,947 --> 00:02:02,461We simply need to reference the name Sneak.5100:02:02,961 --> 00:02:04,961Next we'll need a button that the player5200:02:04,961 --> 00:02:07,499can use to attract the attention of the guards.5300:02:07,499 --> 00:02:09,499We've used the X key.5400:02:11,573 --> 00:02:14,268For our switches we've used Z.5500:02:16,508 --> 00:02:18,508Now let's move on to adding components to5600:02:18,508 --> 00:02:21,106the player. The Ethan model has an animated5700:02:21,106 --> 00:02:23,301component by default and the settings are5800:02:23,301 --> 00:02:25,954as we'd want them. We'll be creating an5900:02:25,954 --> 00:02:27,954animator controller for this later.6000:02:28,371 --> 00:02:30,371The player needs to collide with obstructions6100:02:30,371 --> 00:02:32,371in the level, so let's give him a 6200:02:32,371 --> 00:02:34,358capsule collider. Go to 6300:02:34,358 --> 00:02:37,646Add Component - Physics - Capsule Collider.6400:02:38,381 --> 00:02:42,965Change the capsule collider centre to (0, 1, 0).6500:02:48,534 --> 00:02:51,274Change the radius to 0.4.6600:02:53,514 --> 00:02:55,514Set the height to 2.6700:02:57,934 --> 00:02:59,934Since the player will have a moving collider6800:02:59,934 --> 00:03:01,934it needs a rigidbody component.6900:03:02,572 --> 00:03:05,831Click Add Component and choose Physics - Rigidbody.7000:03:06,331 --> 00:03:08,331We will be setting the rotation, rather7100:03:08,331 --> 00:03:10,968than using forces to turn, and since we don't7200:03:10,968 --> 00:03:12,968want the player to turn otherwise7300:03:12,968 --> 00:03:15,313we should freeze the rotation in all axes.7400:03:15,313 --> 00:03:17,849Under Constraints check the boxes for7500:03:17,849 --> 00:03:19,321X, Y and Z.7600:03:19,321 --> 00:03:20,781We also don't want the player to get7700:03:20,781 --> 00:03:22,781knocked in to the air on collisions7800:03:22,781 --> 00:03:25,282so we'll constrain his vertical movement too.7900:03:25,282 --> 00:03:27,765Check the Y axis of Freeze Position.8000:03:28,293 --> 00:03:30,293We want the player to make footstep sounds8100:03:30,293 --> 00:03:32,293when running, so we'll need an audio8200:03:32,293 --> 00:03:34,293source component, and we can put the 8300:03:34,293 --> 00:03:35,859Footsteps clip in to that.8400:03:36,442 --> 00:03:38,044We don't want the sound to play on awake,8500:03:38,044 --> 00:03:39,549but we do want it to loop.8600:03:40,132 --> 00:03:44,044Go to Add Component - Audio - Audio Source.8700:03:46,022 --> 00:03:48,921Uncheck Play On Awake, and check Loop.8800:03:48,921 --> 00:03:50,921We don't want footsteps to be too intrusive8900:03:50,921 --> 00:03:54,092so we'll turn the volume down to 0.1.9000:03:55,766 --> 00:03:57,711And finally we'll assign the clip.9100:03:57,711 --> 00:03:59,641In the Audio folder, drag and drop9200:03:59,641 --> 00:04:03,865Player_footsteps on to the audio clip property.9300:04:03,865 --> 00:04:05,865For this style of game the camera is going to9400:04:05,865 --> 00:04:08,140be a fair distance away from the player.9500:04:08,140 --> 00:04:10,140Because by default the audio listener is9600:04:10,140 --> 00:04:12,683on the camera in Unity, this will not suit9700:04:12,683 --> 00:04:14,683our game as we need the point at which we9800:04:14,683 --> 00:04:17,099hear to be based on the player's position,9900:04:17,099 --> 00:04:19,099rather than the position of the camera.10000:04:19,599 --> 00:04:21,599As such we are going to put our audio10100:04:21,599 --> 00:04:24,395listener on the player and remove it from the camera.10200:04:24,395 --> 00:04:26,395Select camera_main10300:04:27,088 --> 00:04:29,088and click the cog to the right of the 10400:04:29,088 --> 00:04:32,949audio listener component and choose Remove Component.10500:04:34,361 --> 00:04:36,361Then reselect Ethan10600:04:36,361 --> 00:04:40,076and at the bottom click the Add Component button10700:04:40,076 --> 00:04:42,915and choose Audio - Audio Listener.10800:04:43,539 --> 00:04:45,539That's our player character setup and 10900:04:45,539 --> 00:04:48,274ready to have input and animation applied to him.11000:04:48,774 --> 00:04:50,774Let's get started with the next assignment,11100:04:50,774 --> 00:04:52,111in which we will create the11200:04:52,111 --> 00:04:53,817animator controller asset.11300:04:54,317 --> 00:04:55,488Save your scene11400:04:56,513 --> 00:04:58,513and save your project now.