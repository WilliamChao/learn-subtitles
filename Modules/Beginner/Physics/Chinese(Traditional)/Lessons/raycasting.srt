1
00:00:00,000 --> 00:00:02,100
Raycasting會從指定點投射一條隱形線

2
00:00:02,100 --> 00:00:04,280
Raycasting會從指定點投射一條隱形線

3
00:00:04,280 --> 00:00:06,770
對著指定方向偵測是否有碰撞體在線上

4
00:00:06,770 --> 00:00:08,770
對著指定方向偵測是否有碰撞體在線上

5
00:00:08,770 --> 00:00:10,770
像是一把槍

6
00:00:10,770 --> 00:00:12,870
比如說這個主角想射死

7
00:00:12,870 --> 00:00:14,870
比如說這個主角想射死

8
00:00:14,870 --> 00:00:16,870
這個背叛者兼殺父仇人的邪惡方塊

9
00:00:17,370 --> 00:00:20,100
Raycast函式的寫法會長的像這樣

10
00:00:20,100 --> 00:00:22,100
一開始會有點難懂

11
00:00:22,100 --> 00:00:24,530
等明白所有的參數內容就容易理解了

12
00:00:24,530 --> 00:00:26,200
等明白所有的參數內容就容易理解了

13
00:00:26,200 --> 00:00:28,200
首先，射線從世界座標的某一點射出

14
00:00:28,200 --> 00:00:30,200
首先，射線從世界座標的某一點射出

15
00:00:30,200 --> 00:00:32,200
在這種情況下，我們決定起點在槍口

16
00:00:32,200 --> 00:00:34,200
在這種情況下，我們決定起點在槍口

17
00:00:34,200 --> 00:00:37,580
把槍口的XYZ座標存到Vector3

18
00:00:37,920 --> 00:00:39,920
但是，由於世界坐標方向

19
00:00:39,920 --> 00:00:41,930
不一定和主角射擊的方向相同

20
00:00:41,930 --> 00:00:44,420
因此我們還需要第二個Vector3

21
00:00:44,420 --> 00:00:46,210
來儲存主角的方向

22
00:00:46,210 --> 00:00:48,210
這兩個變數產生我們需要的射線

23
00:00:48,210 --> 00:00:51,160
我們可以把這裡換成一個Ray變數

24
00:00:51,160 --> 00:00:53,690
我們可以把這裡換成一個Ray變數

25
00:00:53,690 --> 00:00:55,690
Ray變數可以存放兩個Vector3變數

26
00:00:55,690 --> 00:00:57,690
我們的程式碼就會像這樣

27
00:01:02,380 --> 00:01:04,200
函式裡下一個變數叫做

28
00:01:04,200 --> 00:01:06,200
RaycastHit變數，用來存放

29
00:01:06,200 --> 00:01:08,140
撞上碰撞體的物件資料

30
00:01:08,450 --> 00:01:10,450
那麼程式就可以呼叫

31
00:01:10,450 --> 00:01:12,850
被射線碰到的物體

32
00:01:13,150 --> 00:01:15,610
最後還有兩個變數

33
00:01:15,610 --> 00:01:17,610
Distance,定義射線的長度

34
00:01:17,610 --> 00:01:19,610
如果不給這個值就會預設無限

35
00:01:19,610 --> 00:01:21,610
如果不給這個值就會預設無限

36
00:01:21,610 --> 00:01:23,610
最後是Layer Mask

37
00:01:23,610 --> 00:01:26,550
用來指定在Unity裡面的圖層

38
00:01:26,550 --> 00:01:28,550
你可以把物件放在此圖層

39
00:01:28,550 --> 00:01:30,220
如果你希望射線忽略這些物件

40
00:01:30,220 --> 00:01:32,220
來瞧瞧一個用Raycasting的範例

41
00:01:32,220 --> 00:01:33,510
來瞧瞧一個用Raycasting的範例

42
00:01:33,510 --> 00:01:35,890
這個範例我們有一個

43
00:01:35,890 --> 00:01:37,360
接近地面會打開傘的空投箱

44
00:01:37,360 --> 00:01:39,200
接近地面會打開傘的空投箱

45
00:01:40,460 --> 00:01:42,260
這個箱子由兩個部分組成

46
00:01:42,260 --> 00:01:44,030
降落傘和箱子

47
00:01:44,030 --> 00:01:46,030
降落傘有兩個動畫

48
00:01:46,530 --> 00:01:48,040
開傘動畫

49
00:01:48,600 --> 00:01:50,030
和收傘動畫

50
00:01:50,920 --> 00:01:52,920
這個範例我們需要射線往下檢查離地面多高

51
00:01:52,920 --> 00:01:55,330
這個範例我們需要射線往下檢查離地面多高

52
00:01:55,330 --> 00:01:57,330
我們可以透過檢查場景地表的碰撞體來實現

53
00:01:57,330 --> 00:02:00,120
我們可以透過檢查場景地表的碰撞體來實現

54
00:02:00,620 --> 00:02:03,150
用來檢查碰撞的場景

55
00:02:03,150 --> 00:02:04,690
已經標上了environment這個Tag

56
00:02:05,400 --> 00:02:09,200
我們就可以用程式腳本來呼叫這個Tag

57
00:02:10,880 --> 00:02:12,480
RayCast函式在IF裡面

58
00:02:12,480 --> 00:02:15,660
如果傳回True代表碰到了物體

59
00:02:15,660 --> 00:02:17,660
如果傳回True代表碰到了物體

60
00:02:17,660 --> 00:02:19,660
然後IF就會進入函式

61
00:02:19,660 --> 00:02:21,660
並把碰到的物件放入hit(RayCastHit)結構裡

62
00:02:21,660 --> 00:02:25,240
並把碰到的物件放入hit(RayCastHit)結構裡

63
00:02:26,240 --> 00:02:29,180
IF判斷裡我們用Physics.Raycast語法

64
00:02:29,180 --> 00:02:32,860
加入紀錄箱子座標和方向的landingRay變數

65
00:02:32,860 --> 00:02:35,710
加入紀錄箱子座標和方向的landingRay變數

66
00:02:35,710 --> 00:02:37,710
以及方向往下，簡寫是Vector3.down

67
00:02:37,710 --> 00:02:39,710
以及方向往下，簡寫是Vector3.down

68
00:02:39,710 --> 00:02:41,960
有了這些就可以產生投射線

69
00:02:41,960 --> 00:02:44,370
我們的RaycastHit變數叫'hit'

70
00:02:44,370 --> 00:02:46,370
儲存射線碰到的物件

71
00:02:46,370 --> 00:02:48,370
儲存射線碰到的物件

72
00:02:48,370 --> 00:02:50,370
我們已經設定了一個deployment height變數

73
00:02:50,370 --> 00:02:53,410
來指定射線長度

74
00:02:53,410 --> 00:02:58,860
如果射線碰到了碰撞體

75
00:02:58,860 --> 00:03:01,800
就會執行程式內的函式

76
00:03:02,300 --> 00:03:04,760
函式內只設定布林值deployed為True

77
00:03:04,760 --> 00:03:08,190
用來限制這行為只執行一次

78
00:03:08,690 --> 00:03:11,020
然後我們把物體的Drag值

79
00:03:11,020 --> 00:03:13,900
等於'parachuteEffectiveness'這個變數

80
00:03:13,900 --> 00:03:15,900
所以當他開傘時會降低速度

81
00:03:15,900 --> 00:03:17,580
所以當他開傘時會降低速度

82
00:03:17,580 --> 00:03:19,580
同時播放開傘動畫

83
00:03:19,580 --> 00:03:21,580
同時播放開傘動畫

84
00:03:21,580 --> 00:03:23,580
就是指定到這個全域變數的物件

85
00:03:23,580 --> 00:03:25,160
就是指定到這個全域變數的物件

86
00:03:25,360 --> 00:03:27,940
再來是一個OnCollisionEnter函式

87
00:03:27,940 --> 00:03:29,940
用來播放關傘動畫

88
00:03:29,940 --> 00:03:31,940
當降落傘碰到地面或物件時

89
00:03:31,940 --> 00:03:34,720
可以把傘收起來

90
00:03:36,440 --> 00:03:39,570
因為我們要設定射線長度為4

91
00:03:39,570 --> 00:03:41,810
所以在腳本把Deployment Height設定為4

92
00:03:42,030 --> 00:03:45,670
因為要設定rigidbody.Drag的值為8

93
00:03:45,670 --> 00:03:48,620
所以設定Parachute Effectiveness為8

94
00:03:48,620 --> 00:03:50,620
然後把降落傘物件拖到Parachute欄位

95
00:03:50,620 --> 00:03:54,270
然後把降落傘物件拖到Parachute欄位

96
00:03:54,270 --> 00:03:57,120
因為這個降落傘有包含

97
00:03:57,120 --> 00:03:59,120
開傘和關傘的動畫

98
00:03:59,120 --> 00:04:01,120
開傘和關傘的動畫

99
00:04:01,120 --> 00:04:03,120
讓我們在一次執行成果

100
00:04:06,680 --> 00:04:08,680
值得注意的是

101
00:04:08,680 --> 00:04:10,680
雖然在遊戲或場景中你看不到射線

102
00:04:10,680 --> 00:04:13,090
雖然在遊戲或場景中你看不到射線

103
00:04:13,090 --> 00:04:15,490
但你可以在程式內加入一行

104
00:04:15,490 --> 00:04:18,010
Debug.DrawRay函式來模擬射線

105
00:04:18,010 --> 00:04:21,050
Debug.DrawRay函式來模擬射線

106
00:04:21,050 --> 00:04:23,500
加入Debug.DrawRay指令

107
00:04:23,500 --> 00:04:25,500
用來在箱子下畫一條虛擬射線

108
00:04:25,500 --> 00:04:27,500
輸入箱子座標transform.position

109
00:04:27,500 --> 00:04:30,080
輸入方向Vector3.down

110
00:04:30,080 --> 00:04:33,730
輸入射線長度deployment height

111
00:04:33,730 --> 00:04:35,730
用這個方法來產生一條模擬的射線

112
00:04:35,730 --> 00:04:38,240
用這個方法來產生一條模擬的射線

113
00:04:38,550 --> 00:04:40,550
所以，讓我們在播放一次成果

114
00:04:40,550 --> 00:04:42,550
可以看到場景裡畫了一條預覽射線

115
00:04:42,550 --> 00:04:45,890
可以看到場景裡畫了一條預覽射線

