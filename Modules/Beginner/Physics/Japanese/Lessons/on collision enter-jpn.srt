1
00:00:00,000 --> 00:00:02,210
Unity で衝突検知を行うためには

2
00:00:02,210 --> 00:00:04,210
OnCollisionEnter 関数が含まれる

3
00:00:04,210 --> 00:00:05,751
衝突する二つのオブジェクトのうちのひとつが

4
00:00:05,751 --> 00:00:07,724
必要となります。

5
00:00:07,810 --> 00:00:10,368
基本的な構文は Collision 型の引数をひとつ

6
00:00:10,368 --> 00:00:12,368
指定します。

7
00:00:12,868 --> 00:00:14,868
これにより Collision の検索を行って

8
00:00:14,868 --> 00:00:16,868
衝突されたオブジェクトに関する情報を

9
00:00:16,868 --> 00:00:18,299
見つけることが出来ます。

10
00:00:18,758 --> 00:00:21,248
このサンプルでは samoflange オブジェクトのボールは良く跳ねる

11
00:00:21,248 --> 00:00:24,091
物理マテリアルにより跳ねていて、

12
00:00:24,091 --> 00:00:26,091
powerCube オブジェクトに衝突しています。

13
00:00:27,033 --> 00:00:29,665
ボールにアタッチしたスクリプトは次のような内容です。

14
00:00:30,800 --> 00:00:32,800
現時点では関数の中に何も書いていません。

15
00:00:33,300 --> 00:00:35,300
Collision 引数を使用して

16
00:00:35,300 --> 00:00:37,300
powerCube に衝突したか判定することが出来ます。

17
00:00:37,800 --> 00:00:40,007
if 文を使用して

18
00:00:40,007 --> 00:00:42,244
変数である col に含まれるデータをチェックします。

19
00:00:42,244 --> 00:00:44,932
具体例は

20
00:00:44,932 --> 00:00:47,277
これと衝突したゲームオブジェクトおよび

21
00:00:47,277 --> 00:00:49,664
結果的にのオブジェクトの名前です。

22
00:00:49,664 --> 00:00:53,648
if (col.gameobject.name) と書いて、

23
00:00:53,648 --> 00:00:55,648
Hierarchy における powerCube の名前である

24
00:00:55,648 --> 00:00:58,677
prop_powercube と等しいか確認します。

25
00:00:58,677 --> 00:01:00,677
そしてこの if 文はボールが powerCube と衝突したときのみ

26
00:01:00,677 --> 00:01:02,677
有効化されます。

27
00:01:02,677 --> 00:01:04,677
もし衝突した場合、 

28
00:01:04,677 --> 00:01:06,677
Destroy コマンドを活用します。コリジョンにより

29
00:01:06,677 --> 00:01:08,162
取得できるデータ型については

30
00:01:08,162 --> 00:01:10,523
スクリプトエディタ上で変数名を入力して

31
00:01:10,523 --> 00:01:13,162
ドット（ピリオド）を続けて入力します。

32
00:01:13,662 --> 00:01:15,086
これによってコリジョンによって取得することができる、

33
00:01:15,086 --> 00:01:17,086
様々なデータ型が表示されます。

34
00:01:17,379 --> 00:01:19,379
Collision クラスの下にページでリンクされる

35
00:01:19,379 --> 00:01:21,379
スクリプト リファレンスのページも

36
00:01:21,379 --> 00:01:23,379
参照するようにして、取得できる他のデータ型を確認するようにして下さい。

37
00:01:23,713 --> 00:01:26,447
ここでは、単にゲームオブジェクトを破棄します。

38
00:01:26,892 --> 00:01:28,892
これでスクリプトを保存すれば

39
00:01:29,986 --> 00:01:31,986
コリジョンが発生すれば

40
00:01:32,486 --> 00:01:34,789
つねにボールが powerCube を破棄することが確認できるようになります。
(翻訳:gamesonytablet)
