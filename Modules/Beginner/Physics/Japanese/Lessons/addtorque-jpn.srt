1
00:00:00,000 --> 00:00:02,204
AddTorque 関数は AddForce に似ていますが、

2
00:00:02,204 --> 00:00:04,479
違いとして、 ゲームオブジェクトを定まった軸の周りに

3
00:00:04,479 --> 00:00:07,463
回転させることで力が働きます。

4
00:00:07,562 --> 00:00:09,727
AddTorque には二つのコンポーネントがあり、

5
00:00:09,727 --> 00:00:11,907
二つめは必須ではありません。一つめは

6
00:00:11,907 --> 00:00:14,251
トルクを適用すべき軸および

7
00:00:14,251 --> 00:00:16,184
適用するトルクの大きさを定義する

8
00:00:16,184 --> 00:00:18,184
ベクトルです。

9
00:00:18,184 --> 00:00:20,184
このサンプルでは powerCube は

10
00:00:20,184 --> 00:00:21,960
このスクリプトがアタッチされています。

11
00:00:22,322 --> 00:00:24,322
AddTorque 関数を使用していて

12
00:00:24,322 --> 00:00:26,667
オブジェクトの上方向である

13
00:00:26,667 --> 00:00:28,667
Transform.up が

14
00:00:28,667 --> 00:00:30,950
トルクを加えるべき軸であることを示します。

15
00:00:30,950 --> 00:00:34,020
Unity は左手系であるため

16
00:00:34,020 --> 00:00:36,186
この図で示すように

17
00:00:36,186 --> 00:00:37,841
トルクはこの軸周りに加えられます。

18
00:00:37,841 --> 00:00:39,967
自身で試すために、親指を立てて

19
00:00:39,967 --> 00:00:42,342
左手系の手の形を作ってみてください。

20
00:00:42,342 --> 00:00:44,342
手のひらで指が曲がっている方向に

21
00:00:44,342 --> 00:00:47,243
トルクが加えられていると想像して下さい。

22
00:00:48,503 --> 00:00:50,696
ここでは

23
00:00:50,696 --> 00:00:53,101
水平軸からの入力変数 h に amount 変数を掛け算して、

24
00:00:53,101 --> 00:00:55,363
さらにデルタ時間を

25
00:00:55,363 --> 00:00:58,197
掛け算します。

26
00:00:58,197 --> 00:01:00,542
もうひとつの AddTorque の行には transform.right 軸に

27
00:01:00,542 --> 00:01:02,778
、すなわちオブジェクトの X 軸に

28
00:01:02,778 --> 00:01:05,237
適用しています。

29
00:01:05,844 --> 00:01:07,844
これを実際に動かしてみましょう。

30
00:01:08,883 --> 00:01:11,298
Horizontal の キーを押下すると

31
00:01:12,268 --> 00:01:15,409
トルクを加えることが出来て、みてのとおり

32
00:01:15,409 --> 00:01:17,409
トルクを加えたあとに、キーを話すと、

33
00:01:17,409 --> 00:01:19,409
初速はそのまま継続するのは

34
00:01:19,409 --> 00:01:20,885
これが物理シミュレーション

35
00:01:20,885 --> 00:01:22,885
であるためです。

36
00:01:23,827 --> 00:01:27,532
同様にして X 軸に適用して

37
00:01:27,532 --> 00:01:30,255
そしてこれはローカル座標であるため

38
00:01:30,255 --> 00:01:32,158
どこにあろうとも軸を中心に

39
00:01:32,158 --> 00:01:34,158
回ります。

40
00:01:34,658 --> 00:01:36,658
Rigidbody の Angular Drag  コンポーネントにより

41
00:01:36,658 --> 00:01:39,126
オブジェクトにどれぐらいの量だけトルクが

42
00:01:39,126 --> 00:01:41,350
適用されているか

43
00:01:41,350 --> 00:01:43,350
定義されます。

44
00:01:44,043 --> 00:01:46,043
例えば、たくさんのトルクを

45
00:01:46,043 --> 00:01:48,557
この軸に適用して、初速のまま動かすことが出来ますが、

46
00:01:48,557 --> 00:01:51,598
Angular Drag を増加させると

47
00:01:51,598 --> 00:01:53,598
Angular Drag の影響でオブジェクトが動くのが

48
00:01:53,598 --> 00:01:56,054
難しくなってきます。

49
00:02:00,518 --> 00:02:02,518
これに対して Angular Drag がまったくない場合、

50
00:02:02,518 --> 00:02:04,518
オブジェクトを特定の方向にスピンし続けるのは

51
00:02:04,518 --> 00:02:06,518
容易なことであり、加わる抵抗（Drag）はきわめて

52
00:02:06,518 --> 00:02:08,518
僅かです。

53
00:02:12,001 --> 00:02:13,808
二つめのパラメータは必須でないものであり、

54
00:02:13,808 --> 00:02:15,808
適用される力のタイプに

55
00:02:15,808 --> 00:02:17,614
影響があります。

56
00:02:17,614 --> 00:02:19,614
もし何も入れなかった倍、

57
00:02:19,614 --> 00:02:21,222
タイプはデフォルトの Force となります。

58
00:02:21,722 --> 00:02:23,722
これは継続的な変更に用いられ

59
00:02:23,722 --> 00:02:25,528
重量（Mass）により影響を受けます。

60
00:02:25,793 --> 00:02:28,169
Acceleration は重量により影響を受けない

61
00:02:28,169 --> 00:02:30,072
継続的な変更に使用されます。

62
00:02:30,296 --> 00:02:32,420
Impulse は重量に影響される瞬間的な変化

63
00:02:32,420 --> 00:02:34,033
に使用されます。

64
00:02:34,243 --> 00:02:36,381
Velocity Change は重量に影響されない

65
00:02:36,381 --> 00:02:38,934
瞬間的な変更に使用されます。

66
00:02:39,530 --> 00:02:42,439
これをスクリプトに追加することでの影響をみてみましょう。

67
00:02:44,638 --> 00:02:47,345
次にトルクを使用してキューブを回転させるとき、

68
00:02:47,345 --> 00:02:49,165
反対のキーを押して

69
00:02:49,165 --> 00:02:51,249
逆方向にトルクを適用したとき、

70
00:02:51,249 --> 00:02:52,378
明らかに速く反応します。

71
00:02:52,378 --> 00:02:54,378
このことから、トルクを追加するときに加える力のタイプを

72
00:02:54,378 --> 00:02:57,572
考慮するのは重要なことです。
(翻訳:gamesonytablet)
