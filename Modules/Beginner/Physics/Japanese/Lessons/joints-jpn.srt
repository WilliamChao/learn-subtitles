1
00:00:00,290 --> 00:00:02,921
Unity における基本的なジョイント（Joint）をみて行きます。

2
00:00:03,545 --> 00:00:05,545
このサンプルでは Fixed Joint および

3
00:00:05,545 --> 00:00:07,296
Spring Joint があります。

4
00:00:07,616 --> 00:00:09,945
このサンプルでは 鉄球 (wrecking ball) を

5
00:00:09,945 --> 00:00:11,505
構成してます。

6
00:00:12,597 --> 00:00:14,667
最初は Fixed Joint をみていきます。Fixed Joint は

7
00:00:14,667 --> 00:00:16,862
階層の中で

8
00:00:16,862 --> 00:00:18,358
親子関係を作成するのに似ています。

9
00:00:18,358 --> 00:00:20,358
ジョイントによりゲームオブジェクトを

10
00:00:20,358 --> 00:00:22,358
ワールド空間座標の点または

11
00:00:22,358 --> 00:00:23,701
接続された Rigidbody に対してロックします。

12
00:00:23,701 --> 00:00:26,282
このサンプルでは chain の最初の capsule を

13
00:00:26,282 --> 00:00:28,282
天井の側に配置して

14
00:00:28,282 --> 00:00:30,657
Fixed Joint をアタッチしています。

15
00:00:30,657 --> 00:00:32,266
これによりその場所にロックされます。

16
00:00:32,266 --> 00:00:34,266
この Fixed Joint の他のパラメータは

17
00:00:34,266 --> 00:00:36,266
Break Force および Break Torque です。

18
00:00:36,266 --> 00:00:38,266
これは ジョイントを壊すために

19
00:00:38,266 --> 00:00:39,846
必要な最小の力を表します。

20
00:00:39,846 --> 00:00:41,846
ジョイントが破壊されたときゲームオブジェクトは

21
00:00:41,846 --> 00:00:43,846
再び自由に移動出来るようになります。

22
00:00:44,346 --> 00:00:46,166
chain の他の capsule は 

23
00:00:46,166 --> 00:00:48,929
Spring Joint があります。Spring Joint は

24
00:00:48,929 --> 00:00:50,929
ゲームオブジェクトがターゲット位置に到達しようとするという

25
00:00:50,929 --> 00:00:52,929
原理にもとづいています。

26
00:00:52,929 --> 00:00:54,929
到達しようとするターゲット位置は

27
00:00:54,929 --> 00:00:56,929
シーンビューでセットされた位置であり、

28
00:00:56,929 --> 00:00:58,929
そこにアタッチされたすべての Rigidbody は

29
00:00:58,929 --> 00:01:00,929
特定のアンカー位置 (anchor point) にアタッチされた

30
00:01:00,929 --> 00:01:02,846
透明の Spring により

31
00:01:02,846 --> 00:01:04,046
引っ張られていきます。

32
00:01:04,046 --> 00:01:06,256
もし Spring Joint に接続された Rigidbody がある場合

33
00:01:06,256 --> 00:01:08,435
Spring が到達しようとするターゲット地点は

34
00:01:08,435 --> 00:01:10,616
ワールド空間に対してではなく

35
00:01:10,616 --> 00:01:13,172
ゲームオブジェクトに対する相対的な位置です。

36
00:01:13,437 --> 00:01:16,335
例えば、ここで二つめの capsule は

37
00:01:16,335 --> 00:01:19,639
capsule 1 に到達しようとしていて、capsule 3 は

38
00:01:19,639 --> 00:01:21,639
capsule 2 に到達しようとしています。

39
00:01:21,639 --> 00:01:23,639
これらが動くにつれて、もはや元の位置に

40
00:01:23,639 --> 00:01:25,639
向かうことはなく、むしろ

41
00:01:25,639 --> 00:01:27,639
それらの capsule がある位置に

42
00:01:27,639 --> 00:01:30,053
向かっていきます。

43
00:01:30,053 --> 00:01:32,598
anchor とは joint のピボット地点です。

44
00:01:32,598 --> 00:01:34,598
ゲームオブジェクトに spring をアタッチした

45
00:01:34,598 --> 00:01:36,237
場所としてとらえるべきです。

46
00:01:36,237 --> 00:01:38,237
これはシーンビュー上で

47
00:01:38,237 --> 00:01:40,237
オレンジ色の点線またはボックスとして表示されます。

48
00:01:40,237 --> 00:01:42,237
spring パラメータは spring 強度に関する

49
00:01:42,237 --> 00:01:44,237
指標です。値が大きいほど

50
00:01:44,237 --> 00:01:46,248
spring がきつくなったり、強くなったり

51
00:01:46,248 --> 00:01:48,248
します。damper パラメータにより

52
00:01:48,248 --> 00:01:50,248
joint が移動するときにどれぐらい

53
00:01:50,248 --> 00:01:52,591
減速するかを決定します。数字が大きいほど

54
00:01:52,591 --> 00:01:54,508
spring は跳ねすぎるようになります。

55
00:01:54,508 --> 00:01:56,661
min および  max distance は

56
00:01:56,661 --> 00:01:58,661
spring が有効でない領域を決めるために

57
00:01:58,661 --> 00:02:00,924
あります。これらは 要するに Spring の

58
00:02:00,924 --> 00:02:02,260
長さを制限します。

59
00:02:02,260 --> 00:02:04,260
Fixed Joint と同様に Spring にも

60
00:02:04,260 --> 00:02:07,032
Break Force および Break Torque があり、

61
00:02:07,032 --> 00:02:09,032
特定の数値 にセットすることで

62
00:02:09,032 --> 00:02:10,879
Joint を壊すために必要な最小の力を

63
00:02:10,879 --> 00:02:12,446
決められます。

64
00:02:12,946 --> 00:02:14,628
最後に、 Hinge Joint です。

65
00:02:14,628 --> 00:02:16,628
Hinge Joint は ドアなどに理想的であり

66
00:02:16,628 --> 00:02:18,628
Spring Joint といくつかのプロパティを

67
00:02:18,628 --> 00:02:20,628
共有します。 Hinge の Axis は

68
00:02:20,628 --> 00:02:22,960
これが回転する軸となるものです。

69
00:02:22,960 --> 00:02:24,960
このサンプルでは physicsDoor は

70
00:02:24,960 --> 00:02:27,389
Hinge Joint がアタッチされています。Anchor は

71
00:02:27,389 --> 00:02:29,753
X 軸で 1 にセットされていて、

72
00:02:29,753 --> 00:02:31,865
この中心から端に移動させます。

73
00:02:31,865 --> 00:02:33,865
再び Joint は Unityの中でオレンジ色で

74
00:02:33,865 --> 00:02:36,813
表現されていて、Hinge が現在ある場所を示す小さな線を

75
00:02:36,813 --> 00:02:39,271
確認することが出来ます。

76
00:02:39,271 --> 00:02:41,271
Axis によって、

77
00:02:41,271 --> 00:02:44,489
どの軸を Hinge がピボットするか指定できます。

78
00:02:44,489 --> 00:02:46,489
これを Y 軸にすることでシンプルなスクリプトにより

79
00:02:46,489 --> 00:02:49,435
現実世界のヒンジのようの動作するようにしています。

80
00:02:49,435 --> 00:02:50,794
ドアに対して Force を適用することで

81
00:02:50,794 --> 00:02:52,627
クリックしたとき、 Z 軸の方向に

82
00:02:52,627 --> 00:02:54,627
押すことが出来て、

83
00:02:54,627 --> 00:02:57,634
負の方向の transform.forward をショートカットとして使用します。

84
00:02:58,134 --> 00:03:00,134
Add Force レッスンにより、

85
00:03:00,134 --> 00:03:02,875
ドアをフレームから外にふきとばすところをみました。

86
00:03:02,875 --> 00:03:05,054
しかし、今回は Hinge があることにより

87
00:03:05,054 --> 00:03:07,054
ドアに Force を適用するとき

88
00:03:07,054 --> 00:03:09,638
その地点を中心にピボットするようになります。

89
00:03:09,638 --> 00:03:11,638
そして何回 Force を加えようとも

90
00:03:11,638 --> 00:03:13,638
壊れる (Break) ことがありません。

91
00:03:16,044 --> 00:03:18,044
Spring Joint と同様にして

92
00:03:18,044 --> 00:03:20,561
Spring のような特性を適用するためには

93
00:03:20,561 --> 00:03:23,151
Spring チェックボックスを使用して

94
00:03:23,151 --> 00:03:26,185
さらに Spring 設定の下にある値を使用します。

95
00:03:26,685 --> 00:03:28,449
Hinge Joint および Spring Joint の他の違いは

96
00:03:28,449 --> 00:03:30,959
Motor および Limit です。

97
00:03:30,959 --> 00:03:33,236
Motor は Joint に Velocity をつけるための

98
00:03:33,236 --> 00:03:36,002
ものであり、例をあげると回転ドアになります。

99
00:03:36,237 --> 00:03:38,558
Target Velocity は Joint が回転しようとする

100
00:03:38,558 --> 00:03:40,558
Velocity であり、

101
00:03:40,558 --> 00:03:43,651
Force を使用してその Velocity に到達しようとします。

102
00:03:44,151 --> 00:03:46,672
もし Free Spin 画チェックされた場合 Force は

103
00:03:46,672 --> 00:03:48,574
Joint を加速しようとするためのみに使用されて

104
00:03:48,574 --> 00:03:51,137
減速されるためには使用されません。

105
00:03:51,137 --> 00:03:53,412
Limit を使用して Joint の動作を制限することが必要な場合に

106
00:03:53,412 --> 00:03:55,412
使用することが出来て、例えば普通のドア

107
00:03:55,412 --> 00:03:57,412
みたいなものです。 Minimum および Maximum は

108
00:03:57,412 --> 00:03:59,620
Joint が移動できる角度です。

109
00:03:59,620 --> 00:04:02,355
Min および Max Bounce は Joint が

110
00:04:02,355 --> 00:04:04,355
どれかの Limit に到達したときに

111
00:04:04,355 --> 00:04:06,730
の跳ねる (Bounce) ことが出来る量です。

112
00:04:06,730 --> 00:04:08,730
Spring Joint と同様に、

113
00:04:08,730 --> 00:04:10,464
Break Force および Torque があります。

114
00:04:11,005 --> 00:04:13,576
例えば、Break Force プロパティに

115
00:04:13,576 --> 00:04:16,139
適切な低い値を設定すると、

116
00:04:16,139 --> 00:04:18,139
Force を加えた時にドアをヒンジから

117
00:04:18,139 --> 00:04:20,487
外れるようにすることが出来ます。

118
00:04:20,487 --> 00:04:22,753
これをするとき、ドアが後ろ方向に直接はじけとぶのではなく、

119
00:04:22,753 --> 00:04:26,267
ヒンジから引っ張られて外れるようになることに注意すべきです。
(翻訳:gamesonytablet)