1
00:00:00,373 --> 00:00:02,007
この課題では、レンガ撃ちゲームを

2
00:00:02,007 --> 00:00:04,007
powerCube や samoflange を用いて

3
00:00:04,007 --> 00:00:05,745
作成します。

4
00:00:06,051 --> 00:00:07,607
学習する内容として、Rigidbody および

5
00:00:07,607 --> 00:00:09,718
Collider コンポーネント、 Instantiate、

6
00:00:09,718 --> 00:00:11,718
Destroy および Translate 関数、

7
00:00:11,718 --> 00:00:13,484
さらにプレハブの使用についてカバーします。

8
00:00:13,666 --> 00:00:15,986
個別の要素についての詳細については

9
00:00:15,986 --> 00:00:17,986
下のリンクにあるレッスンを参照して下さい。

10
00:00:18,486 --> 00:00:20,486
このためには Robot Lab アセットパッケージが必要である。

11
00:00:20,486 --> 00:00:22,486
もし持っていない場合は

12
00:00:22,486 --> 00:00:24,041
このページにあるリンクを参照して下さい。

13
00:00:24,041 --> 00:00:26,624
始めるためには 空のシーンを開いて

14
00:00:26,624 --> 00:00:29,218
メニューの File - Save Scene As により

15
00:00:29,218 --> 00:00:31,521
新しいシーンとして保存する。プロジェクトの Scene フォルダに

16
00:00:31,521 --> 00:00:33,521
保存して

17
00:00:33,521 --> 00:00:35,093
Brick Shooter と名前をつけます。

18
00:00:35,662 --> 00:00:37,858
Save As を使用し後は

19
00:00:37,858 --> 00:00:39,858
Brick Shooter シーンの中にすでにいます。

20
00:00:39,858 --> 00:00:41,858
キューブの壁を作成するところから始めましょう。

21
00:00:42,358 --> 00:00:44,358
このためには powerCube  を使用します。

22
00:00:44,858 --> 00:00:46,858
Models フォルダの中には様々なアセットが

23
00:00:46,858 --> 00:00:49,245
あります。この中で

24
00:00:49,245 --> 00:00:51,245
Prop_PowerCube というアセットをみつけてください。

25
00:00:51,690 --> 00:00:53,237
次のように見えるはずです。

26
00:00:53,831 --> 00:00:55,831
シーンの中に ドラッグ＆ドロップして

27
00:00:56,538 --> 00:00:58,538
シーンビューの上にマウスカーソルを置いた状態で

28
00:00:58,538 --> 00:01:00,538
F ボタンを押してフォーカスをあてて下さい。

29
00:01:00,538 --> 00:01:02,538
始めるためには、ライティングが動作するように

30
00:01:02,538 --> 00:01:04,538
セットアップをします。このオブジェクトを

31
00:01:04,538 --> 00:01:06,538
インスペクタの最上部で

32
00:01:06,538 --> 00:01:08,304
Dynamic Objects レイヤーに配置して

33
00:01:08,804 --> 00:01:10,804
このオブジェクトのメッシュレンダラにて

34
00:01:10,804 --> 00:01:12,804
Use Light Probes チェックボックスを有効にして下さい。

35
00:01:13,138 --> 00:01:15,472
壁の最初のブロックの配置を

36
00:01:15,472 --> 00:01:21,244
(-3, 0.5, 0) にして下さい。

37
00:01:22,255 --> 00:01:24,517
Hierarchy でオブジェクトを再選択して

38
00:01:24,517 --> 00:01:26,517
シーンの上にマウスカーソルをおいて

39
00:01:26,517 --> 00:01:29,125
F ボタンを押して再度フォーカスをあてる必要があります。

40
00:01:29,125 --> 00:01:31,056
ライティングが適切に行なわれている今、

41
00:01:31,056 --> 00:01:33,056
コライダおよび Rigidbody コンポーネントを追加して

42
00:01:33,056 --> 00:01:34,622
物理的な重み (Mass) を与えることが出来ます。

43
00:01:34,956 --> 00:01:37,903
インスペクタの Add Component ボタンを使用して

44
00:01:38,403 --> 00:01:41,416
メニューから Physics -> Box Collider を選択して

45
00:01:41,916 --> 00:01:43,707
Add Component を再び選び、

46
00:01:43,707 --> 00:01:45,707
さらに Physics - Rigidbody を選択します。

47
00:01:45,707 --> 00:01:47,707
この powerCube は複製を通して壁を構成するのに

48
00:01:47,707 --> 00:01:49,985
多く使用します。

49
00:01:49,985 --> 00:01:51,817
しかし戻ってプロパティを

50
00:01:51,817 --> 00:01:53,817
全て調整したいため

51
00:01:53,817 --> 00:01:55,719
このときにプレハブにする必要があります。

52
00:01:55,719 --> 00:01:57,468
オブジェクトをドラッグ

53
00:01:57,468 --> 00:01:59,719
プロジェクトパネルの Prefab フォルダにドロップします。

54
00:02:03,683 --> 00:02:05,683
これにより オブジェクトがプレハブとして保存され

55
00:02:05,683 --> 00:02:07,947
モデルと区別するために

56
00:02:07,947 --> 00:02:10,365
別の名前にします。

57
00:02:10,365 --> 00:02:12,805
Physics_PowerCube と名前をつけます。

58
00:02:12,805 --> 00:02:14,805
ふたつの重要なコンポーネントである

59
00:02:14,805 --> 00:02:16,805
Collider および Rigidbody があるため

60
00:02:16,805 --> 00:02:18,372
つまり 物理エンジンにより制御

61
00:02:18,372 --> 00:02:20,221
されています。これをプレハブとしたため

62
00:02:20,221 --> 00:02:22,511
テキストは Hierarchy ビューでテキストは

63
00:02:22,511 --> 00:02:24,511
青文字で表示されます。

64
00:02:24,735 --> 00:02:26,291
それでは壁を構成するために

65
00:02:26,291 --> 00:02:27,903
複製をしていきましょう。

66
00:02:27,903 --> 00:02:29,863
Hierarchy ビューのオブジェクトを選択して

67
00:02:30,363 --> 00:02:33,078
ハンドツールを少し使用してズームアウトする。

68
00:02:33,868 --> 00:02:35,566
これを複製するには

69
00:02:35,566 --> 00:02:37,705
メニューから Edit - Duplicate を選択するか

70
00:02:38,371 --> 00:02:40,580
PC では Ctrl + D、

71
00:02:40,580 --> 00:02:42,580
Mac では Cmd + D のショートカットを使用します。

72
00:02:43,080 --> 00:02:44,734
これからスナップを使用して壁の

73
00:02:44,734 --> 00:02:46,734
レンガを配置する。

74
00:02:47,110 --> 00:02:49,110
スナップを使用するには、Mac では Cmd キー、 

75
00:02:49,110 --> 00:02:51,978
PC では Ctrl を押さえたままにして

76
00:02:51,978 --> 00:02:54,508
位置調整ツールを使用してドラッグできます。

77
00:02:54,746 --> 00:02:56,746
キーを押さえたまま

78
00:02:58,144 --> 00:03:00,739
ハンドルを引っ張ることによりオブジェクトは

79
00:03:00,739 --> 00:03:03,866
1 単位づつしか移動しない。そしてオブジェクトは

80
00:03:03,866 --> 00:03:05,866
1 のスケールであるようにモデリングされているため、

81
00:03:05,866 --> 00:03:07,866
その位置にピタリとスナップする。

82
00:03:07,866 --> 00:03:09,866
次に最初の行に 7 つ出来るまで

83
00:03:10,518 --> 00:03:13,336
このステップを繰り返します。

84
00:03:13,836 --> 00:03:15,168
複製して

85
00:03:15,585 --> 00:03:18,507
Cmd ドラッグまたは Ctrl ドラッグをすることでスナップします。

86
00:03:19,338 --> 00:03:22,251
複製して、スナップしてドラッグ

87
00:03:22,654 --> 00:03:24,654
複製して、スナップしてドラッグ

88
00:03:24,974 --> 00:03:27,736
複製して、スナップしてドラッグ、そしてもう一回繰り返します。

89
00:03:27,987 --> 00:03:29,987
これが最初のキューブの行です。

90
00:03:30,183 --> 00:03:32,458
次にきれいに整理するために

91
00:03:32,458 --> 00:03:34,780
空のゲームオブジェクトを作成して

92
00:03:34,780 --> 00:03:38,144
行を格納させます。メニューから Game Object - Create Empty を選択して

93
00:03:39,721 --> 00:03:41,721
Mac 上で Return キーまたは PC 上で F2 キーを押下して

94
00:03:41,721 --> 00:03:45,045
名前を変更し、 Row という名前にします。

95
00:03:46,153 --> 00:03:48,694
これを列の真ん中に位置します。

96
00:03:49,194 --> 00:03:53,149
(0, 0.5, 0) に配置します。

97
00:03:53,456 --> 00:03:55,882
行に powerCube を追加するために

98
00:03:56,479 --> 00:03:58,025
まとめて選択をして

99
00:03:58,718 --> 00:04:01,496
最初のものを選択して、Shift キーを押したままにして

100
00:04:01,496 --> 00:04:03,273
最後のものを選択します。

101
00:04:03,637 --> 00:04:06,876
これらを Hierarchy ビューの行の上にドラッグします。

102
00:04:08,108 --> 00:04:10,703
これらは全て Row の子オブジェクトとなりました。

103
00:04:10,885 --> 00:04:13,304
あとは Row を便利に複製して

104
00:04:13,304 --> 00:04:15,304
スナップしてドラッグを使用することで

105
00:04:15,304 --> 00:04:16,958
残りの壁を作成します。

106
00:04:16,958 --> 00:04:18,958
Hierarchy ビューの Row を選択して

107
00:04:19,251 --> 00:04:21,251
複製します。

108
00:04:22,262 --> 00:04:24,262
スナップして上にドラッグ、

109
00:04:25,218 --> 00:04:28,086
スナップして上にドラッグ、

110
00:04:28,710 --> 00:04:32,818
これを 5 行できるまで繰り返します。

111
00:04:34,533 --> 00:04:36,811
壁が完成したので、次は

112
00:04:36,811 --> 00:04:38,019
発射物を作成します。

113
00:04:38,019 --> 00:04:40,789
Models フォルダから prop_samoflange アセットを見つけて、

114
00:04:40,789 --> 00:04:43,355
シーンにドラッグします。

115
00:04:44,408 --> 00:04:46,408
上にドラッグしてみえるようんしいて

116
00:04:46,908 --> 00:04:49,409
ホバーをして、 F キーを押してフォーカスをあてます。

117
00:04:50,641 --> 00:04:52,641
ライティングをセットアップするために

118
00:04:52,641 --> 00:04:54,641
Dynamic Objects レイヤーにのせて

119
00:04:54,641 --> 00:04:56,989
メッシュレンダラで

120
00:04:56,989 --> 00:04:58,989
Use Light Probes を有効にします。

121
00:05:01,077 --> 00:05:03,552
これもまた Physics Object とする必要があります。

122
00:05:04,116 --> 00:05:09,068
Add Component - Physics - Sphere Collider を選択して

123
00:05:09,068 --> 00:05:13,047
そして メニューから Add Component - Physics - Rigidbody を選択します。

124
00:05:13,047 --> 00:05:15,308
発射物は準備ができているが、

125
00:05:15,308 --> 00:05:17,308
スクリプトを使用して作成および発射をするため、

126
00:05:17,308 --> 00:05:19,749
開始時にシーンはないようにします。

127
00:05:19,749 --> 00:05:22,026
これもまた

128
00:05:22,026 --> 00:05:23,373
プレハブとして保存します。

129
00:05:23,873 --> 00:05:26,301
Hierarchy ビューからドラッグして

130
00:05:26,301 --> 00:05:29,032
Prefabs フォルダにドロップします。次に名前の変更をして

131
00:05:29,032 --> 00:05:32,793
これも Physics_Samoflange とします。

132
00:05:34,205 --> 00:05:36,136
これをシーンから削除するには

133
00:05:36,136 --> 00:05:38,136
Hierarchy ビューで選択をして

134
00:05:38,136 --> 00:05:40,136
Mac では Cmd - Backspace を押下するか、

135
00:05:40,136 --> 00:05:41,764
PC では Delete を押下します。

136
00:05:41,764 --> 00:05:43,598
これで撃つためのメカニックをセットアップします。

137
00:05:43,598 --> 00:05:46,044
最初にHierarchy ビューで Camera オブジェクトを拡大して

138
00:05:46,044 --> 00:05:49,013
Camera01 を選択します。

139
00:05:49,013 --> 00:05:53,216
(0, 3, 10) に再配置します。

140
00:05:53,216 --> 00:05:58,532
回転を (0, 180, 0) にセットします。

141
00:05:59,253 --> 00:06:01,253
ゲームビューで分かるように

142
00:06:01,253 --> 00:06:04,538
カメラはレンガの壁のほうに向いています。

143
00:06:04,538 --> 00:06:06,538
カメラは移動してレンガの壁に向かって

144
00:06:06,538 --> 00:06:08,427
撃つためカメラに向かって撃つコードを

145
00:06:08,427 --> 00:06:10,860
配置します。

146
00:06:11,512 --> 00:06:15,124
このため Add Component - New Script を選択します。

147
00:06:15,124 --> 00:06:17,991
そしてこのスクリプトを Shooter と名前をつけます。

148
00:06:21,654 --> 00:06:23,654
スクリプト アイコンをダブルクリックして

149
00:06:23,654 --> 00:06:25,654
編集のために開きます。

150
00:06:27,604 --> 00:06:29,604
このために Start 関数は必要ないので

151
00:06:29,604 --> 00:06:31,604
始める時に削除して

152
00:06:31,604 --> 00:06:33,604
Update 関数の上のコメントも

153
00:06:33,604 --> 00:06:35,135
削除します。

154
00:06:35,135 --> 00:06:37,135
いくつかの public 変数で始めて

155
00:06:37,135 --> 00:06:39,357
インスペクタで設定を調整するか

156
00:06:39,357 --> 00:06:41,012
プレハブを割り当てます。

157
00:06:41,484 --> 00:06:43,718
最初に public である Rigidbody 型の変数を

158
00:06:43,718 --> 00:06:45,482
追加して Projectile と名前をつけます。

159
00:06:45,831 --> 00:06:48,138
physics_samoflange プレハブをこの上に

160
00:06:48,138 --> 00:06:50,596
ドラッグ＆ドロップして

161
00:06:50,596 --> 00:06:52,596
Instantiate 関数に使用して

162
00:06:52,596 --> 00:06:54,596
発射物のインスタンスを作成します。

163
00:06:55,455 --> 00:06:57,762
次に public である Transform 型の 

164
00:06:57,762 --> 00:06:59,306
shotPos 変数を追加します。

165
00:06:59,615 --> 00:07:01,615
空のゲームオブジェクトを作成して

166
00:07:01,615 --> 00:07:04,372
発射物を発射する位置を格納して、

167
00:07:04,372 --> 00:07:07,091
この変数に後ほど割り当てを行ないます。

168
00:07:08,033 --> 00:07:09,674
次に public である float 変数

169
00:07:09,674 --> 00:07:11,506
shotForce を追加して

170
00:07:11,506 --> 00:07:13,506
値に 1000 をセットします。

171
00:07:13,506 --> 00:07:15,351
次にこれを使用して発射する

172
00:07:15,351 --> 00:07:17,020
力の強さを定義します。

173
00:07:17,368 --> 00:07:19,438
そして最終的に public である float 型の変数

174
00:07:19,438 --> 00:07:21,438
moveSpeed を追加して値を 10 にセットする。

175
00:07:21,938 --> 00:07:23,938
これによりカメラの移動速度を定義して

176
00:07:23,938 --> 00:07:25,938
撃つ狙いを定めます。

177
00:07:27,432 --> 00:07:29,736
全ての処理は即時である必要があるため、

178
00:07:29,736 --> 00:07:32,484
これは Update 関数の中で処理を行ないます。

179
00:07:32,984 --> 00:07:34,943
初めに二つの変数を追加して

180
00:07:34,943 --> 00:07:36,943
Horizonatl および Vertical の

181
00:07:36,943 --> 00:07:38,487
の Input Axis として使用します。

182
00:07:38,711 --> 00:07:40,517
これらの float 変数は

183
00:07:40,517 --> 00:07:42,270
H および V とします。

184
00:07:42,563 --> 00:07:45,544
これらに Time.deltaTime を掛け算して

185
00:07:45,544 --> 00:07:48,305
スムージングを行ないます。さらに

186
00:07:48,305 --> 00:07:50,799
moveSpeed を掛け算することでスピードを増加させます。

187
00:07:53,329 --> 00:07:55,329
さらにこれらの変数を

188
00:07:55,329 --> 00:07:57,580
Translate コマンドを使用して

189
00:07:57,580 --> 00:07:59,638
カメラを動かします。まずは

190
00:07:59,638 --> 00:08:03,463
transform.Translate を記述して新しい

191
00:08:03,463 --> 00:08:06,638
Vector3 型の H および V の値を入れて

192
00:08:06,638 --> 00:08:08,638
Vector の構成要素とします。

193
00:08:11,831 --> 00:08:14,527
Horizontal Axis を使用して

194
00:08:14,527 --> 00:08:16,898
オブジェクトの X 軸上を移動し

195
00:08:16,898 --> 00:08:20,139
そして Vertical Axis を使用して Y 軸上を移動します。

196
00:08:20,390 --> 00:08:22,446
発射物を発射するため

197
00:08:22,446 --> 00:08:24,446
if 文を追加して Fire1 ボタンが離されるのを

198
00:08:24,446 --> 00:08:26,446
待ちます。

199
00:08:26,877 --> 00:08:28,877
これはデフォルトではキーボードの

200
00:08:28,877 --> 00:08:30,877
左 Ctrl キーとなっています。

201
00:08:31,778 --> 00:08:34,505
この中に instantiate 関数を使用して

202
00:08:34,505 --> 00:08:36,769
発射物インスタンスを作成し

203
00:08:36,769 --> 00:08:38,769
さらに Force を追加します。

204
00:08:39,186 --> 00:08:41,696
初めに Rigidbody 形の変数

205
00:08:41,696 --> 00:08:44,283
Shot を作成して Instantiate 関数に

206
00:08:44,283 --> 00:08:46,130
等しくします。

207
00:08:46,645 --> 00:08:48,645
この関数では作成するオブジェクト、

208
00:08:48,645 --> 00:08:51,798
位置、および回転の

209
00:08:51,798 --> 00:08:53,537
3 つの引数が必要です。

210
00:08:53,856 --> 00:08:56,144
発射物の変数である

211
00:08:56,144 --> 00:08:58,880
shotPos の Transform 位置および

212
00:08:58,880 --> 00:09:00,880
shotPos の 回転を使用します。

213
00:09:01,297 --> 00:09:03,827
Instantiate 関数の行を完成するには

214
00:09:03,827 --> 00:09:07,131
as Rigidbody を追加して結果を型キャストして

215
00:09:07,131 --> 00:09:09,131
Rigidbody 型に変換します。

216
00:09:09,341 --> 00:09:11,313
これは Instantiate 関数は

217
00:09:11,313 --> 00:09:13,313
オブジェクトを戻り値とするためであり、

218
00:09:13,313 --> 00:09:15,313
一方でインスタンス化されたオブジェクトは

219
00:09:15,313 --> 00:09:18,230
Rigidbody である必要があります。

220
00:09:19,255 --> 00:09:21,380
最終的に Rigidbody 型の変数である

221
00:09:21,380 --> 00:09:23,865
Shot を使用して格納された

222
00:09:23,865 --> 00:09:27,517
発射物のインスタンスをみつけて力を追加することが出来ます。

223
00:09:28,929 --> 00:09:30,929
shotPos のTransform の

224
00:09:30,929 --> 00:09:32,846
Forward 方向で行ない

225
00:09:32,846 --> 00:09:35,771
さらに shotForce を掛け算します。

226
00:09:36,782 --> 00:09:40,376
それではこのスクリプトを保存して Unity に戻ります。

227
00:09:47,602 --> 00:09:49,602
カメラを再度選択して、

228
00:09:49,602 --> 00:09:51,036
public 変数を Script コンポーネントで

229
00:09:51,036 --> 00:09:52,634
みることが出来ます。

230
00:09:52,634 --> 00:09:55,019
最初に physics_samoflange を

231
00:09:55,019 --> 00:09:57,477
先ほど作成したプレハブから

232
00:09:57,477 --> 00:09:59,477
発射物のフィールドに割り当てます。

233
00:10:02,007 --> 00:10:04,351
次にシーンに Transform を追加して

234
00:10:04,351 --> 00:10:06,351
撃つ位置および向きを

235
00:10:06,351 --> 00:10:08,351
表します。

236
00:10:08,351 --> 00:10:10,351
空のゲームオブジェクトを作成するには

237
00:10:10,351 --> 00:10:13,016
Game Object - Create Empty を選択します。

238
00:10:13,516 --> 00:10:15,960
これを shotPos と名前をつけて

239
00:10:19,900 --> 00:10:22,301
camera_001 の上にドラッグ＆ドロップして

240
00:10:22,301 --> 00:10:24,301
その下の子オブジェクトとします。

241
00:10:26,832 --> 00:10:29,422
Tranfrom をリセットして

242
00:10:29,422 --> 00:10:31,156
カメラとマッチングするようにします。

243
00:10:31,546 --> 00:10:33,546
もしズームアウトすると

244
00:10:33,546 --> 00:10:35,546
カメラがここに配置されて

245
00:10:36,046 --> 00:10:38,623
shotPos を選択すれば、

246
00:10:38,623 --> 00:10:40,623
歯車アイコンをクリックして

247
00:10:40,623 --> 00:10:42,971
Reset を選択すると、Transform の全ての値は

248
00:10:42,971 --> 00:10:45,441
デフォルトの値にリセットされます。

249
00:10:46,106 --> 00:10:48,356
これで位置調整ツールを選択すれば

250
00:10:48,356 --> 00:10:50,039
カメラとまったく同じ位置であることが

251
00:10:50,039 --> 00:10:51,692
確認できます。

252
00:10:51,692 --> 00:10:53,692
しかしわずかに前方および

253
00:10:53,692 --> 00:10:55,692
わずかに低い位置、さらには少し上向きの傾きに修正しないと

254
00:10:55,692 --> 00:10:58,194
カメラの下から撃って、壁に向かった曲線を

255
00:10:58,194 --> 00:11:00,707
描くことが出来ません。

256
00:11:01,387 --> 00:11:03,387
shotPos の位置を

257
00:11:03,887 --> 00:11:11,988
(-0.5, -0.5, 1) にセットします。

258
00:11:13,869 --> 00:11:15,202
みてのとおり、これで

259
00:11:15,202 --> 00:11:17,202
カメラの前方に位置されます。

260
00:11:18,945 --> 00:11:21,288
次に上向きの傾きに修正するため

261
00:11:21,288 --> 00:11:25,558
X 軸に -15 を入力します。

262
00:11:31,804 --> 00:11:33,916
次にカメラを再選択して

263
00:11:33,916 --> 00:11:36,301
ここにスクリプトコンポーネントがあり、そして

264
00:11:36,301 --> 00:11:38,912
Hierarchy ビューから shotPos をドラッグ＆ドロップして

265
00:11:38,912 --> 00:11:41,259
Shooter スクリプト コンポーネントの

266
00:11:41,259 --> 00:11:43,259
shotPos 変数にドロップします。

267
00:11:45,513 --> 00:11:48,554
これで完了であり、スクリプトは使用する準備が出来ました。

268
00:11:48,554 --> 00:11:52,458
シーンを保存するにはメニューから File - Save Scene を選択して

269
00:11:53,055 --> 00:11:55,498
Play ボタンを押下してゲーム再生をします。

270
00:11:55,498 --> 00:11:57,138
方向キーとして

271
00:11:57,138 --> 00:12:00,037
キーボードの W, A, S および D キーが

272
00:12:00,037 --> 00:12:02,937
Horizontal および Vertical のデフォルト値であることを覚えて下さい。

273
00:12:02,937 --> 00:12:06,214
左 Ctrl キーが Fire1 にあたり、このキーにより撃ちます。

274
00:12:06,645 --> 00:12:08,962
ひとつできることは散在している発射物を整理することです。

275
00:12:08,962 --> 00:12:12,186
撃ち続けている間は

276
00:12:12,186 --> 00:12:14,618
シーンに Rigidbody オブジェクトを追加しているため、

277
00:12:14,618 --> 00:12:16,618
これらは整理すべきです。

278
00:12:16,618 --> 00:12:18,618
そうしなければ物理エンジンで

279
00:12:18,618 --> 00:12:20,618
管理しないといけない対象が次々と増えてしまい、

280
00:12:20,618 --> 00:12:22,963
最終的にパフォーマンスに影響します。

281
00:12:23,919 --> 00:12:25,919
Play を押すことで

282
00:12:25,919 --> 00:12:28,372
Play モードに入っていないことを確認して

283
00:12:28,372 --> 00:12:31,093
Prefabs フォルダの physics_samoflange を選択します。

284
00:12:31,093 --> 00:12:33,093
インスペクタの下にスクロールして

285
00:12:33,093 --> 00:12:37,358
Add Component をクリックして New Script を選択して

286
00:12:37,358 --> 00:12:39,636
このスクリプトの名前を Tidy にします。

287
00:12:40,675 --> 00:12:43,227
アイコンをダブルクリックして編集のために開き、

288
00:12:44,128 --> 00:12:46,768
ここで唯一必要なのは Start 関数です。

289
00:12:46,768 --> 00:12:49,004
Update 関数を取り除いて、

290
00:12:49,338 --> 00:12:51,159
さらにコメントも取り除きます。

291
00:12:51,466 --> 00:12:53,466
このオブジェクトがゲームに登場するとき、

292
00:12:53,466 --> 00:12:55,466
Destroy コマンドを使用して

293
00:12:55,966 --> 00:12:57,800
そしてアタッチされているゲームオブジェクトを破棄します。

294
00:12:57,800 --> 00:13:01,224
すなわちボール自身を破棄します。

295
00:13:01,917 --> 00:13:03,917
そしてこれはオブジェクトがゲームに登場した瞬間には

296
00:13:03,917 --> 00:13:06,252
起きてほしくないため

297
00:13:06,252 --> 00:13:08,252
Destroy コマンドの

298
00:13:08,252 --> 00:13:11,007
二つめの引数を使用して、遅延したタイマー実行を行ないます。

299
00:13:11,007 --> 00:13:13,427
これを 5 秒と設定します。

300
00:13:13,427 --> 00:13:15,427
スクリプトを保存して

301
00:13:15,427 --> 00:13:17,427
Unity に戻ります。

302
00:13:18,148 --> 00:13:19,386
これでゲームをテスト実行すると、

303
00:13:19,386 --> 00:13:22,062
いくつかの 発射物を撃った後、

304
00:13:22,062 --> 00:13:24,062
それらは最終的に

305
00:13:24,062 --> 00:13:26,062
5秒後に

306
00:13:26,062 --> 00:13:28,062
ゲームから破棄されるこの気付きます。

307
00:13:28,062 --> 00:13:30,062
Hierarchy ビューをみることで

308
00:13:30,062 --> 00:13:32,452
これらのオブジェクトはシーンから削除されて

309
00:13:32,676 --> 00:13:35,369
シーンやゲームビューから消えます。

310
00:13:35,869 --> 00:13:37,869
これで Brick Shooter は完了です。

311
00:13:38,369 --> 00:13:40,369
シーンを忘れずに保存して、

312
00:13:40,369 --> 00:13:42,691
異なるオブジェクトで撃つことを試したり、

313
00:13:42,691 --> 00:13:44,943
撃つパラメータを変更したり

314
00:13:44,943 --> 00:13:46,943
またはカメラの異なる動作を試してください。

315
00:13:46,943 --> 00:13:48,943
そして、もしこの課題で分からなかった概念が

316
00:13:48,943 --> 00:13:50,943
あった場合、以下のリンクにある

317
00:13:50,943 --> 00:13:52,943
レッスンを確認して下さい。
(翻訳:gamesonytablet)
