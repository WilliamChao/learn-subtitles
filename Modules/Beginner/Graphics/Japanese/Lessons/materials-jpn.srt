1
00:00:00,000 --> 00:00:02,645
Unity におけるマテリアルとは

2
00:00:02,645 --> 00:00:04,645
ゲームオブジェクトの視覚的な見え方を制御するアセットです。

3
00:00:05,145 --> 00:00:07,461
レンダラ（Renderer) コンポーネントに適用すると

4
00:00:07,461 --> 00:00:09,225
マテリアルとは要するに

5
00:00:09,225 --> 00:00:11,489
シェーダという、

6
00:00:11,489 --> 00:00:14,169
レンダリングされた表面の見え方

7
00:00:14,169 --> 00:00:16,365
および必要なプロパティである

8
00:00:16,365 --> 00:00:18,001
色やテクスチャなどを制御するスクリプトです。

9
00:00:18,432 --> 00:00:20,119
マテリアルを作成するには

10
00:00:20,119 --> 00:00:22,119
プロジェクトパネルの Create ボタンを使用します。

11
00:00:22,395 --> 00:00:24,203
このアセットを作成した後は

12
00:00:24,203 --> 00:00:26,754
レンダラ コンポーネントにアサインして

13
00:00:27,081 --> 00:00:29,851
ドロップダウン リストからシェーダを選ぶことが出来ます。

14
00:00:29,919 --> 00:00:31,835
3D パッケージからもってきたモデルから

15
00:00:31,835 --> 00:00:33,835
マテリアルを生成することもできますが

16
00:00:33,835 --> 00:00:35,506
これについては後で説明します。

17
00:00:36,006 --> 00:00:37,536
基本的な例として、

18
00:00:37,536 --> 00:00:40,146
Unity においてプリミティブであるキューブがあり、

19
00:00:46,585 --> 00:00:49,323
その上で使用するサンプルのマテリアルがある場合

20
00:00:49,323 --> 00:00:51,323
これをメッシュ レンダラに割り当てることができます。

21
00:00:52,013 --> 00:00:54,013
メッシュレンダラ とはあらゆる 3D メッシュを

22
00:00:54,013 --> 00:00:56,013
レンダリングするのに使用するコンポーネントです。

23
00:00:57,100 --> 00:01:00,289
これをマテリアル スロットに割り当てます。

24
00:01:00,478 --> 00:01:02,791
デフォルトではプリミティブ メッシュには

25
00:01:02,791 --> 00:01:05,152
Unity のデフォルトである Diffuse マテリアルが割り当てられています。

26
00:01:05,428 --> 00:01:07,987
次にこれをサンプルのマテリアルで置き換えます。

27
00:01:08,212 --> 00:01:09,882
このマテリアルをアサインするために

28
00:01:09,882 --> 00:01:12,640
マテリアルのプロパティに直接ドラッグしますが、

29
00:01:12,640 --> 00:01:15,557
別の方法として、モデルの上にドラッグしたり

30
00:01:15,798 --> 00:01:17,383
シーン上にドロップすることができます。

31
00:01:17,520 --> 00:01:19,437
Unity のプレビューにより

32
00:01:19,437 --> 00:01:21,288
ドロップしているメッシュ上でマテリアルが

33
00:01:21,288 --> 00:01:22,735
どのようにみえるか確認できます。

34
00:01:23,512 --> 00:01:25,842
一回アサインすると、このマテリアルの設定を

35
00:01:25,842 --> 00:01:27,842
インスペクタ上ｗの他のコンポーネントの下で確認することが出来ます。

36
00:01:27,842 --> 00:01:30,203
インスペクタの設定のこの部分は

37
00:01:30,203 --> 00:01:32,495
単に、マテリアル アセットを編集する場合のリンクでしかない

38
00:01:32,495 --> 00:01:33,761
ことを理解すべきです。

39
00:01:33,761 --> 00:01:35,708
これが重要である理由は、

40
00:01:35,708 --> 00:01:37,708
オブジェクトのマテリアルのプロパティを変更するとき

41
00:01:37,708 --> 00:01:40,817
実際にはマテリアル アセットそのものを変更しています。

42
00:01:41,317 --> 00:01:43,901
例えば、もしこのマテリアルを赤にした場合

43
00:01:47,025 --> 00:01:49,025
アセットが赤になります。

44
00:01:49,387 --> 00:01:50,668
つまり例えば

45
00:01:50,978 --> 00:01:53,294
Sphere があったとして

46
00:01:59,767 --> 00:02:01,767
同じマテリアルを割り当てた場合

47
00:02:02,819 --> 00:02:04,353
これもまた赤になります。

48
00:02:04,663 --> 00:02:06,854
そしてこのマテリアルをそれら二つのマテリアルのいずれかの上で

49
00:02:06,854 --> 00:02:08,854
調整するとき、

50
00:02:09,647 --> 00:02:12,319
アセットを調整していることになるので、

51
00:02:12,319 --> 00:02:14,891
そのマテリアルを使用するオブジェクトもまた変更されます。

52
00:02:17,342 --> 00:02:19,221
モデリング アプリケーションから 3D アセットを

53
00:02:19,221 --> 00:02:21,497
導入するとき、 Unity は

54
00:02:21,497 --> 00:02:23,980
アセットがある場所に、

55
00:02:23,980 --> 00:02:25,756
Materials サブフォルダの中でマテリアルを作成し、

56
00:02:25,756 --> 00:02:28,256
さらにテクスチャを自動的に割り当てます。

57
00:02:28,756 --> 00:02:30,843
例えば、この prop_blastDoor は

58
00:02:30,843 --> 00:02:32,843
Unityにインポートされたとき、

59
00:02:32,843 --> 00:02:35,659
Textures フォルダにテキスチャを保存してますが、

60
00:02:35,659 --> 00:02:37,902
Unity は自動的にここを検索して

61
00:02:37,902 --> 00:02:39,729
Unity が自動的に作成するマテリアルに再度割り当てを

62
00:02:39,729 --> 00:02:40,728
行ないます。

63
00:02:41,004 --> 00:02:43,004
アセットの二つの部品はドアと

64
00:02:43,124 --> 00:02:44,239
フレーム部分です。

65
00:02:44,446 --> 00:02:46,600
これらのアセットの両方は同じマテリアルを共有して

66
00:02:46,600 --> 00:02:48,704
テクスチャの異なる部分を使用して

67
00:02:48,704 --> 00:02:49,545
レンダリングを行ないます。

68
00:02:49,821 --> 00:02:51,648
作成されたマテリアルは

69
00:02:51,648 --> 00:02:53,648
prop_blastDoor であり、

70
00:02:54,148 --> 00:02:55,681
その上でクリックすれば確認することが出来ます。

71
00:02:55,681 --> 00:02:57,681
プロジェクトパネル上でハイライトされています。

72
00:02:59,994 --> 00:03:02,781
標準ではこれをインポートするとき

73
00:03:02,781 --> 00:03:05,360
別の Diffuse シェーダが表示されます。

74
00:03:06,015 --> 00:03:07,809
これは 3D メッシュをレンダリングするとき、

75
00:03:07,809 --> 00:03:09,312
平坦にみえる標準的な見え方です。

76
00:03:09,657 --> 00:03:11,899
このアセットにはノーマルマップがあり、

77
00:03:11,899 --> 00:03:13,899
その代わりに Bump Diffuse といった

78
00:03:13,899 --> 00:03:15,585
バンプ (Bumped) シェーダを使用して

79
00:03:15,585 --> 00:03:17,241
このテクスチャを活用することが出来ます。

80
00:03:17,241 --> 00:03:19,137
法線マップ (Normal Map) とは

81
00:03:19,137 --> 00:03:21,137
高さや法線の向きといった情報を格納したうえで、

82
00:03:21,137 --> 00:03:22,927
平らなメッシュの

83
00:03:22,927 --> 00:03:24,141
表面にを投影して

84
00:03:24,141 --> 00:03:25,951
オブジェクトそのものに頂点データを加えることなく

85
00:03:25,951 --> 00:03:27,846
表面にディテールを加えた見た目を

86
00:03:27,846 --> 00:03:29,846
実現します。

87
00:03:30,553 --> 00:03:32,379
もしシーンビューまたはゲームビューの中で

88
00:03:32,379 --> 00:03:33,944
メッシュをみたとき

89
00:03:33,944 --> 00:03:35,944
これらが生み出す違いが分かります。

90
00:03:36,927 --> 00:03:38,927
窪みや、溝、キズなどが

91
00:03:38,927 --> 00:03:40,927
blastDoor オブジェクト上でアクセントがついて

92
00:03:40,927 --> 00:03:42,669
法線マップのテクスチャ上で表現されます。

93
00:03:42,669 --> 00:03:44,858
さらにこれを拡張して

94
00:03:44,858 --> 00:03:46,578
鏡のような表面を実現するのに

95
00:03:46,578 --> 00:03:48,072
バンプ鏡面 (Bumped Specular) を選択します。

96
00:03:48,313 --> 00:03:50,716
ここでは、テクスチャおよび法線マップに加えて

97
00:03:50,716 --> 00:03:53,285
Shininess （輝度）をセットできます。

98
00:03:56,323 --> 00:03:58,638
これでデフォルトの平らな見た目から

99
00:03:58,638 --> 00:04:00,638
窪みがあり、輝きのあるドアが表現できるようになりました。

100
00:04:00,638 --> 00:04:02,534
これはシェーダを調整するだけで実現できています。

101
00:04:02,534 --> 00:04:04,306
元のモデルそのものに

102
00:04:04,306 --> 00:04:06,306
ディテールを追加することなく、

103
00:04:06,306 --> 00:04:07,486
マテリアルを使用することに価値はまさにここにあります。

104
00:04:07,623 --> 00:04:09,520
Unity は多くのシェーダが同梱されていて

105
00:04:09,520 --> 00:04:11,520
ゲーム開発の様々なニーズをこれでカバーすることが出来て、

106
00:04:11,520 --> 00:04:13,675
さらにカスタムのシェーダを書いたうえで

107
00:04:13,675 --> 00:04:14,845
それらを割り当てることも出来ます。

108
00:04:15,345 --> 00:04:17,621
また、これらを作成するには

109
00:04:17,621 --> 00:04:19,621
プロジェクトパネルの Create ボタンを使用します。
(翻訳:gamesonytablet)
