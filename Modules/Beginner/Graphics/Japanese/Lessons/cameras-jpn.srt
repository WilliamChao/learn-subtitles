1
00:00:00,401 --> 00:00:01,897
ここではカメラについてみていきます。

2
00:00:01,897 --> 00:00:03,243
カメラは Unity における

3
00:00:03,243 --> 00:00:05,021
もっとも重要なコンポーネントのひとつです。

4
00:00:05,231 --> 00:00:07,066
カメラはシーンのコンテンツを

5
00:00:07,066 --> 00:00:08,736
ユーザに対して表示します。

6
00:00:08,739 --> 00:00:10,416
すべてのシーンには、シーンのオブジェクトをレンダリングするために

7
00:00:10,416 --> 00:00:12,637
少なくともひとつのカメラが必要であり、

8
00:00:12,637 --> 00:00:14,637
ないと何も表示されません。

9
00:00:16,725 --> 00:00:18,127
新規のシーンが作成されるとき

10
00:00:18,127 --> 00:00:20,127
ひとつのゲームオブジェクトがつねに作成されます。

11
00:00:20,127 --> 00:00:22,058
これがメイン カメラ (Main Camera) です。

12
00:00:22,309 --> 00:00:23,731
ゲームビュー カメラとは

13
00:00:23,731 --> 00:00:25,425
ゲームオブジェクトにアタッチされるコンポーネントです。

14
00:00:25,663 --> 00:00:27,877
つまり、カメラは他のゲームオブジェクトとまったく同じように

15
00:00:27,877 --> 00:00:29,320
操作して、移動できて

16
00:00:29,320 --> 00:00:31,015
親子関係やスクリプティング、

17
00:00:31,015 --> 00:00:33,015
物理挙動を与えることにも対応しています。

18
00:00:34,772 --> 00:00:37,105
1人称 (First Person)、 3 人称 (Third Person) 視点

19
00:00:37,105 --> 00:00:38,881
さらに横スクロールでのカメラをを作成するとき

20
00:00:38,881 --> 00:00:41,862
プレイヤーオブジェクトを親として使用できます。

21
00:00:43,564 --> 00:00:46,247
First Person カメラでは、カメラが

22
00:00:46,247 --> 00:00:48,024
キャラクターの目の高さにあり

23
00:00:48,024 --> 00:00:50,701
キャラクターの立場から正面を向いていることを確認して下さい。

24
00:01:02,178 --> 00:01:05,258
Third Person ビューからは、カメラが

25
00:01:05,258 --> 00:01:07,639
キャラクターより上で後ろにあることを確認して下さい。

26
00:01:18,112 --> 00:01:21,165
単純なパズルゲームまたは縦スクロールシューティングの場合、

27
00:01:21,165 --> 00:01:23,165
カメラは静的であり、

28
00:01:23,165 --> 00:01:25,165
ゲームの方向へ向いてレンダリングを行ないます。

29
00:01:25,165 --> 00:01:28,406
このサンプルではカメラをセンタリングして

30
00:01:28,406 --> 00:01:30,406
不要な回転をすべて取り除いて、

31
00:01:30,406 --> 00:01:32,406
真っ直ぐ下を向かせてゲームボードの上に

32
00:01:32,406 --> 00:01:35,464
位置させてトップダウンのゲームをシミュレーションします。

33
00:01:36,254 --> 00:01:38,781
このケースではカメラの Orthographic モードを

34
00:01:38,781 --> 00:01:40,470
使用しますが、これについては

35
00:01:40,470 --> 00:01:42,470
このレッスンで後ほどカバーします。

36
00:01:51,644 --> 00:01:54,463
シーンには任意の数のカメラを持たせることが出来ます。

37
00:01:54,463 --> 00:01:57,489
それぞれがゲーム環境の異なる部分をレンダリングさせることが出来ます。

38
00:01:58,348 --> 00:02:00,292
このサンプルでは 3 つのカメラを用意しました。

39
00:02:00,654 --> 00:02:02,393
ひとつがシーンのすべての動的な

40
00:02:02,393 --> 00:02:04,795
オブジェクトをレンダリングしています。もうひとつは

41
00:02:04,795 --> 00:02:07,337
静的な背景をレンダリングして、 3 つめは

42
00:02:07,337 --> 00:02:09,337
上に重ねたユーザインタフェースをレンダリングします。

43
00:02:10,127 --> 00:02:11,741
3 つのカメラを全てひとつにまとめて

44
00:02:11,741 --> 00:02:14,422
ユーザにとってひとつの表示をさせることが出来ます。

45
00:02:14,922 --> 00:02:16,505
3 つのカメラ全てを同時に使用する

46
00:02:16,505 --> 00:02:19,391
正しい方法はこのレッスンの後の方でカバーします。

47
00:02:20,457 --> 00:02:22,457
カメラが Hierarchy ビューで選択されたとき

48
00:02:22,457 --> 00:02:25,164
シーン上でカメラのプレビューが表示されます。

49
00:02:25,164 --> 00:02:26,984
シーンに複数のカメラがあるとき

50
00:02:26,984 --> 00:02:29,801
これによりカメラが何をレンダリングするかを見るのに役立ちます。

51
00:02:30,301 --> 00:02:32,301
このプレビューは全画面モードであるときに

52
00:02:32,301 --> 00:02:34,301
役立ち、例えカメラがひとつだけの場合も

53
00:02:34,301 --> 00:02:37,209
カメラが何をレンダリングしているかみることが出来ます。

54
00:02:41,328 --> 00:02:42,887
カメラは正面にあるものの全てを

55
00:02:42,887 --> 00:02:44,887
そのビューの中にレンダリングします。

56
00:02:45,387 --> 00:02:46,892
シーン全体のどこまでがビューの範囲に表示されるか

57
00:02:46,892 --> 00:02:49,667
は白い枠線つきでシーンビューに表示されます。

58
00:02:50,236 --> 00:02:52,610
これはビュー Frustum と呼ばれるものです。

59
00:02:52,986 --> 00:02:55,758
ビュー Frustum の形状はピラミッドまたは

60
00:02:55,758 --> 00:02:57,343
錐体の上の部分を切り取ったような形です。

61
00:02:57,343 --> 00:02:59,928
ピラミッドの上の部分の切り取った部分は

62
00:02:59,928 --> 00:03:01,693
ニア クリッピング プレーン（near clipping plane）と呼ばれ、

63
00:03:01,693 --> 00:03:03,499
土台の部分が ファー クリッピング プレーン（far clipping plane）と呼ばれます。

64
00:03:03,958 --> 00:03:05,958
ニアおよびファー クリッピング プレーンは

65
00:03:05,958 --> 00:03:07,958
カメラの描画する距離を制御します。

66
00:03:08,872 --> 00:03:10,872
レンダリングする対象となるためには

67
00:03:10,872 --> 00:03:13,233
ニアおよびファーの間にある必要があります。

68
00:03:13,233 --> 00:03:15,233
横の部分はカメラが端から端のどこまで見えるか、

69
00:03:15,233 --> 00:03:17,233
さらに上から下のどこまで見えるかを示します。

70
00:03:17,233 --> 00:03:19,233
そしてシーンのうち、 Frustum の範囲にある

71
00:03:19,233 --> 00:03:21,233
部分はすべてレンダリングされます。

72
00:03:22,506 --> 00:03:24,079
カメラにはシーンを見るために

73
00:03:24,079 --> 00:03:26,232
二つの方法が用意されてます。Perspective モードと

74
00:03:26,232 --> 00:03:27,723
Orthographic モードです。

75
00:03:27,723 --> 00:03:29,531
どちらの方法をとるかにより Frusum の形状および

76
00:03:29,531 --> 00:03:31,181
サイズ、さらにはカメラを通したシーンの見た目は

77
00:03:31,181 --> 00:03:33,181
劇的に変化します。

78
00:03:33,999 --> 00:03:35,999
Perspective モードではカメラはシーンを

79
00:03:35,999 --> 00:03:37,999
現実世界のカメラのようにレンダリングして

80
00:03:37,999 --> 00:03:39,999
遠近法のような図法になります。

81
00:03:39,999 --> 00:03:42,289
これはシーンビューで確認することが出来て

82
00:03:42,289 --> 00:03:44,289
白で表現されているカメラの Frustum は

83
00:03:44,289 --> 00:03:46,289
カメラから遠ざかるにつれて

84
00:03:46,289 --> 00:03:47,834
大きくなります。

85
00:03:47,834 --> 00:03:49,834
これはゲーム作成時にもっとも一般的に使用される

86
00:03:49,834 --> 00:03:51,215
カメラのモードです。

87
00:03:51,715 --> 00:03:53,632
Orthographic モードでは

88
00:03:53,632 --> 00:03:55,632
遠近法のような表現はありません。すべてのオブジェクトは

89
00:03:55,632 --> 00:03:57,313
カメラを通した、

90
00:03:57,313 --> 00:03:59,781
平行透視のような画法になります。みてのとおり

91
00:03:59,781 --> 00:04:01,781
シーンビューにおいて Frustum が真っ直ぐであり

92
00:04:01,781 --> 00:04:04,547
前および後ろの部分が同じ大きさになっています。

93
00:04:04,547 --> 00:04:06,547
このモードはおもにリアルタイム戦略ゲーム、ボードゲーム、

94
00:04:06,547 --> 00:04:08,547
2D ゲーム、パズルゲームといった

95
00:04:08,547 --> 00:04:10,547
等倍のゲームでみられ、

96
00:04:10,547 --> 00:04:13,322
追加のカメラを

97
00:04:13,322 --> 00:04:15,322
ゲームビューの上に

98
00:04:15,322 --> 00:04:17,322
UI 要素をレンダリングする必要がある

99
00:04:17,322 --> 00:04:19,322
	ミニマップやヘッドアップディスプレイの場合に使用されます。

100
00:04:19,670 --> 00:04:21,406
シーンの中に何がレンダリングされるか制御するために

101
00:04:21,406 --> 00:04:23,685
ニアおよびファー クリッピング プレーン、

102
00:04:23,685 --> 00:04:26,357
および Frustum のサイズや形を調整して下さい。

103
00:04:26,857 --> 00:04:28,857
Field Of View によりカメラのビューの幅を

104
00:04:28,857 --> 00:04:30,857
制御します。これは現実世界のカメラで

105
00:04:30,857 --> 00:04:33,695
ズームを使用する場合などに使用できます。

106
00:04:34,195 --> 00:04:36,195
カメラが Orthographic モードにある場合、

107
00:04:36,195 --> 00:04:38,974
Size により Field Of View プロパティを置き換えます。

108
00:04:38,974 --> 00:04:40,400
これにより Orthographic ビューポートのサイズを

109
00:04:40,400 --> 00:04:41,932
制御します。

110
00:04:41,932 --> 00:04:44,657
これは Field Of View に似ていますが、

111
00:04:44,657 --> 00:04:46,657
Size プロパティの値は

112
00:04:46,657 --> 00:04:48,657
前や後ろのプレーンのサイズを同時に変化させます。

113
00:04:48,657 --> 00:04:50,657
これは Orthographic カメラでは

114
00:04:50,657 --> 00:04:52,657
パース（遠近法）がかからないためです。

115
00:04:54,663 --> 00:04:57,148
シーンには何らかの背景が必要です。

116
00:04:58,863 --> 00:05:00,863
これは Clear Flags および

117
00:05:00,863 --> 00:05:02,074
Background プロパティにより制御されます。

118
00:05:02,408 --> 00:05:04,408
Background プロパティでセットされた

119
00:05:04,408 --> 00:05:06,408
Color の値は、もし他の設定が何も変更されない場合は

120
00:05:06,408 --> 00:05:08,408
シーンの中でオブジェクトの後ろに描画されるものと

121
00:05:08,408 --> 00:05:10,909
なります。これはデフォルトでは

122
00:05:10,909 --> 00:05:13,651
空のシーンの背景にみえる青色となります。

123
00:05:14,552 --> 00:05:16,552
Clear Flags によりカメラの背景が

124
00:05:16,552 --> 00:05:19,063
決定されます。この設定は

125
00:05:19,063 --> 00:05:21,338
複数のカメラを使用するときに特に重要です。

126
00:05:21,770 --> 00:05:23,770
各々のカメラはそのビューをレンダリングするときに

127
00:05:23,770 --> 00:05:26,226
Color および Depth の情報を格納します。シーンのうち

128
00:05:26,226 --> 00:05:28,907
描画されない部分は空と判断されます。

129
00:05:28,907 --> 00:05:30,907
Clear Flags プロパティにより

130
00:05:30,907 --> 00:05:32,907
空のシーンで何が描画されるかを判断します。

131
00:05:33,407 --> 00:05:35,143
もし Skybox がレンダリング設定でセットされている場合

132
00:05:35,143 --> 00:05:38,036
背景は Skybox となります。

133
00:05:38,036 --> 00:05:41,204
Skybox は全てのカメラにおいて デフォルトで Clear Flag となっています。

134
00:05:41,555 --> 00:05:43,555
Skybox とは複数の画像を含む

135
00:05:43,555 --> 00:05:45,555
マテリアルであり、シーン全体を囲んで

136
00:05:45,555 --> 00:05:48,451
シーンにおけるテクスチャの背景となります。

137
00:05:48,451 --> 00:05:50,451
Skybox および レンダリング設定については

138
00:05:50,451 --> 00:05:52,451
該当するレッスンを参照して下さい。

139
00:05:53,117 --> 00:05:55,117
もし Skybox をセットしてない場合、または

140
00:05:55,117 --> 00:05:57,117
Solid Color を Clear Flag として選択した場合、

141
00:05:57,117 --> 00:05:59,117
Background プロパティの Color の値が

142
00:05:59,117 --> 00:06:01,117
シーンにある

143
00:06:01,117 --> 00:06:02,054
全てのオブジェクトの背景として使用されます。

144
00:06:02,941 --> 00:06:04,941
Depth Only は主に

145
00:06:04,941 --> 00:06:06,941
複数のカメラの場合に使用されます。 Depth Only については

146
00:06:06,941 --> 00:06:08,210
もう少し後でカバーします。

147
00:06:08,710 --> 00:06:10,710
Don't Clear の場合は、各々のフレームが

148
00:06:10,710 --> 00:06:12,710
その直前のものの上に描画され、

149
00:06:12,710 --> 00:06:14,710
滲みのエフェクトが得られます。この設定は

150
00:06:14,710 --> 00:06:16,154
ゲームでの使用はあまり一般的ではありません。

151
00:06:18,854 --> 00:06:21,439
複数のカメラを使用するとき、もっとも実用的な

152
00:06:21,439 --> 00:06:24,205
Clear Flags の設定は Depth Only です。

153
00:06:24,705 --> 00:06:26,705
この設定により各々のカメラは

154
00:06:26,705 --> 00:06:28,705
値が与えられ、

155
00:06:28,705 --> 00:06:30,705
カメラのビューにおける各々のコンテンツおよび Depth は

156
00:06:30,705 --> 00:06:32,830
Depth の昇順で

157
00:06:32,830 --> 00:06:34,443
互いに重なります。

158
00:06:34,943 --> 00:06:36,943
通常はメイン カメラは

159
00:06:36,943 --> 00:06:38,943
もっとも小さい Depth の値を割り当てます。

160
00:06:39,443 --> 00:06:41,443
さらに Clear Flag を

161
00:06:41,443 --> 00:06:43,443
Skybox または Solid Color とします。

162
00:06:45,034 --> 00:06:47,034
他の全てのカメラは Clear Flags を

163
00:06:47,034 --> 00:06:49,695
Depth Only にセットします。これにより

164
00:06:49,695 --> 00:06:51,695
背景は究極的にひとつしかなく、

165
00:06:51,695 --> 00:06:53,695
全ての他のカメラの画像は

166
00:06:53,695 --> 00:06:55,695
このメインカメラの上にレイヤーされます。

167
00:06:56,513 --> 00:06:58,513
カメラがレンダリングしているコンテンツは

168
00:06:58,513 --> 00:07:00,513
Culling Mask プロパティにより制限されます。

169
00:07:00,751 --> 00:07:02,975
Culling Mask ドロップダウンにより

170
00:07:02,975 --> 00:07:04,975
シーンで利用可能なすべてのレイヤーをリストします。

171
00:07:05,309 --> 00:07:07,309
カメラは Culling Mask で選択されたレイヤーにあるオブジェクトのみ

172
00:07:07,309 --> 00:07:10,469
レンダリングします。

173
00:07:10,469 --> 00:07:12,175
レイヤーに関する詳細および使用方法については

174
00:07:12,175 --> 00:07:14,175
対応するレッスンを参照して下さい。

175
00:07:15,297 --> 00:07:17,297
ユーザインタフェースを重ねる場合、

176
00:07:17,297 --> 00:07:20,531
UI 要素は UI レイヤーにセットして

177
00:07:21,162 --> 00:07:23,162
います。UI カメラは Culling Mask を

178
00:07:23,162 --> 00:07:26,439
UI レイヤーのオブジェクトのみレンダリングするようにセットしています。

179
00:07:27,146 --> 00:07:29,713
Clear Flags は Depth Only にセットして

180
00:07:29,713 --> 00:07:31,713
さらに Depth はシーンにおける全てのカメラのうち

181
00:07:31,713 --> 00:07:33,532
もっとも高い値にセットしています。

182
00:07:33,532 --> 00:07:35,532
これにより UI カメラは

183
00:07:35,532 --> 00:07:37,532
UI 要素を Culling Mask 設定にのみもとづいて描画して

184
00:07:37,532 --> 00:07:40,620
UI 要素は他の全てのレイヤーの上に

185
00:07:40,620 --> 00:07:43,702
Depth の順に描画します。

186
00:07:44,202 --> 00:07:46,202
覚えておくべき点として、カメラは

187
00:07:46,202 --> 00:07:48,202
Orthographic ビューにセットしてあり、

188
00:07:48,202 --> 00:07:50,202
UI 要素にパースがかかることを避けています。

189
00:07:51,351 --> 00:07:53,351
複数のカメラを使用する

190
00:07:53,351 --> 00:07:55,351
典型的な用途は UI 要素のレンダリングであり、

191
00:07:55,351 --> 00:07:57,351
ミニマップやヘッドアップディスプレイを

192
00:07:57,351 --> 00:07:59,823
ワールド座標空間のビューに重ねて表示したり、ミラーとしてバック側を表示したり、

193
00:07:59,823 --> 00:08:02,278
ミサイルのカメラや、シーンにおけるオブジェクトの描画順を

194
00:08:02,278 --> 00:08:04,278
強制的に決める場合に使用し、

195
00:08:04,278 --> 00:08:06,278
First Person Shooter における銃が

196
00:08:06,278 --> 00:08:09,149
レベルにおける他のオブジェクトの中に描画されないようにするなどの場合があります。

197
00:08:09,149 --> 00:08:11,838
他のプロパティである Normalized Viewport Rect, Render Path,

198
00:08:11,838 --> 00:08:13,838
Target Texture および HDR などは

199
00:08:13,838 --> 00:08:17,455
より上級者向けであり別のレッスンでカバーします。
(翻訳:gamesonytablet)
