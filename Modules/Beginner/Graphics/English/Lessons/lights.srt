1
00:00:00,442 --> 00:00:01,378
Lights.

2
00:00:01,602 --> 00:00:03,685
Just like the real world, in Unity

3
00:00:03,685 --> 00:00:05,893
we use lights to illuminate our scenes.

4
00:00:06,117 --> 00:00:08,173
Without lights nothing would be visible

5
00:00:08,173 --> 00:00:09,649
to the cameras in our scene.

6
00:00:10,273 --> 00:00:12,758
Broadly there are two types of lighting in Unity

7
00:00:12,758 --> 00:00:14,456
dynamic and baked lighting.

8
00:00:14,956 --> 00:00:16,652
Dynamic lighting is calculated in

9
00:00:16,652 --> 00:00:18,652
real time while our game is running.

10
00:00:18,652 --> 00:00:22,289
This can be achieved simply by adding lights to our scene.

11
00:00:24,351 --> 00:00:26,235
Baked lighting is calculated offline

12
00:00:26,235 --> 00:00:27,582
and saved to a texture.

13
00:00:27,582 --> 00:00:29,833
These lighting texture maps are then applied

14
00:00:29,833 --> 00:00:31,441
to the baked objects in the scene

15
00:00:31,441 --> 00:00:32,892
for improved performance.

16
00:00:33,226 --> 00:00:35,018
For more information on baked and dynamic

17
00:00:35,018 --> 00:00:37,018
lighting see the lesson linked below.

18
00:00:38,499 --> 00:00:41,092
To light our scene we use the Light component.

19
00:00:41,454 --> 00:00:43,247
Like all components in Unity

20
00:00:43,247 --> 00:00:45,792
the light component is attached to a game object.

21
00:00:46,071 --> 00:00:47,848
We can move the light within our scene

22
00:00:47,848 --> 00:00:49,848
using the game objects transform.

23
00:00:53,041 --> 00:00:55,551
The light component has four different types of lights.

24
00:00:55,551 --> 00:00:57,551
The Point Light, the Directional Light,

25
00:00:57,551 --> 00:00:59,286
the Spot Light and for baked

26
00:00:59,286 --> 00:01:00,940
lighting only, the Area Light.

27
00:01:01,233 --> 00:01:03,385
Each of these types behave completely differently

28
00:01:03,385 --> 00:01:05,385
in the way they effect the look of our game.

29
00:01:05,968 --> 00:01:08,205
The point light behaves like a bare light bulb.

30
00:01:08,829 --> 00:01:10,829
The point light illuminates objects in the scene

31
00:01:10,829 --> 00:01:12,829
based on the light's position in the scene.

32
00:01:13,067 --> 00:01:15,067
Rotation has no influence on the light

33
00:01:15,067 --> 00:01:16,859
as this light shines equally

34
00:01:16,859 --> 00:01:18,440
in all directions.

35
00:01:20,653 --> 00:01:23,016
The directional light behaves like the sun.

36
00:01:23,016 --> 00:01:25,677
Directional lights effect all the objects in the scene

37
00:01:25,677 --> 00:01:27,928
lighting them based on the direction of the light

38
00:01:27,928 --> 00:01:29,928
set by the game object's rotation.

39
00:01:30,318 --> 00:01:32,553
Position in the scene is irrelevant.

40
00:01:34,006 --> 00:01:36,006
Spot lights behave like a flashlight

41
00:01:36,006 --> 00:01:37,339
or headlamps on a car.

42
00:01:37,339 --> 00:01:38,933
They point in a direction based

43
00:01:38,933 --> 00:01:40,503
on their transform's rotation

44
00:01:40,503 --> 00:01:42,897
and illuminate all objects within a cone.

45
00:01:43,038 --> 00:01:44,812
So spot lights respond to both

46
00:01:44,812 --> 00:01:46,812
rotation and position.

47
00:01:52,989 --> 00:01:55,605
Area lights only work when baking a light map.

48
00:01:55,843 --> 00:01:57,969
Area lights shine in all directions to

49
00:01:57,969 --> 00:01:59,969
one side of a rectangular plane.

50
00:02:03,425 --> 00:02:05,425
In addition to these four main types of lights

51
00:02:05,425 --> 00:02:07,091
there are two other items that can

52
00:02:07,091 --> 00:02:08,729
influence the lighting in the scene.

53
00:02:09,077 --> 00:02:11,695
Ambient light and emissive materials.

54
00:02:12,195 --> 00:02:13,890
Ambient light controls global

55
00:02:13,890 --> 00:02:15,862
non directional lighting in the scene.

56
00:02:16,114 --> 00:02:17,962
Ambient light works with both dynamic

57
00:02:17,962 --> 00:02:19,118
and baked lighting.

58
00:02:19,300 --> 00:02:21,063
For complete control set the 

59
00:02:21,063 --> 00:02:22,549
ambient light to black

60
00:02:22,549 --> 00:02:24,549
and use only the lighting in the scene.

61
00:02:26,789 --> 00:02:28,514
Emissive materials are created by

62
00:02:28,514 --> 00:02:30,514
setting the emission property in an

63
00:02:30,514 --> 00:02:32,514
appropriate self-illuminating shader.

64
00:02:32,738 --> 00:02:35,261
Emissive materials work only with baked lighting.

65
00:02:35,637 --> 00:02:38,620
For more information see the lessons link below.

66
00:02:39,410 --> 00:02:41,070
There are several properties that let us

67
00:02:41,070 --> 00:02:42,526
customise the light.

68
00:02:45,374 --> 00:02:47,653
Range determines how far a light is

69
00:02:47,653 --> 00:02:49,653
emitted from the centre of the game object

70
00:02:49,653 --> 00:02:51,027
holding the light component.

71
00:02:51,444 --> 00:02:53,878
Range only works with point and spot lights.

72
00:02:54,502 --> 00:02:56,876
When we have spot selected as our light type

73
00:02:56,876 --> 00:02:58,294
we also have access to the 

74
00:02:58,294 --> 00:02:59,552
spot angle property.

75
00:02:59,955 --> 00:03:02,178
Spot angle determines the angle of the cone

76
00:03:02,178 --> 00:03:04,178
used by the spot light in degrees.

77
00:03:05,576 --> 00:03:07,576
Colour will control the colour of the light.

78
00:03:07,758 --> 00:03:09,648
Note the scene gizmo colour will change

79
00:03:09,648 --> 00:03:11,648
to match the colour property.

80
00:03:14,565 --> 00:03:16,826
Intensity controls the brightness of the light

81
00:03:16,826 --> 00:03:18,826
and this is independent of range.

82
00:03:19,395 --> 00:03:21,228
When trying to light a scene, a combination

83
00:03:21,228 --> 00:03:22,711
of all of these properties are needed

84
00:03:22,711 --> 00:03:24,154
to create effective lighting.

85
00:03:24,557 --> 00:03:26,347
Our lights may appear brighter as we 

86
00:03:26,347 --> 00:03:28,347
increase both intensity and range.

87
00:03:28,347 --> 00:03:30,001
But they both have different behaviours

88
00:03:30,001 --> 00:03:31,698
in the way that they light our scene.

89
00:03:35,527 --> 00:03:37,527
As well as simple illumination

90
00:03:37,527 --> 00:03:39,942
lights can also use a number of effects.

91
00:03:39,942 --> 00:03:41,942
Shadows, flares, halos

92
00:03:41,942 --> 00:03:43,442
and something called a Cookie.

93
00:03:44,453 --> 00:03:46,563
A cookie acts like a virtual mask

94
00:03:46,563 --> 00:03:48,147
or flag in front of the light

95
00:03:48,147 --> 00:03:49,746
to create a patterned shadow.

96
00:03:50,398 --> 00:03:52,772
Cookies use the alpha channel of a texture

97
00:03:52,772 --> 00:03:55,159
to give the light a projected shadow pattern.

98
00:03:55,659 --> 00:03:57,438
Cookies must be a 2D texture

99
00:03:57,438 --> 00:03:59,922
when working with spot and directional lights.

100
00:04:00,187 --> 00:04:01,717
Cookies must be a cube map

101
00:04:01,717 --> 00:04:03,717
when using a point light.

102
00:04:04,024 --> 00:04:05,496
This makes sense when you think about

103
00:04:05,496 --> 00:04:07,496
the fact that both spot and directional lights

104
00:04:07,496 --> 00:04:08,970
are shining in one direction

105
00:04:08,970 --> 00:04:12,101
and point lights are shining in all directions.

106
00:04:15,032 --> 00:04:16,797
When using directional lights

107
00:04:16,797 --> 00:04:19,226
there is an option to change the cookie's size,

108
00:04:19,226 --> 00:04:21,226
scaling the pattern in the scene.

109
00:04:21,919 --> 00:04:23,919
Cookies do not work with area lights.

110
00:04:24,419 --> 00:04:26,419
When using baked lighting cookies only work

111
00:04:26,419 --> 00:04:28,267
with spot lights and are ignored

112
00:04:28,267 --> 00:04:30,656
for baked point lights and baked directional lights.

113
00:04:32,590 --> 00:04:33,844
Shadows.

114
00:04:34,151 --> 00:04:35,875
There are two types of shadows available

115
00:04:35,875 --> 00:04:37,569
when casting shadows from a light.

116
00:04:37,569 --> 00:04:39,569
Hard and Soft shadows.

117
00:04:40,842 --> 00:04:42,842
Hard shadows are the most efficient.

118
00:04:43,425 --> 00:04:45,425
Soft shadows are often more convincing.

119
00:04:45,676 --> 00:04:47,676
But they're most expensive to render.

120
00:04:47,983 --> 00:04:50,258
When rendering shadows there are several options.

121
00:04:50,551 --> 00:04:52,246
Strength sets the value of the

122
00:04:52,246 --> 00:04:53,408
darkness of the shadow.

123
00:04:53,687 --> 00:04:55,687
Adjust this value until the shadow seems

124
00:04:55,687 --> 00:04:56,783
correct in the scene.

125
00:04:57,034 --> 00:04:59,325
Full strength, or the value of 1

126
00:04:59,325 --> 00:05:01,325
is often too strong.

127
00:05:01,632 --> 00:05:03,968
Resolution is simply a quality setting.

128
00:05:04,233 --> 00:05:06,428
By default a light will use the value

129
00:05:06,428 --> 00:05:08,136
you set in quality settings.

130
00:05:08,595 --> 00:05:10,383
These values can be overridden here

131
00:05:10,383 --> 00:05:11,675
on a per light basis.

132
00:05:11,830 --> 00:05:13,747
For more information see the lesson on

133
00:05:13,747 --> 00:05:15,176
quality settings.

134
00:05:15,883 --> 00:05:17,883
Bias controls an offset value

135
00:05:17,883 --> 00:05:19,386
to optimise shadow rendering

136
00:05:19,386 --> 00:05:20,521
from any given light.

137
00:05:20,924 --> 00:05:23,007
Bias is a setting that effects how far

138
00:05:23,007 --> 00:05:25,007
from objects the shadows will start.

139
00:05:25,590 --> 00:05:28,423
Values that are too low will produce artefacts,

140
00:05:28,423 --> 00:05:30,423
but values that are too high will mean

141
00:05:30,423 --> 00:05:32,423
that the objects appear to be hovering.

142
00:05:33,489 --> 00:05:36,150
When using directional lights with soft shadows

143
00:05:36,150 --> 00:05:37,820
there are two additional settings.

144
00:05:37,820 --> 00:05:40,081
Softness and softness fade.

145
00:05:40,237 --> 00:05:41,834
The softness is how harsh

146
00:05:41,834 --> 00:05:43,531
the lines of the shadow will be

147
00:05:43,531 --> 00:05:45,531
and the softness fade is a measure of

148
00:05:45,531 --> 00:05:47,126
how far from the camera

149
00:05:47,126 --> 00:05:49,126
the soft shadows are drawn.

150
00:05:49,433 --> 00:05:51,280
For more information please see the 

151
00:05:51,280 --> 00:05:53,280
documentation on lights linked below.

152
00:05:54,498 --> 00:05:56,373
Draw Halo will draw the default

153
00:05:56,373 --> 00:05:58,164
scene halo around the light.

154
00:05:58,567 --> 00:06:00,567
Halos respond to both the range

155
00:06:00,567 --> 00:06:02,303
and intensity of the light.

156
00:06:02,637 --> 00:06:04,637
Details for the default halo can be

157
00:06:04,637 --> 00:06:06,637
set in the scene's render settings.

158
00:06:08,062 --> 00:06:10,062
To override the default halo

159
00:06:10,062 --> 00:06:12,062
this setting should be left off

160
00:06:12,062 --> 00:06:13,908
and an individual halo component

161
00:06:13,908 --> 00:06:15,908
should be used instead.

162
00:06:20,248 --> 00:06:22,248
A flare is similar to a halo but

163
00:06:22,248 --> 00:06:23,754
imitates a bright light source

164
00:06:23,754 --> 00:06:25,353
seen through optical glass.

165
00:06:25,756 --> 00:06:28,240
When a flare asset is loaded in to the flare slot

166
00:06:28,240 --> 00:06:30,240
the light will render using a lens flare.

167
00:06:30,657 --> 00:06:33,389
Flares only respond to the intensity of the light.

168
00:06:33,389 --> 00:06:35,292
A lens flare component can be attached

169
00:06:35,292 --> 00:06:36,943
directly to the game object

170
00:06:36,943 --> 00:06:38,639
but then the flare property on the light

171
00:06:38,639 --> 00:06:40,515
should remain empty or there will be

172
00:06:40,515 --> 00:06:42,029
two flares rendered on the light.

173
00:06:42,294 --> 00:06:44,294
A flare layer component must be attached

174
00:06:44,294 --> 00:06:45,793
to a camera for that camera

175
00:06:45,793 --> 00:06:47,793
to render a flare element.

176
00:06:52,105 --> 00:06:53,620
Render Mode.

177
00:06:54,120 --> 00:06:55,500
There are two different methods

178
00:06:55,500 --> 00:06:56,670
of rendering dynamic lights

179
00:06:56,670 --> 00:06:57,956
using vertex lighting

180
00:06:57,956 --> 00:06:59,569
and using per pixel lighting.

181
00:06:59,917 --> 00:07:01,903
Vertex lighting is usually the fastest

182
00:07:01,903 --> 00:07:03,443
and calculates the scene's lighting

183
00:07:03,443 --> 00:07:05,443
at the vertices of an objects mesh.

184
00:07:05,694 --> 00:07:07,137
The lighting is then interpolated

185
00:07:07,137 --> 00:07:08,596
over the surface of the mesh.

186
00:07:09,000 --> 00:07:11,810
Per pixel lighting is calculated at every screen pixel

187
00:07:11,810 --> 00:07:13,073
which is more expensive.

188
00:07:13,398 --> 00:07:15,398
While pixel lighting is slower to render it does

189
00:07:15,398 --> 00:07:17,288
allow for some effects that are not possible

190
00:07:17,288 --> 00:07:18,344
with vertex lighting.

191
00:07:18,844 --> 00:07:20,844
Normal mapping, light cookies and real time

192
00:07:20,844 --> 00:07:23,108
shadows are only rendered for pixel lights.

193
00:07:23,400 --> 00:07:25,400
Spot light shapes and specular highlights

194
00:07:25,400 --> 00:07:26,498
are much better when rendered

195
00:07:26,498 --> 00:07:27,899
in pixel mode as well.

196
00:07:28,501 --> 00:07:30,780
Lights have a big impact on rendering speed.

197
00:07:31,280 --> 00:07:33,099
The number of pixel lights can be limited

198
00:07:33,099 --> 00:07:34,680
in the quality settings by

199
00:07:34,680 --> 00:07:36,680
using the pixel light count property.

200
00:07:37,511 --> 00:07:39,719
When you are in the forward rendering path

201
00:07:39,719 --> 00:07:41,497
render mode gives explicit control

202
00:07:41,497 --> 00:07:43,067
over whether a light should be rendered

203
00:07:43,067 --> 00:07:44,790
as a vertex or pixel light.

204
00:07:45,153 --> 00:07:46,910
Important will force the light to be

205
00:07:46,910 --> 00:07:48,746
rendered per pixel and not important

206
00:07:48,746 --> 00:07:49,969
will force the light to be rendered

207
00:07:49,969 --> 00:07:51,969
in a faster mode using per vertex

208
00:07:51,969 --> 00:07:53,788
or spherical harmonics.

209
00:07:54,081 --> 00:07:55,914
For more information on render mode and

210
00:07:55,914 --> 00:07:58,570
render path see the documentation link below.
