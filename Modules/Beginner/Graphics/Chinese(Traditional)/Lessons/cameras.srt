1
00:00:00,401 --> 00:00:01,897
本章介紹相機

2
00:00:01,897 --> 00:00:03,243
相機是Unity最重要的元件之一

3
00:00:03,243 --> 00:00:05,021
相機是Unity最重要的元件之一

4
00:00:05,231 --> 00:00:07,066
相機將場景的內容呈現給使用者

5
00:00:07,066 --> 00:00:08,736
相機將場景的內容呈現給使用者

6
00:00:08,739 --> 00:00:10,416
每個場景最少要有一台相機來著色場景物件

7
00:00:10,416 --> 00:00:12,637
每個場景最少要有一台相機來著色場景物件

8
00:00:12,637 --> 00:00:14,637
否則甚麼都顯示不出來

9
00:00:16,725 --> 00:00:18,127
當一個新場景建立時

10
00:00:18,127 --> 00:00:20,127
也會同時產生一台相機

11
00:00:20,127 --> 00:00:22,058
這台相機叫主相機(Main camera)

12
00:00:22,309 --> 00:00:23,731
遊戲相機是建立在物件裡的元件

13
00:00:23,731 --> 00:00:25,425
遊戲相機是建立在物件裡的元件

14
00:00:25,663 --> 00:00:27,877
代表我們可以像操縱其他物件一樣操縱它

15
00:00:27,877 --> 00:00:29,320
代表我們可以像操縱其他物件一樣操縱它

16
00:00:29,320 --> 00:00:31,015
給予結構、腳本控制或物理

17
00:00:31,015 --> 00:00:33,015
給予結構、腳本控制或物理

18
00:00:34,772 --> 00:00:37,105
想建立第一或第三人稱相機或橫向捲軸

19
00:00:37,105 --> 00:00:38,881
想建立第一或第三人稱相機或橫向捲軸

20
00:00:38,881 --> 00:00:41,862
可以讓Player物件成為相機的父物件

21
00:00:43,564 --> 00:00:46,247
用於第一人稱

22
00:00:46,247 --> 00:00:48,024
調整相機到角色眼睛的高度並往前看

23
00:00:48,024 --> 00:00:50,701
調整相機到角色眼睛的高度並往前看

24
00:01:02,178 --> 00:01:05,258
用於第三人稱，調整相機到角色的後上方

25
00:01:05,258 --> 00:01:07,639
用於第三人稱，調整相機到角色的後上方

26
00:01:18,112 --> 00:01:21,165
要做一個益智遊戲或俯視射擊遊戲

27
00:01:21,165 --> 00:01:23,165
相機應該是靜止並對著遊戲場景

28
00:01:23,165 --> 00:01:25,165
相機應該是靜止並對著遊戲場景

29
00:01:25,165 --> 00:01:28,406
在本範例，我們置中相機

30
00:01:28,406 --> 00:01:30,406
移除任何不需要的角度設定

31
00:01:30,406 --> 00:01:32,406
讓鏡頭由上往下看並抬高點

32
00:01:32,406 --> 00:01:35,464
模擬一個俯視射擊遊戲場景

33
00:01:36,254 --> 00:01:38,781
這裡我們用正射模式(Orthographic)

34
00:01:38,781 --> 00:01:40,470
這裡我們用正射模式(Orthographic)

35
00:01:40,470 --> 00:01:42,470
晚一點會解釋這個模式

36
00:01:51,644 --> 00:01:54,463
場景可以有很多相機著色不同的環境部位

37
00:01:54,463 --> 00:01:57,489
場景可以有很多相機著色不同的環境部位

38
00:01:58,348 --> 00:02:00,292
本範例我們有三個相機

39
00:02:00,654 --> 00:02:02,393
一個負責場景內的動態物件

40
00:02:02,393 --> 00:02:04,795
另一個負責靜態背景

41
00:02:04,795 --> 00:02:07,337
另一個負責靜態背景

42
00:02:07,337 --> 00:02:09,337
第三個負責疊上使用者介面

43
00:02:10,127 --> 00:02:11,741
三台相機結合在一起

44
00:02:11,741 --> 00:02:14,422
呈現給使用者一個畫面

45
00:02:14,922 --> 00:02:16,505
待會我們會討論如何一次使用三台相機

46
00:02:16,505 --> 00:02:19,391
待會我們會討論如何一次使用三台相機

47
00:02:20,457 --> 00:02:22,457
當在階層裡選擇相機時

48
00:02:22,457 --> 00:02:25,164
場景會有預覽畫面

49
00:02:25,164 --> 00:02:26,984
當場景有複數相機時

50
00:02:26,984 --> 00:02:29,801
預覽可以讓我們了解不同相機的內容

51
00:02:30,301 --> 00:02:32,301
全螢幕編輯場景時預覽的好處更明顯

52
00:02:32,301 --> 00:02:34,301
全螢幕編輯場景時預覽的好處更明顯

53
00:02:34,301 --> 00:02:37,209
就算場景裡只有一台相機

54
00:02:41,328 --> 00:02:42,887
相機會呈現所有它看到的東西

55
00:02:42,887 --> 00:02:44,887
相機會呈現所有它看到的東西

56
00:02:45,387 --> 00:02:46,892
呈現多少取決於相機前的白色框體

57
00:02:46,892 --> 00:02:49,667
呈現多少取決於相機前的白色框體

58
00:02:50,236 --> 00:02:52,610
這個叫做視錐

59
00:02:52,986 --> 00:02:55,758
視錐像削去頂部的金字塔或錐體

60
00:02:55,758 --> 00:02:57,343
視錐像削去頂部的金字塔或錐體

61
00:02:57,343 --> 00:02:59,928
金字塔最頂端被削去的部分

62
00:02:59,928 --> 00:03:01,693
叫做近端視切面(Near Clipping Plane)

63
00:03:01,693 --> 00:03:03,499
最底端叫遠端視切面(Far Clipping Plane)

64
00:03:03,958 --> 00:03:05,958
近端和遠端視切面控制相機的繪製距離

65
00:03:05,958 --> 00:03:07,958
近端和遠端視切面控制相機的繪製距離

66
00:03:08,872 --> 00:03:10,872
物件必須在遠端和近端中間才會被呈現

67
00:03:10,872 --> 00:03:13,233
物件必須在遠端和近端中間才會被呈現

68
00:03:13,233 --> 00:03:15,233
四邊代表上下左右的可視範圍

69
00:03:15,233 --> 00:03:17,233
四邊代表上下左右的可視範圍

70
00:03:17,233 --> 00:03:19,233
任何在錐體裡的場景會被著色

71
00:03:19,233 --> 00:03:21,233
任何在錐體裡的場景會被著色

72
00:03:22,506 --> 00:03:24,079
相機有兩種模式

73
00:03:24,079 --> 00:03:26,232
透視模式(Perspective)

74
00:03:26,232 --> 00:03:27,723
和正射模式(Orthographic)

75
00:03:27,723 --> 00:03:29,531
這兩種模式影響視錐的形狀和大小

76
00:03:29,531 --> 00:03:31,181
這兩種模式影響視錐的形狀和大小

77
00:03:31,181 --> 00:03:33,181
以及相機看到的場景畫面

78
00:03:33,999 --> 00:03:35,999
在透視模式下相機如同真實世界的相機

79
00:03:35,999 --> 00:03:37,999
在透視模式下相機如同真實世界的相機

80
00:03:37,999 --> 00:03:39,999
有遞減透視的感覺

81
00:03:39,999 --> 00:03:42,289
我們可以看到場景裡

82
00:03:42,289 --> 00:03:44,289
表示視野的白色視錐

83
00:03:44,289 --> 00:03:46,289
距離相機越遠越大

84
00:03:46,289 --> 00:03:47,834
距離相機越遠越大

85
00:03:47,834 --> 00:03:49,834
這是普遍製作遊戲用的模式

86
00:03:49,834 --> 00:03:51,215
這是普遍製作遊戲用的模式

87
00:03:51,715 --> 00:03:53,632
正射模式不會有遞減透視

88
00:03:53,632 --> 00:03:55,632
正射模式不會有遞減透視

89
00:03:55,632 --> 00:03:57,313
所有的物件都是

90
00:03:57,313 --> 00:03:59,781
使用平行投影的方式來呈現

91
00:03:59,781 --> 00:04:01,781
可以看到場景的視錐是前後一樣寬的長方體

92
00:04:01,781 --> 00:04:04,547
可以看到場景的視錐是前後一樣寬的長方體

93
00:04:04,547 --> 00:04:06,547
這個模式通常使用在等距(Isometric)

94
00:04:06,547 --> 00:04:08,547
像是即時戰略、棋盤遊戲或2D遊戲

95
00:04:08,547 --> 00:04:10,547
像是即時戰略、棋盤遊戲或2D遊戲

96
00:04:10,547 --> 00:04:13,322
簡單的益智遊戲

97
00:04:13,322 --> 00:04:15,322
和遊戲介面例如小地圖或是抬頭顯示器

98
00:04:15,322 --> 00:04:17,322
和遊戲介面例如小地圖或是抬頭顯示器

99
00:04:17,322 --> 00:04:19,322
和遊戲介面例如小地圖或是抬頭顯示器

100
00:04:19,670 --> 00:04:21,406
要控制場景顯示多少內容

101
00:04:21,406 --> 00:04:23,685
可以調整Near和Far兩個屬性

102
00:04:23,685 --> 00:04:26,357
來改變視錐體的形狀與大小

103
00:04:26,857 --> 00:04:28,857
視野(Field of View)控制相機視野有多廣

104
00:04:28,857 --> 00:04:30,857
這和真實世界相機的Zoom很像

105
00:04:30,857 --> 00:04:33,695
這和真實世界相機的Zoom很像

106
00:04:34,195 --> 00:04:36,195
當相機使用正射模式(Orthographic)時

107
00:04:36,195 --> 00:04:38,974
屬性檢視的Field of View會變成Size

108
00:04:38,974 --> 00:04:40,400
用來控制可視區域(Viewport)的大小

109
00:04:40,400 --> 00:04:41,932
用來控制可視區域(Viewport)的大小

110
00:04:41,932 --> 00:04:44,657
這和視野(Field of View)很像

111
00:04:44,657 --> 00:04:46,657
但這裡會同時改變前後視切面的大小

112
00:04:46,657 --> 00:04:48,657
但這裡會同時改變前後視切面的大小

113
00:04:48,657 --> 00:04:50,657
因為正射相機沒有透視概念

114
00:04:50,657 --> 00:04:52,657
因為正射相機沒有透視概念

115
00:04:54,663 --> 00:04:57,148
我們的場景須要一個背景

116
00:04:58,863 --> 00:05:00,863
可以用Clear Flags和Background來設定

117
00:05:00,863 --> 00:05:02,074
可以用Clear Flags和Background來設定

118
00:05:02,408 --> 00:05:04,408
背景顏色呈現所有場景物件之後的顏色

119
00:05:04,408 --> 00:05:06,408
背景顏色呈現所有場景物件之後的顏色

120
00:05:06,408 --> 00:05:08,408
背景顏色呈現所有場景物件之後的顏色

121
00:05:08,408 --> 00:05:10,909
新建場景預設值是藍色

122
00:05:10,909 --> 00:05:13,651
新建場景預設值是藍色

123
00:05:14,552 --> 00:05:16,552
Clear Flags決定顯示背景的方式

124
00:05:16,552 --> 00:05:19,063
這個設定在複數相機時特別重要

125
00:05:19,063 --> 00:05:21,338
這個設定在複數相機時特別重要

126
00:05:21,770 --> 00:05:23,770
每台相機在著色時會儲存顏色和深度資料

127
00:05:23,770 --> 00:05:26,226
如果畫面被認為是空的就不會被呈現出來

128
00:05:26,226 --> 00:05:28,907
如果畫面被認為是空的就不會被呈現出來

129
00:05:28,907 --> 00:05:30,907
Clear Flags屬性決定

130
00:05:30,907 --> 00:05:32,907
呈現在背景的是甚麼

131
00:05:33,407 --> 00:05:35,143
如果我們有設定一個Skybox

132
00:05:35,143 --> 00:05:38,036
背景就會變成Skybox

133
00:05:38,036 --> 00:05:41,204
Skybox是相機預設的選項

134
00:05:41,555 --> 00:05:43,555
Skybox是材質的一種，包含環繞場景的圖

135
00:05:43,555 --> 00:05:45,555
Skybox是材質的一種，包含環繞場景的圖

136
00:05:45,555 --> 00:05:48,451
提供場景一個紋理背景

137
00:05:48,451 --> 00:05:50,451
更多skybox細節和使用方式

138
00:05:50,451 --> 00:05:52,451
請參閱相關章節

139
00:05:53,117 --> 00:05:55,117
如果我們沒有設定Skybox

140
00:05:55,117 --> 00:05:57,117
或是我們選用Solid color

141
00:05:57,117 --> 00:05:59,117
所有物件的背景就會呈現指定的顏色

142
00:05:59,117 --> 00:06:01,117
所有物件的背景就會呈現指定的顏色

143
00:06:01,117 --> 00:06:02,054
所有物件的背景就會呈現指定的顏色

144
00:06:02,941 --> 00:06:04,941
Depth Only主要用在多個相機的配合

145
00:06:04,941 --> 00:06:06,941
Depth Only主要用在多個相機的配合

146
00:06:06,941 --> 00:06:08,210
晚一點我們會討論

147
00:06:08,710 --> 00:06:10,710
Don't Clear產生新畫面蓋在舊畫面上

148
00:06:10,710 --> 00:06:12,710
Don't Clear產生新畫面蓋在舊畫面上

149
00:06:12,710 --> 00:06:14,710
製造出一種殘影效果，這功能不太常用

150
00:06:14,710 --> 00:06:16,154
製造出一種殘影效果，這功能不太常用

151
00:06:18,854 --> 00:06:21,439
Depth only運用在多個相機是很實用的功能

152
00:06:21,439 --> 00:06:24,205
Depth only運用在多個相機是很實用的功能

153
00:06:24,705 --> 00:06:26,705
透過這個設定相機被賦予深度這個變數

154
00:06:26,705 --> 00:06:28,705
透過這個設定相機被賦予深度這個變數

155
00:06:28,705 --> 00:06:30,705
每個相機的內容會依照深度大小交疊

156
00:06:30,705 --> 00:06:32,830
每個相機的內容會依照深度大小交疊

157
00:06:32,830 --> 00:06:34,443
從最小的深度開始

158
00:06:34,943 --> 00:06:36,943
通常主相機的深度視應該是最小的

159
00:06:36,943 --> 00:06:38,943
通常主相機的深度視應該是最小的

160
00:06:39,443 --> 00:06:41,443
而且Clear flag應該是skybox或solid color

161
00:06:41,443 --> 00:06:43,443
而且Clear flag應該是skybox或solid color

162
00:06:45,034 --> 00:06:47,034
其他的相機就設為Depth only

163
00:06:47,034 --> 00:06:49,695
其他的相機就設為Depth only

164
00:06:49,695 --> 00:06:51,695
這樣就有一個最後面的背景

165
00:06:51,695 --> 00:06:53,695
而其他相機的畫面層層疊在主相機之上

166
00:06:53,695 --> 00:06:55,695
而其他相機的畫面層層疊在主相機之上

167
00:06:56,513 --> 00:06:58,513
相機呈現哪些物件

168
00:06:58,513 --> 00:07:00,513
可以用遮罩(Culling Mask)來限制

169
00:07:00,751 --> 00:07:02,975
遮罩(Culling Mask)下拉選單會列出

170
00:07:02,975 --> 00:07:04,975
場景內圖層(Layer)的清單

171
00:07:05,309 --> 00:07:07,309
相機只會顯示有勾選的圖層項目

172
00:07:07,309 --> 00:07:10,469
相機只會顯示有勾選的圖層項目

173
00:07:10,469 --> 00:07:12,175
更多關於圖層和使用方法請參閱相關章節

174
00:07:12,175 --> 00:07:14,175
更多關於圖層和使用方法請參閱相關章節

175
00:07:15,297 --> 00:07:17,297
關於將使用者介面(UI)疊在畫面上的方法

176
00:07:17,297 --> 00:07:20,531
我們將UI物件指定到名為UI的圖層

177
00:07:21,162 --> 00:07:23,162
用來照著UI的相機在遮罩設定只顯示UI圖層

178
00:07:23,162 --> 00:07:26,439
用來照著UI的相機在遮罩設定只顯示UI圖層

179
00:07:27,146 --> 00:07:29,713
Clear flag設定為Depth only

180
00:07:29,713 --> 00:07:31,713
然後深度(Depth)設定大於其他相機

181
00:07:31,713 --> 00:07:33,532
然後深度(Depth)設定大於其他相機

182
00:07:33,532 --> 00:07:35,532
這樣的話，這台相機只會顯示

183
00:07:35,532 --> 00:07:37,532
遮罩指定的UI物件

184
00:07:37,532 --> 00:07:40,620
並依照深度設定顯示在畫面最上面

185
00:07:40,620 --> 00:07:43,702
並依照深度設定顯示在畫面最上面

186
00:07:44,202 --> 00:07:46,202
值得一提的是

187
00:07:46,202 --> 00:07:48,202
設定相機為正射(Orthographic)

188
00:07:48,202 --> 00:07:50,202
可避免產生UI元件的不需要的透視感

189
00:07:51,351 --> 00:07:53,351
一般這種多相機的使用介面

190
00:07:53,351 --> 00:07:55,351
一般這種多相機的使用介面

191
00:07:55,351 --> 00:07:57,351
用在小地圖、遊戲世界抬頭顯示器

192
00:07:57,351 --> 00:07:59,823
後照鏡或遙控導彈的液晶螢幕

193
00:07:59,823 --> 00:08:02,278
或強制物件顯示順序

194
00:08:02,278 --> 00:08:04,278
或強制物件顯示順序

195
00:08:04,278 --> 00:08:06,278
例如用這個方法讓FPS玩家手上的槍

196
00:08:06,278 --> 00:08:09,149
不會插入到遊戲建築場景內

197
00:08:09,149 --> 00:08:11,838
可視區規格化、著色路徑

198
00:08:11,838 --> 00:08:13,838
目標貼圖和高動態範圍(HDR)性能

199
00:08:13,838 --> 00:08:17,455
和更多高階功能會在其他章節介紹
