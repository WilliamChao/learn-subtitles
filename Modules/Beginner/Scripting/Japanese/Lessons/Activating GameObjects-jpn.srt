1
00:00:00,331 --> 00:00:01,926
オブジェクトをスクリプトによって

2
00:00:01,926 --> 00:00:04,228
有効化または無効化するには

3
00:00:04,228 --> 00:00:05,783
SetActive 関数を使用します。

4
00:00:06,283 --> 00:00:08,005
これによりオブジェクトをオンまたはオフに切り替えて

5
00:00:08,005 --> 00:00:10,491
シーン上でアクティブかどうかを変更します。

6
00:00:10,491 --> 00:00:12,781
このサンプルでは Start 関数があり

7
00:00:12,781 --> 00:00:14,106
gameObject.SetActive(false) が

8
00:00:14,106 --> 00:00:16,527
含まれています。

9
00:00:17,027 --> 00:00:19,027
さらに現在ゲームオブジェクトが

10
00:00:19,027 --> 00:00:20,496
アクティブであることを確認出来ます。

11
00:00:20,996 --> 00:00:24,523
もしゲーム再生をするとオブジェクトは無効化されます。

12
00:00:24,885 --> 00:00:26,803
しかしながらオブジェクトの階層で作業をするときは

13
00:00:26,803 --> 00:00:28,803
親オブジェクトを無効化できることを

14
00:00:28,803 --> 00:00:30,803
覚えておくべきです。

15
00:00:30,803 --> 00:00:32,803
これによって子オブジェクトがシーン上で

16
00:00:32,803 --> 00:00:36,025
アクティブではなくなります。しかしながら

17
00:00:36,025 --> 00:00:37,622
Hierarchy の中でアクティブであり続けます。

18
00:00:38,152 --> 00:00:39,886
これは個別のオブジェクトを無効化しつつ

19
00:00:39,886 --> 00:00:42,676
親オブジェクトを使用して

20
00:00:42,676 --> 00:00:44,676
グループに対する制御を維持できるようにするためです。

21
00:00:44,676 --> 00:00:46,676
っここでは prop_physicsDoor を選択して

22
00:00:46,676 --> 00:00:49,944
子オブジェクトである prop_physicsDoor_door を選択して

23
00:00:49,944 --> 00:00:51,944
インスペクタ上で無効化すれば

24
00:00:51,944 --> 00:00:54,540
非選択状態となり、アイコンがグレーアウトされて

25
00:00:54,540 --> 00:00:57,711
さらに名前の隣にあるボックスもチェックがオフとしてあります。

26
00:00:58,211 --> 00:01:00,211
しかし親オブジェクトを子オブジェクトの代わりに

27
00:01:00,211 --> 00:01:03,373
無効化すれば

28
00:01:03,373 --> 00:01:06,320
全ての子オブジェクトを無効化したけれども

29
00:01:06,320 --> 00:01:08,764
Hierarchy の中でアクティブのままであり、

30
00:01:08,764 --> 00:01:11,264
子オブジェクトである prop_physicsDoor_frame も同様です。

31
00:01:11,764 --> 00:01:13,764
オブジェクトがシーンの中または

32
00:01:13,764 --> 00:01:15,764
Hierarchy ビューでアクティブであるか確認するためには

33
00:01:15,764 --> 00:01:17,152
activeSelf および activeInHierarchy ステートを使用して

34
00:01:17,152 --> 00:01:20,181
クエリをかけることが出来ます。

35
00:01:20,181 --> 00:01:22,768
この CheckState スクリプトの中では

36
00:01:22,768 --> 00:01:25,335
ゲームオブジェクトのための public 変数があり、

37
00:01:25,335 --> 00:01:27,335
そのゲームオブジェクトが

38
00:01:27,335 --> 00:01:29,251
activeSelf であるか、activeInHierarchy であるか確認できます。

39
00:01:30,290 --> 00:01:32,012
ここでは 前述の prop_physicsDoor を示していて

40
00:01:32,012 --> 00:01:35,226
それらのステートを Debug.Log により

41
00:01:35,226 --> 00:01:37,226
コンソール出力しています。

42
00:01:37,726 --> 00:01:39,726
ここでゲーム再生すると

43
00:01:41,234 --> 00:01:43,234
ドアそのものが有効化され

44
00:01:43,234 --> 00:01:45,234
中にある Hierarchy もまた有効化されます。

45
00:01:45,234 --> 00:01:48,218
しかし、親オブジェクトを無効化して

46
00:01:48,218 --> 00:01:50,877
ゲーム再生すると、

47
00:01:51,653 --> 00:01:54,334
ドアそのものは有効化されますが、ドアが含まれる Hierarchy は

48
00:01:54,334 --> 00:01:56,334
無効となります。

49
00:01:56,334 --> 00:01:58,334
これは親オブジェクトが無効化されたためであり

50
00:01:58,334 --> 00:02:01,270
結果としてシーンでは有効でないためです。

51
00:02:01,270 --> 00:02:03,270
さらに親オブジェクトが無効であるために、

52
00:02:03,270 --> 00:02:05,201
子オブジェクトが無効である場合、

53
00:02:05,201 --> 00:02:07,201
setActive を true に変更しても

54
00:02:07,201 --> 00:02:09,561
子オブジェクトは

55
00:02:09,561 --> 00:02:12,467
有効になりません。有効となるのは

56
00:02:12,467 --> 00:02:14,745
親オブジェクトが有効となる時です。
