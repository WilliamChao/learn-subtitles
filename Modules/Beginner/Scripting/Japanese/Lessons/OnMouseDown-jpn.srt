1
00:00:00,249 --> 00:00:02,928
OnMouseDown 関数と、これに類似する関数により

2
00:00:02,928 --> 00:00:04,928
コライダ または GUI テキスト要素をクリックしたことを

3
00:00:04,928 --> 00:00:06,692
検知することが出来ます。

4
00:00:07,192 --> 00:00:09,192
この例ではドアのオブジェクトがあり

5
00:00:09,192 --> 00:00:12,696
ボックス コライダがあり、 Rigidbody がアタッチされてます。

6
00:00:13,887 --> 00:00:15,887
あらかじめ準備されたスクリプトでは
The script that I've written

7
00:00:16,484 --> 00:00:18,484
OnMouseDown 関数が含まれていて

8
00:00:19,150 --> 00:00:21,150
オブジェクトがクリックされたとき

9
00:00:21,150 --> 00:00:24,248
Debug.Log 、すなわちコンソール出力を実行して

10
00:00:24,248 --> 00:00:26,248
''Clicked On The Door'' と表示します。

11
00:00:28,184 --> 00:00:30,184
このためゲーム再生を行えば

12
00:00:31,554 --> 00:00:34,461
コンソールをチェックしつつ、ゲームのドアをクリックすれば

13
00:00:35,265 --> 00:00:36,961
Debug.Log が使用されます。

14
00:00:37,337 --> 00:00:39,337
同様にして、もっと面白いことをやってみましょう。
Similarly we can make it do something more

15
00:00:39,337 --> 00:00:43,341
例えば、ドア オブジェクトがクリックされたときに

16
00:00:43,341 --> 00:00:45,703
力（Force）が加わるようにしてみましょう。

17
00:00:45,703 --> 00:00:47,703
この例の中では、 オブジェクトの Forward 方向と逆向きに

18
00:00:48,203 --> 00:00:51,247
力（Force）を加えてみます。

19
00:00:51,885 --> 00:00:56,455
このため、ドアは Z 軸に沿って

20
00:00:56,455 --> 00:00:58,110
吹き飛ばされます。

21
00:00:58,775 --> 00:01:01,278
さらに重力をオンに切り替えて

22
00:01:01,278 --> 00:01:03,681
クリックされたときに倒れるようにします。

23
00:01:03,985 --> 00:01:05,985
結果は次のとおりになります。
