1
00:00:00,304 --> 00:00:02,638
Instantiate はゲームオブジェクトのクローンを作成する

2
00:00:02,638 --> 00:00:05,035
関数です。これは

3
00:00:05,035 --> 00:00:07,876
プレハブのクローンを使用する場面で主に使用されます。

4
00:00:07,876 --> 00:00:09,876
プレハブとは、単に事前設定された

5
00:00:09,876 --> 00:00:12,515
オブジェクトであり、プロジェクトの Assets に保存されます。

6
00:00:12,515 --> 00:00:14,515
ひとつの例はバズーカからロケットを発射するケースです。

7
00:00:14,515 --> 00:00:16,515
各々のロケットは

8
00:00:16,515 --> 00:00:18,515
ゲーム空間にインスタンス化して

9
00:00:18,515 --> 00:00:20,515
発射できるようにします。

10
00:00:20,515 --> 00:00:22,847
このサンプルでは  'Fire1' を使用して Instantiate 関数を

11
00:00:22,847 --> 00:00:25,230
トリガーします。もっとも基本的な

12
00:00:25,230 --> 00:00:28,179
Instantiate の使用方法では引数はひとつのみであり、

13
00:00:28,179 --> 00:00:30,179
クローンしたオブジェクトを指定します。

14
00:00:30,179 --> 00:00:32,333
このサンプルでは、 rocketPrefab と呼ばれる

15
00:00:32,333 --> 00:00:35,346
public 変数を作成して、

16
00:00:35,346 --> 00:00:37,346
これを Instantiate コマンドに渡します。

17
00:00:37,346 --> 00:00:39,346
しかし、この場合はプレハブは

18
00:00:39,346 --> 00:00:41,346
デフォルトの位置である原点に

19
00:00:41,346 --> 00:00:45,428
インスタンス化されます。このサンプルでは、その位置は

20
00:00:45,428 --> 00:00:47,428
ワールド空間の中心であり、

21
00:00:47,428 --> 00:00:49,428
バズーカが現在ある中心の位置です。

22
00:00:49,928 --> 00:00:51,399
このためゲーム再生すると

23
00:00:52,221 --> 00:00:54,400
ロケットはバズーカの中心に

24
00:00:54,400 --> 00:00:56,400
表示されます。

25
00:00:58,599 --> 00:01:00,599
その代わりにロケットのように発射したいため、

26
00:01:00,599 --> 00:01:02,599
バズーカの銃身から出てくるように

27
00:01:02,599 --> 00:01:04,057
表示される必要があります。

28
00:01:04,557 --> 00:01:06,557
このためには、Instantiate のわずかに異なった

29
00:01:06,557 --> 00:01:09,084
バージョンが必要です。この Instantiate のバージョンでは

30
00:01:09,084 --> 00:01:11,084
3 つの変数が必要です。

31
00:01:11,084 --> 00:01:13,584
インスタンス化されるオブジェクト、すなわち今回はロケットと、

32
00:01:13,584 --> 00:01:15,929
プレハブの新しいクローンを作成するための Position および

33
00:01:15,929 --> 00:01:19,265
Rotation です。

34
00:01:22,721 --> 00:01:24,721
あらかじめ空のゲームオブジェクトを作成して

35
00:01:24,721 --> 00:01:26,956
バズーカの銃身の前に

36
00:01:26,956 --> 00:01:29,213
配置しています。BarrelEnd と呼ばれる

37
00:01:29,213 --> 00:01:31,686
public 変数を作成して、さらに

38
00:01:31,686 --> 00:01:34,019
このコンポーネントの Position および Rotation の値を使用して

39
00:01:34,019 --> 00:01:36,413
新しいロケット プレハブの新しいクローンが出来ます。

40
00:01:36,413 --> 00:01:39,214
これを新しい場所に

41
00:01:39,214 --> 00:01:42,988
インスペクタ上の空の場所に

42
00:01:42,988 --> 00:01:44,988
ドラッグ＆ドロップすることで

43
00:01:44,988 --> 00:01:48,038
Transform の Position および Rotation について

44
00:01:48,038 --> 00:01:50,909
BarrelEnd 変数を使用できます。

45
00:01:50,909 --> 00:01:53,674
このためゲーム再生して、 Fire を押すと

46
00:01:56,163 --> 00:01:58,163
ロケットは正しい場所に登場します。

47
00:01:58,163 --> 00:02:00,163
しかし、現時点ではただ落下して、

48
00:02:00,163 --> 00:02:01,788
期待している動きではありません。

49
00:02:01,788 --> 00:02:03,788
インスタンス化により作成したオブジェクト

50
00:02:03,788 --> 00:02:05,788
を変更できることが必要です。

51
00:02:05,788 --> 00:02:07,788
すなわち、ロケットのクローンであり、

52
00:02:07,788 --> 00:02:09,788
通常の Instantiate は Object と呼ばれる型を

53
00:02:09,788 --> 00:02:13,064
戻します。しかしロケットを発射するためには

54
00:02:13,064 --> 00:02:16,099
型を Rigidbody に変更します。

55
00:02:16,099 --> 00:02:18,662
これを実現するためには Instantiate コールの後に

56
00:02:18,662 --> 00:02:20,816
RigidBody を使用して戻り値を

57
00:02:20,816 --> 00:02:23,865
rigidbody 変数に格納し、

58
00:02:23,865 --> 00:02:26,291
rocketInstance と呼ぶことにします。

59
00:02:26,291 --> 00:02:28,291
ここで rocketInstance と呼ばれる

60
00:02:28,291 --> 00:02:30,662
Ridibody 変数をセットアップして

61
00:02:30,662 --> 00:02:32,662
変数を Instantiate 関数の戻り値と

62
00:02:32,662 --> 00:02:34,961
等しくします。これにより

63
00:02:34,961 --> 00:02:38,677
これは Rigidbody であり rocket インスタンスの変数を使用して

64
00:02:38,677 --> 00:02:41,219
Rigidbody クラスの中にある全て、

65
00:02:41,219 --> 00:02:44,893
例えば addForce を見つけることが出来ます。

66
00:02:45,890 --> 00:02:47,890
そして再び barrelEnd の Transform を使用して

67
00:02:47,890 --> 00:02:51,062
Force を追加した方向を

68
00:02:51,062 --> 00:02:53,062
取得することが出来ます。

69
00:02:54,170 --> 00:02:57,242
さらにこれに特定の量を掛け算することが出来ます。

70
00:02:59,869 --> 00:03:01,869
これでゲーム再生をして、

71
00:03:02,935 --> 00:03:05,802
発射したとき、作成したクローンに

72
00:03:05,802 --> 00:03:08,161
Force を加えることによって

73
00:03:08,161 --> 00:03:10,161
ロケットは遠くへ発射されます。

74
00:03:11,946 --> 00:03:14,126
多くのクローンをゲームの中で作成したとき

75
00:03:14,126 --> 00:03:16,126
それらはシーンの中に

76
00:03:16,126 --> 00:03:18,450
残ります。もし

77
00:03:18,450 --> 00:03:20,450
このようなことをする場合、

78
00:03:20,450 --> 00:03:21,953
一定時間の後にワールド空間から破棄するスクリプトが

79
00:03:21,953 --> 00:03:24,785
必要な場合があります。

80
00:03:24,785 --> 00:03:27,646
ここではプレハブは RocketDestruction スクリプトがあり、

81
00:03:27,646 --> 00:03:29,646
1.5 秒後に

82
00:03:29,646 --> 00:03:31,646
オブジェクトを破棄します。
