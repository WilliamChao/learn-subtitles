1
00:00:00,221 --> 00:00:01,671
このセクションでは、パッケージとして Robot Lab があると理解が進むので

2
00:00:01,671 --> 00:00:03,671
お持ちでなければこのページのリンク先から

3
00:00:03,671 --> 00:00:05,505
是非ダウンロードして下さい。

4
00:00:05,505 --> 00:00:07,129
スクリプト初心者であれば最初に試すと良いのが

5
00:00:07,129 --> 00:00:09,129
Unityでは典型的なスクリプトである、

6
00:00:09,129 --> 00:00:11,129
キューブを回転させる、という今回のテーマです。

7
00:00:11,129 --> 00:00:13,584
初歩的な内容ながら

8
00:00:13,584 --> 00:00:15,221
一回試しておくことが重要です。

9
00:00:15,221 --> 00:00:17,221
最初に挙げた Robot Lab がなくとも

10
00:00:17,221 --> 00:00:19,221
通常の原始的なキューブでも代用出来ますが、

11
00:00:19,221 --> 00:00:21,221
パッケージをダウンロードしておけば、

12
00:00:21,221 --> 00:00:23,221
他のセクションでも活用できます。

13
00:00:23,221 --> 00:00:26,963
このセクションでは空のシーンを開くために

14
00:00:26,963 --> 00:00:29,392
プロジェクト パネルの Scenes フォルダに移動します。

15
00:00:29,892 --> 00:00:31,892
次にメニューから File - Save Scene によりバックアップします。

16
00:00:31,892 --> 00:00:36,628
Spinning Cube という名前で保存して下さい。

17
00:00:38,744 --> 00:00:40,744
場所は Scenes フォルダに保存します。

18
00:00:41,948 --> 00:00:43,948
Save As により実行した後は、そのシーンをすでに開いた状態に

19
00:00:43,948 --> 00:00:45,368
なっています。

20
00:00:46,849 --> 00:00:48,849
Models フォルダに移動して

21
00:00:48,849 --> 00:00:51,277
powercube を開いて

22
00:00:51,277 --> 00:00:53,277
シーン上にドラッグして下さい。

23
00:00:53,777 --> 00:00:55,777
位置調整ツールを使用して

24
00:00:56,829 --> 00:00:59,975
Y 軸上をドラッグします。

25
00:00:59,975 --> 00:01:01,863
さらにシーンビュー上にカーソルを置いたまま

26
00:01:01,863 --> 00:01:04,839
F キーを押下することでオブジェクトにフォーカスがあてられます。

27
00:01:04,839 --> 00:01:07,103
さらにライティングのセットアップも手短に行います。

28
00:01:07,103 --> 00:01:09,103

オブジェクトが dynamic objects レイヤーにあることを
29
00:01:09,103 --> 00:01:10,745
確認して下さい。

30
00:01:11,423 --> 00:01:13,423
さらにオブジェクトの Mesh Renderer 上で

31
00:01:13,423 --> 00:01:15,423
Use Light Probes のチェックボックスオンにして下さい。

32
00:01:18,036 --> 00:01:19,746
次にスクリプト作成をします。

33
00:01:20,246 --> 00:01:22,065
インスペクタの最下部にある Add Component ボタンを押下します。

34
00:01:22,065 --> 00:01:25,429
New Script を選択して

35
00:01:26,702 --> 00:01:28,702
新しいスクリプトに Spin と名前をつけて

36
00:01:29,202 --> 00:01:31,202
Create を押すことで追加します。

37
00:01:34,188 --> 00:01:36,188
追加した後はアイコンをダブルクリックして

38
00:01:36,188 --> 00:01:38,619
スクリプトを編集します。

39
00:01:39,572 --> 00:01:41,572
キューブを回転するために

40
00:01:41,572 --> 00:01:44,789
毎フレームごとに Transform を更新する必要があります。

41
00:01:44,789 --> 00:01:47,582
このために Update 関数を使います。

42
00:01:47,582 --> 00:01:49,582
スクリプトに含まれるStart 関数を

43
00:01:49,582 --> 00:01:50,975
コメントごと削除して下さい。

44
00:01:51,475 --> 00:01:53,144
インスペクタを通して

45
00:01:53,144 --> 00:01:55,144
スピードを調整出来るようにするために

46
00:01:55,144 --> 00:01:57,144
public 変数を作成して

47
00:01:57,144 --> 00:01:58,490
調整出来るようにします。

48
00:01:58,990 --> 00:02:01,787
まずはfloat 型の  public 変数を追加して、

49
00:02:01,787 --> 00:02:04,790
'speed' と名前をつけて小数点付きの数字とします。

50
00:02:04,790 --> 00:02:07,401
次に前述のとおりオブジェクトの Transform を更新する処理をみていきます。

51
00:02:07,401 --> 00:02:10,002
それでは Transform.Rotate を

52
00:02:10,002 --> 00:02:13,907
記述していきます。

53
00:02:14,877 --> 00:02:16,724
{} の中に Rotation を指定しますが、

54
00:02:16,724 --> 00:02:20,046
ここでは Vector3.Up を使用します。これはワールド座標で上向きを

55
00:02:20,046 --> 00:02:22,046
指定するショートカットであり、

56
00:02:22,046 --> 00:02:26,041
 (0, 1, 0) という Vector3 変数と同じです。

57
00:02:26,041 --> 00:02:28,768
次に speed 変数を使用して、

58
00:02:28,768 --> 00:02:32,607
Time.deltaTime を乗算することで

59
00:02:32,607 --> 00:02:34,441
スムーズな動作にします。

60
00:02:34,441 --> 00:02:36,066
もし deltaTime が良く分からなければ

61
00:02:36,066 --> 00:02:38,066
下にあるリンクのレッスン内容を確認して下さい。

62
00:02:38,066 --> 00:02:40,569
次に speed 変数にデフォルト値を指定します。

63
00:02:40,569 --> 00:02:43,070
完了した後は

64
00:02:43,070 --> 00:02:46,154
スクリプトを保存して Unity に戻ります。

65
00:02:46,654 --> 00:02:48,654
後は Play ボタンを押下して、

66
00:02:49,154 --> 00:02:51,621
回転するキューブは完了です。さらに

67
00:02:51,621 --> 00:02:54,179
speed 変数を public 変数としたので

68
00:02:54,179 --> 00:02:55,495
ゲーム再生中に変数の調整することが

69
00:02:56,907 --> 00:02:58,907
出来ます。

70
00:03:11,299 --> 00:03:12,927
シーンを完了するためにもう一つやるべきとことは

71
00:03:12,927 --> 00:03:15,382
カメラの調整なので

72
00:03:15,382 --> 00:03:17,689
カメラを選択して camera01 を選択

73
00:03:17,689 --> 00:03:18,964
します。

74
00:03:19,644 --> 00:03:22,450
次にシーン ビューを選択して

75
00:03:22,450 --> 00:03:24,754
ゲームで表示したい状態まで動かして、

76
00:03:25,143 --> 00:03:26,689
カメラを選択したまま、

77
00:03:26,689 --> 00:03:29,975
メニューから Game Object -> Align With View を選択します。

78
00:03:31,069 --> 00:03:33,069
これによりシーン ビューで表示したとおりに

79
00:03:33,069 --> 00:03:35,069
カメラの移動がなされます。

80
00:03:35,735 --> 00:03:37,457
後は、再生することで

81
00:03:37,917 --> 00:03:39,917
作業結果を確認して下さい。
(翻訳:gamesonytablet)
