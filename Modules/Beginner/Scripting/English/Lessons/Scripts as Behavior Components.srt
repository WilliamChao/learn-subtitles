1
00:00:00,442 --> 00:00:02,769
Scripts should be considered as behaviour

2
00:00:02,769 --> 00:00:04,409
components in Unity.

3
00:00:04,633 --> 00:00:06,633
As with other components in Unity they can

4
00:00:06,633 --> 00:00:08,288
be applied to objects and are seen

5
00:00:08,288 --> 00:00:09,538
in the inspector.

6
00:00:10,038 --> 00:00:12,442
With this particular example, this cube

7
00:00:12,442 --> 00:00:15,245
has a rigidbody component which gives it

8
00:00:15,245 --> 00:00:18,158
a physical mass. And when you press play

9
00:00:18,158 --> 00:00:19,697
the cube falls to the ground

10
00:00:19,697 --> 00:00:21,697
as it uses gravity.

11
00:00:22,197 --> 00:00:25,054
We also have added an examples script.

12
00:00:25,872 --> 00:00:28,284
This behaviour script has code in it

13
00:00:28,284 --> 00:00:30,284
which changes the colour of the cube

14
00:00:30,284 --> 00:00:32,703
by effecting the colour value of the

15
00:00:32,703 --> 00:00:35,397
default material attached to that object.

16
00:00:36,228 --> 00:00:38,925
When we press the R key on the keyboard

17
00:00:39,425 --> 00:00:41,187
the colour gets changed to red.

18
00:00:41,411 --> 00:00:43,360
When we press G the colour gets 

19
00:00:43,360 --> 00:00:46,016
changed to green. And when we press B

20
00:00:46,016 --> 00:00:47,460
it gets changed to blue.

21
00:00:47,877 --> 00:00:49,877
By attaching this script to the object

22
00:00:49,877 --> 00:00:51,877
when we refer to game object

23
00:00:51,877 --> 00:00:54,185
we're referring to this particular item.

24
00:00:54,630 --> 00:00:56,630
We then drill down to the value that we want

25
00:00:56,630 --> 00:00:59,597
and effect it. Here we're addressing the

26
00:00:59,597 --> 00:01:01,597
game object this script is attached to,

27
00:01:01,597 --> 00:01:03,597
we're then addressing the renderer,

28
00:01:04,097 --> 00:01:06,097
which is the component seen here,

29
00:01:06,097 --> 00:01:08,567
mesh renderer. We're then addressing the

30
00:01:08,567 --> 00:01:10,678
material attached to that renderer and 

31
00:01:10,678 --> 00:01:12,958
finally the colour of that material.

32
00:01:13,209 --> 00:01:16,212
And we're setting it to a shortcut called red

33
00:01:16,532 --> 00:01:18,351
which is part of the colour class.

34
00:01:18,351 --> 00:01:19,992
Let's see this in action.

35
00:01:20,422 --> 00:01:23,437
If I press play, then use the R, G or B

36
00:01:23,437 --> 00:01:26,233
keys on the keyboard I can change the colour.

37
00:01:26,567 --> 00:01:28,245
And you can see that the material

38
00:01:28,245 --> 00:01:29,662
is being effected.

39
00:01:30,162 --> 00:01:32,945
So this material is applied to the renderer,

40
00:01:33,335 --> 00:01:35,625
default diffuse, you can see that listed there,

41
00:01:36,125 --> 00:01:38,848
and we're then effecting the main colour value

42
00:01:38,848 --> 00:01:40,848
and setting it to a certain value in here.

43
00:01:41,086 --> 00:01:43,086
The same as it would if I was actually

44
00:01:43,086 --> 00:01:45,086
doing it by hand in the editor.

45
00:01:45,724 --> 00:01:48,343
Scripts can be created in the project panel

46
00:01:48,343 --> 00:01:50,343
by choosing Create and then choosing

47
00:01:50,343 --> 00:01:52,343
a language of your choice.

48
00:01:52,843 --> 00:01:53,937
For example, 

49
00:01:57,309 --> 00:01:59,309
they can then be attached to objects either

50
00:01:59,309 --> 00:02:00,973
by dragging and dropping

51
00:02:03,766 --> 00:02:06,765
or by choosing the Add Component button

52
00:02:06,765 --> 00:02:08,765
at the bottom of the Component menu

53
00:02:08,765 --> 00:02:10,765
and then choosing from the list of scripts

54
00:02:10,765 --> 00:02:12,422
in your current project.

55
00:02:13,060 --> 00:02:15,060
Scripts can also be created using the 

56
00:02:15,060 --> 00:02:16,862
Add Component button by choosing 

57
00:02:16,862 --> 00:02:18,862
New Script from the bottom and naming

58
00:02:18,862 --> 00:02:21,351
the script and selecting a language type

59
00:02:21,351 --> 00:02:22,518
from the drop-down menu.

60
00:02:22,963 --> 00:02:26,675
This can then be created and added in one step.

61
00:02:31,664 --> 00:02:33,664
The final way to add a script to your

62
00:02:33,664 --> 00:02:36,594
object is to select the object in the hierarchy

63
00:02:36,594 --> 00:02:39,385
and then choose Components - Scripts

64
00:02:39,385 --> 00:02:41,274
and then choose from the list of scripts

65
00:02:41,274 --> 00:02:43,274
in your current project. Of course you can

66
00:02:43,274 --> 00:02:45,190
apply scripts to do all manner of other

67
00:02:45,190 --> 00:02:47,413
behaviours of objects. Try to think of

68
00:02:47,413 --> 00:02:49,413
scripts as components that you create

69
00:02:49,413 --> 00:02:51,413
yourself, allowing you to create

70
00:02:51,413 --> 00:02:53,413
behaviour for different game objects in

71
00:02:53,413 --> 00:02:55,413
your game, this could be characters,

72
00:02:55,413 --> 00:02:57,413
it could be environments or it could be

73
00:02:57,413 --> 00:02:59,148
scripts that manage the functionality

74
00:02:59,148 --> 00:02:59,846
of the game. 

75
00:03:00,346 --> 00:03:02,346
This example script that we've looked at

76
00:03:02,346 --> 00:03:04,553
is written in C# but in Unity

77
00:03:04,553 --> 00:03:08,582
you can write in Javascript, C# and Boo.

78
00:03:08,972 --> 00:03:11,097
Boo is a derivative of Python, though

79
00:03:11,097 --> 00:03:13,415
it's not as commonly used as the other two.

80
00:03:13,653 --> 00:03:16,149
So you'll likely see Javascript or C#

81
00:03:16,149 --> 00:03:18,149
examples when you see scripting

82
00:03:18,149 --> 00:03:20,149
from Unity around the web. The videos

83
00:03:20,149 --> 00:03:22,149
that you see in this learning area

84
00:03:22,149 --> 00:03:24,149
will be written in C# but we'll also

85
00:03:24,149 --> 00:03:26,252
provide the Javascript equivalent

86
00:03:26,252 --> 00:03:27,642
beneath the video.
